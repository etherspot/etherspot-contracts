{
  "address": "0x5E0649FD1FdBE671A5971A7eE6a0b7D3A6ba9B68",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "depositAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "DepositAccountDeployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "depositAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "DepositWithdrawalRejected",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "depositAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lockedUntil",
          "type": "uint256"
        }
      ],
      "name": "DepositWithdrawalRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "depositAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DepositWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "guardian",
          "type": "address"
        }
      ],
      "name": "GuardianAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "guardian",
          "type": "address"
        }
      ],
      "name": "GuardianRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "uid",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PaymentChannelCommitted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "channelHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "PaymentDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "channelHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "depositValue",
          "type": "uint256"
        }
      ],
      "name": "PaymentSplit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "channelHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "PaymentWithdrawn",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "accountOwnerRegistry",
      "outputs": [
        {
          "internalType": "contract AccountOwnerRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accountProofRegistry",
      "outputs": [
        {
          "internalType": "contract AccountProofRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guardian",
          "type": "address"
        }
      ],
      "name": "addGuardian",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "uid",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "senderSignature",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "guardianSignature",
          "type": "bytes"
        }
      ],
      "name": "commitPaymentChannelAndDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "uid",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "depositPaymentValue",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "senderSignature",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "guardianSignature",
          "type": "bytes"
        }
      ],
      "name": "commitPaymentChannelAndSplit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "uid",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "senderSignature",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "guardianSignature",
          "type": "bytes"
        }
      ],
      "name": "commitPaymentChannelAndWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "computeDepositAccountAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "uid",
          "type": "bytes32"
        }
      ],
      "name": "computePaymentChannelHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "deployDepositAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositWithdrawalLockPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gateway",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getDepositWithdrawalLockedUntil",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "getPaymentChannelCommittedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct PaymentRegistry.PaymentChannelCommit",
          "name": "paymentChannelCommit",
          "type": "tuple"
        }
      ],
      "name": "hashPaymentChannelCommit",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract AccountOwnerRegistry",
          "name": "accountOwnerRegistry_",
          "type": "address"
        },
        {
          "internalType": "contract AccountProofRegistry",
          "name": "accountProofRegistry_",
          "type": "address"
        },
        {
          "internalType": "contract PersonalAccountRegistry",
          "name": "personalAccountRegistry_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "depositWithdrawalLockPeriod_",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "guardians_",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "gateway_",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "typedDataDomainNameHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "typedDataDomainVersionHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "typedDataDomainSalt",
          "type": "bytes32"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "isDepositAccountDeployed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guardian",
          "type": "address"
        }
      ],
      "name": "isGuardian",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isInitialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "personalAccountRegistry",
      "outputs": [
        {
          "internalType": "contract PersonalAccountRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guardian",
          "type": "address"
        }
      ],
      "name": "removeGuardian",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "typedDataDomainSeparator",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "messageHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "verifyGuardianSignature",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "withdrawDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x2b593c44386396aa80a74ec2fcc2df9f414fb4780e44c50d20aaf06e3651a0ce",
  "receipt": {
    "to": null,
    "from": "0xae32631bdbb2474CC11594268427A2da3D6aBd6B",
    "contractAddress": "0x5E0649FD1FdBE671A5971A7eE6a0b7D3A6ba9B68",
    "transactionIndex": 0,
    "gasUsed": "1918163",
    "logsBloom": "0x
    "blockHash": "0x21fde3856c83c6531f553b2615428ddb13ae95617849764922c6dcc26f890129",
    "transactionHash": "0x2b593c44386396aa80a74ec2fcc2df9f414fb4780e44c50d20aaf06e3651a0ce",
    "logs": [],
    "blockNumber": 1033,
    "cumulativeGasUsed": "1918163",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "d3df566cd311e2cad327d1b461b99b1b",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"depositAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"DepositAccountDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"depositAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"DepositWithdrawalRejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"depositAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockedUntil\",\"type\":\"uint256\"}],\"name\":\"DepositWithdrawalRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"depositAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"GuardianAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"GuardianRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PaymentChannelCommitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"channelHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"PaymentDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"channelHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositValue\",\"type\":\"uint256\"}],\"name\":\"PaymentSplit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"channelHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"PaymentWithdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"accountOwnerRegistry\",\"outputs\":[{\"internalType\":\"contract AccountOwnerRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accountProofRegistry\",\"outputs\":[{\"internalType\":\"contract AccountProofRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"addGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"senderSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"guardianSignature\",\"type\":\"bytes\"}],\"name\":\"commitPaymentChannelAndDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositPaymentValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"senderSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"guardianSignature\",\"type\":\"bytes\"}],\"name\":\"commitPaymentChannelAndSplit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"senderSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"guardianSignature\",\"type\":\"bytes\"}],\"name\":\"commitPaymentChannelAndWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"computeDepositAccountAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"computePaymentChannelHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"deployDepositAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositWithdrawalLockPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gateway\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getDepositWithdrawalLockedUntil\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"getPaymentChannelCommittedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct PaymentRegistry.PaymentChannelCommit\",\"name\":\"paymentChannelCommit\",\"type\":\"tuple\"}],\"name\":\"hashPaymentChannelCommit\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract AccountOwnerRegistry\",\"name\":\"accountOwnerRegistry_\",\"type\":\"address\"},{\"internalType\":\"contract AccountProofRegistry\",\"name\":\"accountProofRegistry_\",\"type\":\"address\"},{\"internalType\":\"contract PersonalAccountRegistry\",\"name\":\"personalAccountRegistry_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"depositWithdrawalLockPeriod_\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"guardians_\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"gateway_\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"typedDataDomainNameHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"typedDataDomainVersionHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"typedDataDomainSalt\",\"type\":\"bytes32\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"isDepositAccountDeployed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"isGuardian\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"personalAccountRegistry\",\"outputs\":[{\"internalType\":\"contract PersonalAccountRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"removeGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"typedDataDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"verifyGuardianSignature\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"public constructor\"}},\"title\":\"PaymentRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/payment/PaymentRegistry.sol\":\"PaymentRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/account/AccountOwnerRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\n\\nimport \\\"../common/libs/BlockLib.sol\\\";\\n\\n\\n/**\\n * @title AccountOwnerRegistry\\n */\\ncontract AccountOwnerRegistry {\\n  using BlockLib for BlockLib.BlockRelated;\\n\\n  mapping(address => mapping(address => BlockLib.BlockRelated)) private accountOwners;\\n\\n  // events\\n\\n  event AccountOwnerAdded(\\n    address account,\\n    address owner\\n  );\\n\\n  event AccountOwnerRemoved(\\n    address account,\\n    address owner\\n  );\\n\\n  // external functions\\n\\n  function addAccountOwner(\\n    address owner\\n  )\\n    external\\n  {\\n    require(\\n      !accountOwners[msg.sender][owner].verifyAtCurrentBlock()\\n    );\\n\\n    accountOwners[msg.sender][owner].added = true;\\n    accountOwners[msg.sender][owner].removedAtBlockNumber = 0;\\n\\n    emit AccountOwnerAdded(\\n      msg.sender,\\n      owner\\n    );\\n  }\\n\\n  function removeAccountOwner(\\n    address owner\\n  )\\n    external\\n  {\\n    require(\\n      accountOwners[msg.sender][owner].verifyAtCurrentBlock()\\n    );\\n\\n    accountOwners[msg.sender][owner].removedAtBlockNumber = block.number;\\n\\n    emit AccountOwnerRemoved(\\n      msg.sender,\\n      owner\\n    );\\n  }\\n\\n  // external functions (views)\\n\\n  function verifyAccountOwner(\\n    address account,\\n    address owner\\n  )\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return accountOwners[account][owner].verifyAtCurrentBlock();\\n  }\\n\\n  function verifyAccountOwnerAtBlock(\\n    address account,\\n    address owner,\\n    uint256 blockNumber\\n  )\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return accountOwners[account][owner].verifyAtBlock(blockNumber);\\n  }\\n}\\n\",\"keccak256\":\"0x4743737568306a942c7ae516f399de98c461be9276a0a2aabc46a195b96487f4\",\"license\":\"MIT\"},\"src/account/AccountProofRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\n\\nimport \\\"../common/libs/BlockLib.sol\\\";\\n\\n\\n/**\\n * @title AccountProofRegistry\\n */\\ncontract AccountProofRegistry {\\n  using BlockLib for BlockLib.BlockRelated;\\n\\n  mapping(address => mapping(bytes32 => BlockLib.BlockRelated)) private accountProofs;\\n\\n  // events\\n\\n  event AccountProofAdded(\\n    address account,\\n    bytes32 hash\\n  );\\n\\n  event AccountProofRemoved(\\n    address account,\\n    bytes32 hash\\n  );\\n\\n  // external functions\\n\\n  function addAccountProof(\\n    bytes32 hash\\n  )\\n    external\\n  {\\n    require(\\n      !accountProofs[msg.sender][hash].verifyAtCurrentBlock()\\n    );\\n\\n    accountProofs[msg.sender][hash].added = true;\\n    accountProofs[msg.sender][hash].removedAtBlockNumber = 0;\\n\\n    emit AccountProofAdded(\\n      msg.sender,\\n      hash\\n    );\\n  }\\n\\n  function removeAccountProof(\\n    bytes32 hash\\n  )\\n    external\\n  {\\n    require(\\n      accountProofs[msg.sender][hash].verifyAtCurrentBlock()\\n    );\\n\\n    accountProofs[msg.sender][hash].removedAtBlockNumber = block.number;\\n\\n    emit AccountProofRemoved(\\n      msg.sender,\\n      hash\\n    );\\n  }\\n\\n  // external functions (views)\\n\\n  function verifyAccountProof(\\n    address account,\\n    bytes32 hash\\n  )\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return accountProofs[account][hash].verifyAtCurrentBlock();\\n  }\\n\\n  function verifyAccountProofAtBlock(\\n    address account,\\n    bytes32 hash,\\n    uint256 blockNumber\\n  )\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return accountProofs[account][hash].verifyAtBlock(blockNumber);\\n  }\\n}\\n\",\"keccak256\":\"0x5a5ae02d2a37eec4e017f327bd16dd842ec9478a3697b0e7921df93cedf31e80\",\"license\":\"MIT\"},\"src/common/access/Controlled.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\n\\n/**\\n * @title Controlled\\n */\\ncontract Controlled {\\n  address public controller;\\n\\n  // modifiers\\n\\n  modifier onlyController() {\\n    require(\\n      msg.sender == controller\\n    );\\n\\n    _;\\n  }\\n\\n  /**\\n   * @dev internal constructor\\n   */\\n  constructor()\\n    internal\\n  {\\n    controller = msg.sender;\\n  }\\n}\\n\",\"keccak256\":\"0x76ed9cfb2c6bb62eec77f831e65457bf3c74adfdf0dcaafe4b4dfda8ba346972\",\"license\":\"MIT\"},\"src/common/access/Guarded.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\n\\nimport \\\"../libs/SignatureLib.sol\\\";\\n\\n\\n/**\\n * @title Guarded\\n */\\ncontract Guarded {\\n  using SignatureLib for bytes32;\\n\\n  mapping(address => bool) private guardians;\\n\\n  // events\\n\\n  event GuardianAdded(\\n    address guardian\\n  );\\n\\n  event GuardianRemoved(\\n    address guardian\\n  );\\n\\n  // modifiers\\n\\n  modifier onlyGuardian() {\\n    require(\\n      guardians[msg.sender]\\n    );\\n\\n    _;\\n  }\\n\\n  // external functions\\n\\n  function addGuardian(\\n    address guardian\\n  )\\n    external\\n    onlyGuardian\\n  {\\n    _addGuardian(guardian);\\n  }\\n\\n  function removeGuardian(\\n    address guardian\\n  )\\n    external\\n    onlyGuardian\\n  {\\n    require(\\n      msg.sender != guardian\\n    );\\n\\n    require(\\n      guardians[guardian]\\n    );\\n\\n    guardians[guardian] = false;\\n\\n    emit GuardianRemoved(\\n      guardian\\n    );\\n  }\\n\\n  // external functions (views)\\n\\n  function isGuardian(\\n    address guardian\\n  )\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return guardians[guardian];\\n  }\\n\\n  function verifyGuardianSignature(\\n    bytes32 messageHash,\\n    bytes calldata signature\\n  )\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return _verifyGuardianSignature(\\n      messageHash,\\n      signature\\n    );\\n  }\\n\\n  // internal functions\\n\\n  function _initializeGuarded(\\n    address[] memory guardians_\\n  )\\n    internal\\n  {\\n    if (guardians_.length == 0) {\\n      guardians[msg.sender] = true;\\n    } else {\\n      uint guardiansLen = guardians_.length;\\n      for (uint i = 0; i < guardiansLen; i++) {\\n        _addGuardian(guardians_[i]);\\n      }\\n    }\\n  }\\n\\n\\n  // internal functions (views)\\n\\n  function _verifyGuardianSignature(\\n    bytes32 messageHash,\\n    bytes memory signature\\n  )\\n    internal\\n    view\\n    returns (bool)\\n  {\\n    address guardian = messageHash.recoverAddress(signature);\\n\\n    return guardians[guardian];\\n  }\\n\\n  // private functions\\n\\n  function _addGuardian(\\n    address guardian\\n  )\\n    private\\n  {\\n    require(\\n      guardian != address(0)\\n    );\\n\\n    require(\\n      !guardians[guardian]\\n    );\\n\\n    guardians[guardian] = true;\\n\\n    emit GuardianAdded(guardian);\\n  }\\n}\\n\",\"keccak256\":\"0xe496b3b2b919de467bec38314083aca7ef7608a455ca0e7bf40ee6d5d511d21e\",\"license\":\"MIT\"},\"src/common/account/Account.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\n\\nimport \\\"../access/Controlled.sol\\\";\\n\\n\\n/**\\n * @title Account\\n */\\ncontract Account is Controlled {\\n  /**\\n   * @dev public constructor\\n   */\\n  constructor() public payable Controlled() {}\\n\\n  /**\\n   * @dev receive\\n   */\\n  receive()\\n    external\\n    payable\\n  {\\n    //\\n  }\\n\\n  // external functions\\n\\n  function executeTransaction(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  )\\n    external\\n    onlyController\\n    returns (bytes memory)\\n  {\\n    bytes memory result;\\n    bool succeeded;\\n\\n    // solhint-disable-next-line avoid-call-value, avoid-low-level-calls\\n    (succeeded, result) = payable(to).call{value: value}(data);\\n\\n    require(\\n      succeeded\\n    );\\n\\n    return result;\\n  }\\n}\\n\",\"keccak256\":\"0x0e3292e52b0370120bd249e6519fa91fff6dd77663d72ea68e9529446daaf78f\",\"license\":\"MIT\"},\"src/common/account/AccountController.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\n\\nimport \\\"./Account.sol\\\";\\n\\n\\n/**\\n * @title AccountController\\n */\\ncontract AccountController {\\n  /**\\n   * @dev internal constructor\\n   */\\n  constructor() internal {}\\n\\n  // internal functions\\n\\n  function _deployAccount(\\n    bytes32 salt\\n  )\\n    internal\\n    returns (address)\\n  {\\n    return address(new Account{salt: salt}());\\n  }\\n\\n  function _executeAccountTransaction(\\n    address account,\\n    address to,\\n    uint256 value,\\n    bytes memory data\\n  )\\n    internal\\n    returns (bytes memory)\\n  {\\n    require(\\n      to != address(0)\\n    );\\n\\n    require(\\n      to != address(this)\\n    );\\n\\n    require(\\n      to != account\\n    );\\n\\n    return Account(payable(account)).executeTransaction(\\n      to,\\n      value,\\n      data\\n    );\\n  }\\n\\n  // internal functions (views)\\n\\n  function _computeAccountAddress(\\n    bytes32 salt\\n  )\\n    internal\\n    view\\n    returns (address)\\n  {\\n    bytes memory creationCode = type(Account).creationCode;\\n\\n    bytes32 data = keccak256(\\n      abi.encodePacked(\\n        bytes1(0xff),\\n        address(this),\\n        salt,\\n        keccak256(creationCode)\\n      )\\n    );\\n\\n    return address(uint160(uint256(data)));\\n  }\\n}\\n\",\"keccak256\":\"0x7b8678ec86f838eff3043b19697f1cf898e8be0c69ee71e7505ada59ece5bbcb\",\"license\":\"MIT\"},\"src/common/libs/BlockLib.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\n\\n/**\\n * @title BlockLib\\n */\\nlibrary BlockLib {\\n  struct BlockRelated {\\n    bool added;\\n    uint256 removedAtBlockNumber;\\n  }\\n\\n  function verifyAtCurrentBlock(\\n    BlockRelated memory self\\n  )\\n    internal\\n    view\\n    returns (bool)\\n  {\\n    return verifyAtBlock(self, block.number);\\n  }\\n\\n  function verifyAtAnyBlock(\\n    BlockRelated memory self\\n  )\\n    internal\\n    pure\\n    returns (bool)\\n  {\\n    return verifyAtBlock(self, 0);\\n  }\\n\\n  function verifyAtBlock(\\n    BlockRelated memory self,\\n    uint256 blockNumber\\n  )\\n    internal\\n    pure\\n    returns (bool)\\n  {\\n    bool result = false;\\n\\n    if (self.added) {\\n      if (self.removedAtBlockNumber == 0) {\\n        result = true;\\n      } else if (blockNumber == 0) {\\n        result = true;\\n      } else {\\n        result = self.removedAtBlockNumber > blockNumber;\\n      }\\n    }\\n\\n    return result;\\n  }\\n}\\n\",\"keccak256\":\"0x152b840d2876cd9e0cdef42ec4faaa7ecd1562b290f35c59cad584feb129166b\",\"license\":\"MIT\"},\"src/common/libs/BytesLib.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\n\\n/**\\n * @title BytesLib\\n */\\nlibrary BytesLib {\\n  function toAddress(\\n    bytes memory data\\n  )\\n    internal\\n    pure\\n    returns (address)\\n  {\\n    address result;\\n\\n    require(\\n      data.length == 20\\n    );\\n\\n    // solhint-disable-next-line no-inline-assembly\\n    assembly {\\n      result := div(mload(add(data, 0x20)), 0x1000000000000000000000000)\\n    }\\n\\n    return result;\\n  }\\n}\\n\",\"keccak256\":\"0x3b36d35d5b97b9fec4f158fa57871ed45a7e608fa141581148085a540630f57c\",\"license\":\"MIT\"},\"src/common/libs/SafeMathLib.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\n\\n/**\\n * @title SafeMathLib\\n */\\nlibrary SafeMathLib {\\n  function add(\\n    uint256 a,\\n    uint256 b\\n  )\\n    internal\\n    pure\\n    returns (uint256)\\n  {\\n    uint256 result = a + b;\\n\\n    require(\\n      result >= a\\n    );\\n\\n    return result;\\n  }\\n\\n  function sub(\\n    uint256 a,\\n    uint256 b\\n  )\\n    internal\\n    pure\\n    returns (uint256)\\n  {\\n    require(\\n      b <= a\\n    );\\n\\n    return a - b;\\n  }\\n\\n  function mul(\\n    uint256 a,\\n    uint256 b\\n  )\\n    internal\\n    pure\\n    returns (uint256)\\n  {\\n    uint256 result = 0;\\n\\n    if (a != 0 && b != 0) {\\n      result = a * b;\\n\\n      require(\\n        result / a == b\\n      );\\n    }\\n\\n    return result;\\n  }\\n\\n  function div(\\n    uint256 a,\\n    uint256 b\\n  )\\n    internal\\n    pure\\n    returns (uint256)\\n  {\\n    require(\\n      b != 0\\n    );\\n\\n    return a / b;\\n  }\\n\\n  function mod(\\n    uint256 a,\\n    uint256 b\\n  )\\n    internal\\n    pure\\n    returns (uint256)\\n  {\\n    require(\\n      b != 0\\n    );\\n\\n    return a % b;\\n  }\\n}\\n\",\"keccak256\":\"0x738c0a35942134eeaa1c6f5b1ec462103d64e9177b425d1e63416f0bdb76b3c8\",\"license\":\"MIT\"},\"src/common/libs/SignatureLib.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\n\\n/**\\n * @title SignatureLib\\n */\\nlibrary SignatureLib {\\n  function recoverAddress(\\n    bytes32 messageHash,\\n    bytes memory signature\\n  )\\n    internal\\n    pure\\n    returns (address)\\n  {\\n    address result = address(0);\\n\\n    if (signature.length == 65) {\\n      bytes32 r;\\n      bytes32 s;\\n      uint8 v;\\n\\n      // solhint-disable-next-line no-inline-assembly\\n      assembly {\\n        r := mload(add(signature, 0x20))\\n        s := mload(add(signature, 0x40))\\n        v := byte(0, mload(add(signature, 0x60)))\\n      }\\n\\n      if (v < 27) {\\n        v += 27;\\n      }\\n\\n      if (v == 27 || v == 28) {\\n        result = ecrecover(messageHash, v, r, s);\\n      }\\n    }\\n\\n    return result;\\n  }\\n}\\n\",\"keccak256\":\"0x7ad3bad268bc2fa44dfbca8230262b73b27e8646d5dde6d6d10b860a29a7424b\",\"license\":\"MIT\"},\"src/common/lifecycle/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\n\\n/**\\n * @title Initializable\\n */\\ncontract Initializable {\\n  address private initializer;\\n\\n  // events\\n\\n  event Initialized();\\n\\n  // modifiers\\n\\n  modifier onlyInitializer() {\\n    require(\\n      msg.sender == initializer\\n    );\\n\\n    initializer = address(0);\\n\\n    _;\\n\\n    emit Initialized();\\n  }\\n\\n  /**\\n   * @dev internal constructor\\n   */\\n  constructor()\\n    internal\\n  {\\n    initializer = msg.sender;\\n  }\\n\\n   // external functions (views)\\n\\n  function isInitialized()\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return initializer == address(0);\\n  }\\n}\\n\",\"keccak256\":\"0xeec4c2a5753b5991d956ea10a067553a8e7303f00b49ef6a535a7b06d0dd25d4\",\"license\":\"MIT\"},\"src/common/token/ERC20Token.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\n\\nimport \\\"../libs/SafeMathLib.sol\\\";\\n\\n\\n/**\\n * @title ERC20Token\\n */\\ncontract ERC20Token {\\n  using SafeMathLib for uint256;\\n\\n  string public name;\\n  string public symbol;\\n  uint8 public decimals;\\n  uint256 public totalSupply;\\n\\n  mapping(address => uint256) internal balances;\\n  mapping(address => mapping(address => uint256)) internal allowances;\\n\\n  // events\\n\\n  event Transfer(\\n    address indexed from,\\n    address indexed to,\\n    uint256 value\\n  );\\n\\n  event Approval(\\n    address indexed owner,\\n    address indexed spender,\\n    uint256 value\\n  );\\n\\n  /**\\n   * @dev internal constructor\\n   */\\n  constructor() internal {}\\n\\n  // external functions\\n\\n  function transfer(\\n    address to,\\n    uint256 value\\n  )\\n    external\\n    returns (bool)\\n  {\\n    _transfer(msg.sender, to, value);\\n\\n    return true;\\n  }\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 value\\n  )\\n    virtual\\n    external\\n    returns (bool)\\n  {\\n    _transfer(from, to, value);\\n    _approve(from, msg.sender, allowances[from][msg.sender].sub(value));\\n\\n    return true;\\n  }\\n\\n  function approve(\\n    address spender,\\n    uint256 value\\n  )\\n    virtual\\n    external\\n    returns (bool)\\n  {\\n    _approve(msg.sender, spender, value);\\n\\n    return true;\\n  }\\n\\n  // external functions (views)\\n\\n  function balanceOf(\\n    address owner\\n  )\\n    virtual\\n    external\\n    view\\n    returns (uint256)\\n  {\\n    return balances[owner];\\n  }\\n\\n  function allowance(\\n    address owner,\\n    address spender\\n  )\\n    virtual\\n    external\\n    view\\n    returns (uint256)\\n  {\\n    return allowances[owner][spender];\\n  }\\n\\n  // internal functions\\n\\n  function _transfer(\\n    address from,\\n    address to,\\n    uint256 value\\n  )\\n    virtual\\n    internal\\n  {\\n    require(\\n      from != address(0)\\n    );\\n    require(\\n      to != address(0)\\n    );\\n\\n    balances[from] = balances[from].sub(value);\\n    balances[to] = balances[to].add(value);\\n\\n    emit Transfer(from, to, value);\\n  }\\n\\n  function _approve(\\n    address owner,\\n    address spender,\\n    uint256 value\\n  )\\n    virtual\\n    internal\\n  {\\n    require(\\n      owner != address(0)\\n    );\\n    require(\\n      spender != address(0)\\n    );\\n\\n    allowances[owner][spender] = value;\\n\\n    emit Approval(owner, spender, value);\\n  }\\n\\n  function _mint(\\n    address owner,\\n    uint256 value\\n  )\\n    virtual\\n    internal\\n  {\\n    require(\\n      owner != address(0)\\n    );\\n\\n    require(\\n      value > 0\\n    );\\n\\n    balances[owner] = balances[owner].add(value);\\n    totalSupply = totalSupply.add(value);\\n\\n    emit Transfer(address(0), owner, value);\\n  }\\n\\n  function _burn(\\n    address owner,\\n    uint256 value\\n  )\\n    virtual\\n    internal\\n  {\\n    require(\\n      owner != address(0)\\n    );\\n\\n    require(\\n      value > 0\\n    );\\n\\n    balances[owner] = balances[owner].sub(value);\\n    totalSupply = totalSupply.sub(value);\\n\\n    emit Transfer(owner, address(0), value);\\n  }\\n}\\n\",\"keccak256\":\"0x7c813ef482e781bc61d13437780e6f763e790f65e26b984aa58bd794ba042b09\",\"license\":\"MIT\"},\"src/common/typedData/TypedDataContainer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\n\\n/**\\n * @title TypedDataContainer\\n */\\ncontract TypedDataContainer {\\n  string private constant TYPED_DATA_PREFIX = \\\"\\\\x19\\\\x01\\\";\\n  bytes32 private constant TYPED_DATA_DOMAIN_TYPE_HASH = keccak256(\\n    \\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract,bytes32 salt)\\\"\\n  );\\n\\n  bytes32 public typedDataDomainSeparator;\\n\\n  /**\\n   * @dev internal constructor\\n   */\\n  constructor() internal {}\\n\\n  // internal functions\\n\\n  function _initializeTypedDataContainer(\\n    bytes32 domainNameHash,\\n    bytes32 domainVersionHash,\\n    bytes32 domainSalt\\n  )\\n    internal\\n  {\\n    uint256 chainId;\\n\\n    // solhint-disable-next-line no-inline-assembly\\n    assembly {\\n      chainId := chainid()\\n    }\\n\\n    typedDataDomainSeparator = keccak256(abi.encode(\\n        TYPED_DATA_DOMAIN_TYPE_HASH,\\n        domainNameHash,\\n        domainVersionHash,\\n        chainId,\\n        address(this),\\n        domainSalt\\n    ));\\n  }\\n\\n  // internal functions (views)\\n\\n  function _hashPrimaryTypedData(\\n    bytes32 dataHash\\n  )\\n    internal\\n    view\\n    returns (bytes32)\\n  {\\n    return keccak256(abi.encodePacked(\\n      TYPED_DATA_PREFIX,\\n      typedDataDomainSeparator,\\n      dataHash\\n    ));\\n  }\\n}\\n\",\"keccak256\":\"0x85483e6032998bb02482ca00ad153415870ac773253b4c647e8a82c4eb038924\",\"license\":\"MIT\"},\"src/gateway/GatewayRecipient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\n\\nimport \\\"../common/libs/BytesLib.sol\\\";\\n\\n\\n/**\\n * @title GatewayRecipient\\n */\\ncontract GatewayRecipient {\\n  using BytesLib for bytes;\\n\\n  address public gateway;\\n\\n  /**\\n   * @dev internal constructor\\n   */\\n  constructor() internal {}\\n\\n  // internal functions\\n\\n  function _initializeGatewayRecipient(\\n    address gateway_\\n  )\\n    internal\\n  {\\n    gateway = gateway_;\\n  }\\n\\n  // internal functions (views)\\n\\n  function _getContextAccount()\\n    internal\\n    view\\n    returns (address)\\n  {\\n    return _getContextAddress(40);\\n  }\\n\\n  function _getContextSender()\\n    internal\\n    view\\n    returns (address)\\n  {\\n    return _getContextAddress(20);\\n  }\\n\\n  function _getContextData()\\n    internal\\n    view\\n    returns (bytes calldata)\\n  {\\n    bytes calldata result;\\n\\n    if (_isGatewaySender()) {\\n      result = msg.data[:msg.data.length - 40];\\n    } else {\\n      result = msg.data;\\n    }\\n\\n    return result;\\n  }\\n\\n  // private functions (views)\\n\\n  function _getContextAddress(\\n    uint256 offset\\n  )\\n    private\\n    view\\n    returns (address)\\n  {\\n    address result = address(0);\\n\\n    if (_isGatewaySender()) {\\n      uint from = msg.data.length - offset;\\n      result = bytes(msg.data[from:from + 20]).toAddress();\\n    } else {\\n      result = msg.sender;\\n    }\\n\\n    return result;\\n  }\\n\\n  function _isGatewaySender()\\n    private\\n    view\\n    returns (bool)\\n  {\\n    bool result;\\n\\n    if (msg.sender == gateway) {\\n      require(\\n        msg.data.length >= 44\\n      );\\n\\n      result = true;\\n    }\\n\\n    return result;\\n  }\\n}\\n\",\"keccak256\":\"0x56513e7384f04ac487964a92152a87d22ed38d76a26f210b9da56627af117280\",\"license\":\"MIT\"},\"src/payment/PaymentRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"../account/AccountOwnerRegistry.sol\\\";\\nimport \\\"../account/AccountProofRegistry.sol\\\";\\nimport \\\"../common/access/Guarded.sol\\\";\\nimport \\\"../common/account/AccountController.sol\\\";\\nimport \\\"../common/libs/SafeMathLib.sol\\\";\\nimport \\\"../common/libs/SignatureLib.sol\\\";\\nimport \\\"../common/lifecycle/Initializable.sol\\\";\\nimport \\\"../common/token/ERC20Token.sol\\\";\\nimport \\\"../common/typedData/TypedDataContainer.sol\\\";\\nimport \\\"../personal/PersonalAccountRegistry.sol\\\";\\nimport \\\"../gateway/GatewayRecipient.sol\\\";\\n\\n\\n/**\\n * @title PaymentRegistry\\n */\\ncontract PaymentRegistry is Guarded, AccountController, Initializable, TypedDataContainer, GatewayRecipient {\\n  using SafeMathLib for uint256;\\n  using SignatureLib for bytes32;\\n\\n  struct Deposit {\\n    address account;\\n    mapping(address => uint256) withdrawalLockedUntil;\\n  }\\n\\n  struct PaymentChannel {\\n    uint256 committedAmount;\\n  }\\n\\n  struct PaymentChannelCommit {\\n    address sender;\\n    address recipient;\\n    address token;\\n    bytes32 uid;\\n    uint256 blockNumber;\\n    uint256 amount;\\n  }\\n\\n  bytes32 private constant PAYMENT_CHANNEL_COMMIT_TYPE_HASH = keccak256(\\n    \\\"PaymentChannelCommit(address sender,address recipient,address token,bytes32 uid,uint256 blockNumber,uint256 amount)\\\"\\n  );\\n  uint256 private constant DEFAULT_DEPOSIT_WITHDRAWAL_LOCK_PERIOD = 30 days;\\n\\n  AccountOwnerRegistry public accountOwnerRegistry;\\n  AccountProofRegistry public accountProofRegistry;\\n  PersonalAccountRegistry public personalAccountRegistry;\\n  uint256 public depositWithdrawalLockPeriod;\\n  mapping(address => Deposit) private deposits;\\n  mapping(bytes32 => PaymentChannel) private paymentChannels;\\n\\n  // events\\n\\n  event DepositAccountDeployed(\\n    address depositAccount,\\n    address owner\\n  );\\n\\n  event DepositWithdrawalRequested(\\n    address depositAccount,\\n    address owner,\\n    address token,\\n    uint256 lockedUntil\\n  );\\n\\n  event DepositWithdrawalRejected(\\n    address depositAccount,\\n    address owner,\\n    address token\\n  );\\n\\n  event DepositWithdrawn(\\n    address depositAccount,\\n    address owner,\\n    address token,\\n    uint256 amount\\n  );\\n\\n  event PaymentChannelCommitted(\\n    bytes32 hash,\\n    address sender,\\n    address recipient,\\n    address token,\\n    bytes32 uid,\\n    uint256 amount\\n  );\\n\\n  event PaymentWithdrawn(\\n    bytes32 channelHash,\\n    uint256 value\\n  );\\n\\n  event PaymentDeposited(\\n    bytes32 channelHash,\\n    uint256 value\\n  );\\n\\n  event PaymentSplit(\\n    bytes32 channelHash,\\n    uint256 totalValue,\\n    uint256 depositValue\\n  );\\n\\n  /**\\n   * @dev public constructor\\n   */\\n  constructor() public Guarded() Initializable() {}\\n\\n  // external functions\\n\\n  function initialize(\\n    AccountOwnerRegistry accountOwnerRegistry_,\\n    AccountProofRegistry accountProofRegistry_,\\n    PersonalAccountRegistry personalAccountRegistry_,\\n    uint256 depositWithdrawalLockPeriod_,\\n    address[] calldata guardians_,\\n    address gateway_,\\n    bytes32 typedDataDomainNameHash,\\n    bytes32 typedDataDomainVersionHash,\\n    bytes32 typedDataDomainSalt\\n  )\\n    external\\n    onlyInitializer\\n  {\\n    accountOwnerRegistry = accountOwnerRegistry_;\\n    accountProofRegistry = accountProofRegistry_;\\n    personalAccountRegistry = personalAccountRegistry_;\\n\\n    if (depositWithdrawalLockPeriod_ == 0) {\\n      depositWithdrawalLockPeriod = DEFAULT_DEPOSIT_WITHDRAWAL_LOCK_PERIOD;\\n    } else {\\n      depositWithdrawalLockPeriod = depositWithdrawalLockPeriod_;\\n    }\\n\\n    // Guarded\\n    _initializeGuarded(guardians_);\\n\\n    // GatewayRecipient\\n    _initializeGatewayRecipient(gateway_);\\n\\n    // TypedDataContainer\\n    _initializeTypedDataContainer(\\n      typedDataDomainNameHash,\\n      typedDataDomainVersionHash,\\n      typedDataDomainSalt\\n    );\\n  }\\n\\n  function deployDepositAccount(\\n    address owner\\n  )\\n    external\\n  {\\n    _deployDepositAccount(owner);\\n  }\\n\\n  function withdrawDeposit(\\n    address token\\n  )\\n    external\\n  {\\n    address owner = _getContextAccount();\\n    uint256 lockedUntil = deposits[owner].withdrawalLockedUntil[token];\\n\\n    /* solhint-disable not-rely-on-time */\\n\\n    if (lockedUntil != 0 && lockedUntil <= now) {\\n      deposits[owner].withdrawalLockedUntil[token] = 0;\\n\\n      address depositAccount = deposits[owner].account;\\n      uint256 depositValue;\\n\\n      if (token == address(0)) {\\n        depositValue = depositAccount.balance;\\n      } else {\\n        depositValue = ERC20Token(token).balanceOf(depositAccount);\\n      }\\n\\n      _transferFromDeposit(\\n        depositAccount,\\n        owner,\\n        token,\\n        depositValue\\n      );\\n\\n      emit DepositWithdrawn(\\n        depositAccount,\\n        owner,\\n        token,\\n        depositValue\\n      );\\n    } else {\\n      _deployDepositAccount(owner);\\n\\n      lockedUntil = now.add(depositWithdrawalLockPeriod);\\n\\n      deposits[owner].withdrawalLockedUntil[token] = lockedUntil;\\n\\n      emit DepositWithdrawalRequested(\\n        deposits[owner].account,\\n        owner,\\n        token,\\n        lockedUntil\\n      );\\n    }\\n    /* solhint-enable not-rely-on-time */\\n  }\\n\\n  function commitPaymentChannelAndWithdraw(\\n    address sender,\\n    address token,\\n    bytes32 uid,\\n    uint256 blockNumber,\\n    uint256 amount,\\n    bytes calldata senderSignature,\\n    bytes calldata guardianSignature\\n  )\\n    external\\n  {\\n    address recipient = _getContextAccount();\\n\\n    (bytes32 hash, address depositAccount, uint256 paymentValue) = _commitPaymentChannel(\\n      sender,\\n      recipient,\\n      token,\\n      uid,\\n      blockNumber,\\n      amount,\\n      senderSignature,\\n      guardianSignature\\n    );\\n\\n    _transferFromDeposit(\\n      depositAccount,\\n      recipient,\\n      token,\\n      paymentValue\\n    );\\n\\n    emit PaymentWithdrawn(hash, paymentValue);\\n  }\\n\\n  function commitPaymentChannelAndDeposit(\\n    address sender,\\n    address token,\\n    bytes32 uid,\\n    uint256 blockNumber,\\n    uint256 amount,\\n    bytes calldata senderSignature,\\n    bytes calldata guardianSignature\\n  )\\n    external\\n  {\\n    address recipient = _getContextAccount();\\n\\n    (bytes32 hash, address depositAccount, uint256 paymentValue) = _commitPaymentChannel(\\n      sender,\\n      recipient,\\n      token,\\n      uid,\\n      blockNumber,\\n      amount,\\n      senderSignature,\\n      guardianSignature\\n    );\\n\\n    _transferFromDeposit(\\n      depositAccount,\\n      _computeDepositAccountAddress(recipient),\\n      token,\\n      paymentValue\\n    );\\n\\n    emit PaymentDeposited(hash, paymentValue);\\n  }\\n\\n  function commitPaymentChannelAndSplit(\\n    address sender,\\n    address token,\\n    bytes32 uid,\\n    uint256 blockNumber,\\n    uint256 amount,\\n    uint256 depositPaymentValue,\\n    bytes calldata senderSignature,\\n    bytes calldata guardianSignature\\n  )\\n    external\\n  {\\n    address recipient = _getContextAccount();\\n\\n    (bytes32 hash, address depositAccount, uint256 paymentValue) = _commitPaymentChannel(\\n      sender,\\n      recipient,\\n      token,\\n      uid,\\n      blockNumber,\\n      amount,\\n      senderSignature,\\n      guardianSignature\\n    );\\n\\n    _transferSplitFromDeposit(\\n      depositAccount,\\n      recipient,\\n      token,\\n      paymentValue,\\n      depositPaymentValue\\n    );\\n\\n    emit PaymentSplit(hash, paymentValue, depositPaymentValue);\\n  }\\n\\n  // external functions (views)\\n\\n  function computeDepositAccountAddress(\\n    address owner\\n  )\\n    external\\n    view\\n    returns (address)\\n  {\\n    return _computeDepositAccountAddress(owner);\\n  }\\n\\n  function isDepositAccountDeployed(\\n    address owner\\n  )\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return deposits[owner].account != address(0);\\n  }\\n\\n  function getDepositWithdrawalLockedUntil(\\n    address owner,\\n    address token\\n  )\\n    external\\n    view\\n    returns (uint256)\\n  {\\n    return deposits[owner].withdrawalLockedUntil[token];\\n  }\\n\\n  function getPaymentChannelCommittedAmount(\\n    bytes32 hash\\n  )\\n    external\\n    view\\n    returns (uint256)\\n  {\\n    return paymentChannels[hash].committedAmount;\\n  }\\n\\n  // external functions (pure)\\n\\n  function computePaymentChannelHash(\\n    address sender,\\n    address recipient,\\n    address token,\\n    bytes32 uid\\n  )\\n    external\\n    pure\\n    returns (bytes32)\\n  {\\n    return _computePaymentChannelHash(\\n      sender,\\n      recipient,\\n      token,\\n      uid\\n    );\\n  }\\n\\n  // public functions (views)\\n\\n  function hashPaymentChannelCommit(\\n    PaymentChannelCommit memory paymentChannelCommit\\n  )\\n    public\\n    view\\n    returns (bytes32)\\n  {\\n    return _hashPrimaryTypedData(\\n      _hashTypedData(\\n        paymentChannelCommit.sender,\\n        paymentChannelCommit.recipient,\\n        paymentChannelCommit.token,\\n        paymentChannelCommit.uid,\\n        paymentChannelCommit.blockNumber,\\n        paymentChannelCommit.amount\\n      )\\n    );\\n  }\\n\\n  // private functions\\n\\n  function _deployDepositAccount(\\n    address owner\\n  )\\n    private\\n  {\\n    if (deposits[owner].account == address(0)) {\\n      bytes32 salt = keccak256(\\n        abi.encodePacked(\\n          owner\\n        )\\n      );\\n\\n      deposits[owner].account = _deployAccount(salt);\\n\\n      emit DepositAccountDeployed(deposits[owner].account, owner);\\n    }\\n  }\\n\\n  function _commitPaymentChannel(\\n    address sender,\\n    address recipient,\\n    address token,\\n    bytes32 uid,\\n    uint256 blockNumber,\\n    uint256 amount,\\n    bytes memory senderSignature,\\n    bytes memory guardianSignature\\n  )\\n    private\\n    returns (bytes32 hash, address depositAccount, uint256 paymentValue)\\n  {\\n    bytes32 messageHash = _hashPrimaryTypedData(\\n      _hashTypedData(\\n        sender,\\n        recipient,\\n        token,\\n        uid,\\n        blockNumber,\\n        amount\\n      )\\n    );\\n\\n    if (senderSignature.length == 0) {\\n      require(\\n        accountProofRegistry.verifyAccountProofAtBlock(sender, messageHash, blockNumber)\\n      );\\n    } else {\\n      address signer = messageHash.recoverAddress(senderSignature);\\n\\n      if (sender != signer) {\\n        require(\\n          personalAccountRegistry.verifyAccountOwnerAtBlock(sender, signer, blockNumber) ||\\n          accountOwnerRegistry.verifyAccountOwnerAtBlock(sender, signer, blockNumber)\\n        );\\n      }\\n    }\\n\\n    require(\\n      _verifyGuardianSignature(messageHash, guardianSignature)\\n    );\\n\\n    hash = _computePaymentChannelHash(\\n      sender,\\n      recipient,\\n      token,\\n      uid\\n    );\\n\\n    // calc payment value\\n    paymentValue = amount.sub(paymentChannels[hash].committedAmount);\\n\\n    require(\\n      paymentValue != 0\\n    );\\n\\n    paymentChannels[hash].committedAmount = amount;\\n\\n    if (deposits[sender].withdrawalLockedUntil[token] > 0) {\\n      deposits[sender].withdrawalLockedUntil[token] = 0;\\n\\n      emit DepositWithdrawalRejected(\\n        deposits[sender].account,\\n        sender,\\n        token\\n      );\\n    } else {\\n      _deployDepositAccount(sender);\\n    }\\n\\n    depositAccount = deposits[sender].account;\\n\\n    emit PaymentChannelCommitted(\\n      hash,\\n      sender,\\n      recipient,\\n      token,\\n      uid,\\n      amount\\n    );\\n\\n    return (hash, depositAccount, paymentValue);\\n  }\\n\\n  function _transferFromDeposit(\\n    address depositAccount,\\n    address to,\\n    address token,\\n    uint256 value\\n  )\\n    private\\n  {\\n    if (token == address(0)) {\\n      _executeAccountTransaction(\\n        depositAccount,\\n        to,\\n        value,\\n        new bytes(0)\\n      );\\n    } else {\\n      bytes memory response = _executeAccountTransaction(\\n        depositAccount,\\n        token,\\n        0,\\n        abi.encodeWithSelector(\\n          ERC20Token(token).transfer.selector,\\n          to,\\n          value\\n        )\\n      );\\n\\n      if (response.length > 0) {\\n        require(\\n          abi.decode(response, (bool))\\n        );\\n      }\\n    }\\n  }\\n\\n  function _transferSplitFromDeposit(\\n    address depositAccount,\\n    address to,\\n    address token,\\n    uint256 paymentValue,\\n    uint256 depositValue\\n  )\\n    private\\n  {\\n    require(\\n      depositValue > 0\\n    );\\n\\n    uint256 withdrawValue = paymentValue.sub(depositValue);\\n\\n    require(\\n      withdrawValue > 0\\n    );\\n\\n    _transferFromDeposit(\\n      depositAccount,\\n      to,\\n      token,\\n      withdrawValue\\n    );\\n\\n    _transferFromDeposit(\\n      depositAccount,\\n      _computeDepositAccountAddress(to),\\n      token,\\n      depositValue\\n    );\\n  }\\n\\n  // private functions (views)\\n\\n  function _computeDepositAccountAddress(\\n    address owner\\n  )\\n    private\\n    view\\n    returns (address)\\n  {\\n    bytes32 salt = keccak256(\\n      abi.encodePacked(\\n        owner\\n      )\\n    );\\n\\n    return _computeAccountAddress(salt);\\n  }\\n\\n  // private functions (pure)\\n\\n  function _computePaymentChannelHash(\\n    address sender,\\n    address recipient,\\n    address token,\\n    bytes32 uid\\n  )\\n    private\\n    pure\\n    returns (bytes32)\\n  {\\n    return keccak256(\\n      abi.encodePacked(\\n        sender,\\n        recipient,\\n        token,\\n        uid\\n      )\\n    );\\n  }\\n\\n  function _hashTypedData(\\n    address sender,\\n    address recipient,\\n    address token,\\n    bytes32 uid,\\n    uint256 blockNumber,\\n    uint256 amount\\n  )\\n    private\\n    pure\\n    returns (bytes32)\\n  {\\n    return keccak256(abi.encode(\\n      PAYMENT_CHANNEL_COMMIT_TYPE_HASH,\\n      sender,\\n      recipient,\\n      token,\\n      uid,\\n      blockNumber,\\n      amount\\n    ));\\n  }\\n}\\n\",\"keccak256\":\"0x8d62d409a5b7bee3de74a9f7cf1d38243ecda2d7a5b7a7053dea2d7565e98085\",\"license\":\"MIT\"},\"src/personal/PersonalAccountRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\n\\nimport \\\"../common/account/AccountController.sol\\\";\\nimport \\\"../common/libs/BlockLib.sol\\\";\\nimport \\\"../common/libs/SafeMathLib.sol\\\";\\nimport \\\"../common/lifecycle/Initializable.sol\\\";\\nimport \\\"../common/token/ERC20Token.sol\\\";\\nimport \\\"../gateway/GatewayRecipient.sol\\\";\\n\\n\\n/**\\n * @title PersonalAccountRegistry\\n */\\ncontract PersonalAccountRegistry is AccountController, Initializable, GatewayRecipient {\\n  using BlockLib for BlockLib.BlockRelated;\\n  using SafeMathLib for uint256;\\n\\n  struct Account {\\n    bool deployed;\\n    bytes32 salt;\\n    mapping(address => BlockLib.BlockRelated) owners;\\n  }\\n\\n  mapping(address => Account) private accounts;\\n\\n  // events\\n\\n  event AccountDeployed(\\n    address account\\n  );\\n\\n  event AccountOwnerAdded(\\n    address account,\\n    address owner\\n  );\\n\\n  event AccountOwnerRemoved(\\n    address account,\\n    address owner\\n  );\\n\\n  event AccountTransactionExecuted(\\n    address account,\\n    address to,\\n    uint256 value,\\n    bytes data,\\n    bytes response\\n  );\\n\\n  event AccountCallRefunded(\\n    address account,\\n    address beneficiary,\\n    address token,\\n    uint256 value\\n  );\\n\\n  /**\\n   * @dev public constructor\\n   */\\n  constructor() public Initializable() {}\\n\\n  // external functions\\n\\n  function initialize(\\n    address gateway_\\n  )\\n    external\\n    onlyInitializer\\n  {\\n    // GatewayRecipient\\n    _initializeGatewayRecipient(gateway_);\\n  }\\n\\n  function addAccountOwner(\\n    address account,\\n    address owner\\n  )\\n    external\\n  {\\n    _verifySender(account);\\n\\n    require(\\n      owner != address(0)\\n    );\\n\\n    require(\\n      !accounts[account].owners[owner].verifyAtCurrentBlock()\\n    );\\n\\n    accounts[account].owners[owner].added = true;\\n    accounts[account].owners[owner].removedAtBlockNumber = 0;\\n\\n    emit AccountOwnerAdded(\\n      account,\\n      owner\\n    );\\n  }\\n\\n  function removeAccountOwner(\\n    address account,\\n    address owner\\n  )\\n    external\\n  {\\n    address sender = _verifySender(account);\\n\\n    require(\\n      owner != sender\\n    );\\n\\n    require(\\n      accounts[account].owners[owner].verifyAtCurrentBlock()\\n    );\\n\\n    accounts[account].owners[owner].removedAtBlockNumber = block.number;\\n\\n    emit AccountOwnerRemoved(\\n      account,\\n      owner\\n    );\\n  }\\n\\n  function executeAccountTransaction(\\n    address account,\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  )\\n    external\\n  {\\n    _verifySender(account);\\n\\n    _deployAccount(account);\\n\\n    bytes memory response = _executeAccountTransaction(\\n      account,\\n      to,\\n      value,\\n      data\\n    );\\n\\n    emit AccountTransactionExecuted(\\n      account,\\n      to,\\n      value,\\n      data,\\n      response\\n    );\\n  }\\n\\n  function refundAccountCall(\\n    address account,\\n    address token,\\n    uint256 value\\n  )\\n    external\\n  {\\n    _verifySender(account);\\n\\n    _deployAccount(account);\\n\\n    /* solhint-disable avoid-tx-origin */\\n    if (token == address(0)) {\\n      _executeAccountTransaction(\\n        account,\\n        tx.origin,\\n        value,\\n        new bytes(0)\\n      );\\n    } else {\\n      bytes memory response = _executeAccountTransaction(\\n        account,\\n        token,\\n        0,\\n        abi.encodeWithSelector(\\n          ERC20Token(token).transfer.selector,\\n          tx.origin,\\n          value\\n        )\\n      );\\n\\n      if (response.length > 0) {\\n        require(\\n          abi.decode(response, (bool))\\n        );\\n      }\\n    }\\n\\n    emit AccountCallRefunded(\\n      account,\\n      tx.origin,\\n      token,\\n      value\\n    );\\n\\n    /* solhint-enable avoid-tx-origin */\\n  }\\n\\n  // external functions (views)\\n\\n  function computeAccountAddress(\\n    address saltOwner\\n  )\\n    external\\n    view\\n    returns (address)\\n  {\\n    return _computeAccountAddress(saltOwner);\\n  }\\n\\n  function isAccountDeployed(\\n    address account\\n  )\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return accounts[account].deployed;\\n  }\\n\\n  function verifyAccountOwner(\\n    address account,\\n    address owner\\n  )\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return _verifyAccountOwner(account, owner);\\n  }\\n\\n  function verifyAccountOwnerAtBlock(\\n    address account,\\n    address owner,\\n    uint256 blockNumber\\n  )\\n    external\\n    view\\n    returns (bool)\\n  {\\n    bool result = false;\\n\\n    if (_verifyAccountOwner(account, owner)) {\\n      result = true;\\n    } else {\\n      result = accounts[account].owners[owner].verifyAtBlock(blockNumber);\\n    }\\n\\n    return result;\\n  }\\n\\n  // private functions\\n\\n  function _verifySender(\\n    address account\\n  )\\n    private\\n    returns (address)\\n  {\\n    address sender = _getContextSender();\\n\\n    if (accounts[account].owners[sender].added) {\\n      require(\\n        accounts[account].owners[sender].removedAtBlockNumber == 0\\n      );\\n    } else {\\n      require(\\n        accounts[account].salt == 0\\n      );\\n\\n      bytes32 salt = keccak256(\\n        abi.encodePacked(sender)\\n      );\\n\\n      require(\\n        account == _computeAccountAddress(salt)\\n      );\\n\\n      accounts[account].salt = salt;\\n      accounts[account].owners[sender].added = true;\\n\\n      emit AccountOwnerAdded(\\n        account,\\n        sender\\n      );\\n    }\\n\\n    return sender;\\n  }\\n\\n  function _deployAccount(\\n    address account\\n  )\\n    internal\\n  {\\n    if (!accounts[account].deployed) {\\n      _deployAccount(\\n        accounts[account].salt\\n      );\\n\\n      accounts[account].deployed = true;\\n\\n      emit AccountDeployed(\\n        account\\n      );\\n    }\\n  }\\n\\n  // private functions (views)\\n\\n  function _computeAccountAddress(\\n    address saltOwner\\n  )\\n    private\\n    view\\n    returns (address)\\n  {\\n    bytes32 salt = keccak256(\\n      abi.encodePacked(saltOwner)\\n    );\\n\\n    return _computeAccountAddress(salt);\\n  }\\n\\n  function _verifyAccountOwner(\\n    address account,\\n    address owner\\n  )\\n    private\\n    view\\n    returns (bool)\\n  {\\n    bool result;\\n\\n    if (accounts[account].owners[owner].added) {\\n      result = accounts[account].owners[owner].removedAtBlockNumber == 0;\\n    } else if (accounts[account].salt == 0) {\\n      result = account == _computeAccountAddress(owner);\\n    }\\n\\n    return result;\\n  }\\n}\\n\",\"keccak256\":\"0xe0d416ff9f060d7b3b95e4e41cd27258298cd01b376371c887f3b1f447807265\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600180546001600160a01b0319163317905561215c806100326000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806371404156116100c3578063bd106a021161007c578063bd106a0214610290578063d0f710d614610298578063da1b213d146102ab578063df043380146102be578063e372b55f146102d1578063ffcdce31146102d95761014d565b8063714041561461022957806384389a2b1461023c57806387d313131461024f5780638a1773ab146102575780639a85fae21461026a578063a526d83b1461027d5761014d565b8063392e53cd11610115578063392e53cd146101cd57806351e41700146101d5578063525fb194146101e857806360bf4df2146101f05780636121fcfc146102035780636524a947146102165761014d565b80630c68ba2114610152578063116191b61461017b5780632361a7b2146101905780632e4f161e146101a557806333315deb146101c5575b600080fd5b61016561016036600461171d565b6102ec565b6040516101729190611d78565b60405180910390f35b61018361030a565b6040516101729190611c56565b6101a361019e366004611a3c565b610319565b005b6101b86101b3366004611771565b610410565b6040516101729190611d83565b610183610427565b610165610436565b6101a36101e336600461171d565b610446565b6101b8610644565b6101836101fe36600461171d565b61064a565b61016561021136600461171d565b61065b565b6101a361022436600461171d565b61067b565b6101a361023736600461171d565b610687565b6101b861024a366004611b1d565b610739565b610183610769565b6101b861026536600461194e565b610778565b6101a36102783660046117c1565b61078a565b6101a361028b36600461171d565b610887565b6101b86108ac565b6101656102a6366004611966565b6108b2565b6101a36102b9366004611872565b6108fc565b6101a36102cc3660046117c1565b6109f5565b610183610ad3565b6101b86102e7366004611739565b610ae2565b6001600160a01b031660009081526020819052604090205460ff1690565b6003546001600160a01b031681565b6001546001600160a01b0316331461033057600080fd5b600180546001600160a01b03199081169091556004805482166001600160a01b038d8116919091179091556005805483168c831617905560068054909216908a16179055866103855762278d0060075561038b565b60078790555b6103c7868680806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610b1192505050565b6103d084610b67565b6103db838383610b89565b6040517f5daa87a0e9463431830481fd4b6e3403442dfb9a12b9c07597e9f61d50b633c890600090a150505050505050505050565b600061041e85858585610be7565b95945050505050565b6005546001600160a01b031681565b6001546001600160a01b03161590565b6000610450610c20565b6001600160a01b0380821660009081526008602090815260408083209387168352600190930190522054909150801580159061048c5750428111155b156105b0576001600160a01b038083166000818152600860208181526040808420898716808652600182018452918520859055948452919052915490921691906104e157506001600160a01b03811631610560565b6040516370a0823160e01b81526001600160a01b038616906370a082319061050d908590600401611c56565b60206040518083038186803b15801561052557600080fd5b505afa158015610539573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055d9190611b95565b90505b61056c82858784610c31565b7f95f66b073d65f18e43f6b76c7ab8557787f5f766d86cab7c9c76f41be9f8abc6828587846040516105a19493929190611ca7565b60405180910390a1505061063f565b6105b982610ced565b6007546105c7904290610dae565b6001600160a01b0380841660008181526008602081815260408084208a871685526001810183528185208890559490935252905490519293507f87c4cea7402ca14762efb564287f850e007a236145a58b3962c1c5cbfa18507692610636929190911690859087908690611ca7565b60405180910390a15b505050565b60075481565b600061065582610dc7565b92915050565b6001600160a01b0390811660009081526008602052604090205416151590565b61068481610ced565b50565b3360009081526020819052604090205460ff166106a357600080fd5b336001600160a01b03821614156106b957600080fd5b6001600160a01b03811660009081526020819052604090205460ff166106de57600080fd5b6001600160a01b03811660009081526020819052604090819020805460ff19169055517fb8107d0c6b40be480ce3172ee66ba6d64b71f6b1685a851340036e6e2e3e3c529061072e908390611c56565b60405180910390a150565b6000610655610764836000015184602001518560400151866060015187608001518860a00151610dfc565b610e5d565b6006546001600160a01b031681565b60009081526009602052604090205490565b6000610794610c20565b905060008060006108258d858e8e8e8e8e8e8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508d8d8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610ead92505050565b92509250925061083f8261083886610dc7565b8e84610c31565b7f771bc0494e1a2fcbef19a8762845000d8c4500454c756a7370c955e39ed60fd48382604051610870929190611e31565b60405180910390a150505050505050505050505050565b3360009081526020819052604090205460ff166108a357600080fd5b610684816112c0565b60025481565b60006108f48484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061134c92505050565b949350505050565b6000610906610c20565b905060008060006109978e858f8f8f8f8e8e8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508d8d8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610ead92505050565b9250925092506109aa82858f848d61137c565b7f8b67efde501ee9cd0e771f7436554c44a5c076239ff3a6fbb397646a4689c0f283828b6040516109dd93929190611e3f565b60405180910390a15050505050505050505050505050565b60006109ff610c20565b90506000806000610a908d858e8e8e8e8e8e8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508d8d8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610ead92505050565b925092509250610aa282858e84610c31565b7f6675346cd43846f7d47c310d39fb5c15bc7db66b3770338cdf1f133613a5ae988382604051610870929190611e31565b6004546001600160a01b031681565b6001600160a01b0391821660009081526008602090815260408083209390941682526001909201909152205490565b8051610b3657336000908152602081905260409020805460ff19166001179055610684565b805160005b8181101561063f57610b5f838281518110610b5257fe5b60200260200101516112c0565b600101610b3b565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6040514690610bc6907fd87cd6ef79d4e2b95e15ce8abf732db51ec771f1ca2edccf22a46c729ac564729086908690859030908890602001611e00565b60408051601f19818403018152919052805160209091012060025550505050565b600084848484604051602001610c009493929190611bc5565b604051602081830303815290604052805190602001209050949350505050565b6000610c2c60286113cc565b905090565b6001600160a01b038216610c6357604080516000815260208101909152610c5d90859085908490611441565b50610ce7565b6060610cbe8584600063a9059cbb60e01b8887604051602401610c87929190611d16565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611441565b805190915015610ce55780806020019051810190610cdc919061192e565b610ce557600080fd5b505b50505050565b6001600160a01b038181166000908152600860205260409020541661068457600081604051602001610d1f9190611bad565b604051602081830303815290604052805190602001209050610d4081611511565b6001600160a01b038381166000908152600860205260409081902080546001600160a01b0319169383169390931792839055517fd80572c0f2f24f2d9d726d831bd860ed82b12bafaf01cfb6e4d38fb23c4347e992610da29216908590611c6a565b60405180910390a15050565b600082820183811015610dc057600080fd5b9392505050565b60008082604051602001610ddb9190611bad565b604051602081830303815290604052805190602001209050610dc081611547565b60007f745089e29f2abf28f618236a5dc04d214ac05ead3440ba532b69e9d160ba2e72878787878787604051602001610e3b9796959493929190611dc1565b6040516020818303038152906040528051906020012090509695505050505050565b600060405180604001604052806002815260200161190160f01b81525060025483604051602001610e9093929190611c2f565b604051602081830303815290604052805190602001209050919050565b600080600080610ec46107648d8d8d8d8d8d610dfc565b9050855160001415610f6257600554604051630b36a5df60e31b81526001600160a01b03909116906359b52ef890610f04908f9085908d90600401611cf5565b60206040518083038186803b158015610f1c57600080fd5b505afa158015610f30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f54919061192e565b610f5d57600080fd5b6110c4565b6000610f6e82886115b5565b9050806001600160a01b03168d6001600160a01b0316146110c257600660009054906101000a90046001600160a01b03166001600160a01b03166334d323a48e838c6040518463ffffffff1660e01b8152600401610fce93929190611cd1565b60206040518083038186803b158015610fe657600080fd5b505afa158015610ffa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101e919061192e565b806110b95750600460009054906101000a90046001600160a01b03166001600160a01b03166334d323a48e838c6040518463ffffffff1660e01b815260040161106993929190611cd1565b60206040518083038186803b15801561108157600080fd5b505afa158015611095573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b9919061192e565b6110c257600080fd5b505b6110ce818661134c565b6110d757600080fd5b6110e38c8c8c8c610be7565b60008181526009602052604090205490945061110090889061165a565b91508161110c57600080fd5b8660096000868152602001908152602001600020600001819055506000600860008e6001600160a01b03166001600160a01b0316815260200190815260200160002060010160008c6001600160a01b03166001600160a01b03168152602001908152602001600020541115611247576000600860008e6001600160a01b03166001600160a01b0316815260200190815260200160002060010160008c6001600160a01b03166001600160a01b03168152602001908152602001600020819055507f70a8adc5857fa7647cae18853809fcd84d03b8a6ab9cf7e8ba709b775897b617600860008e6001600160a01b03166001600160a01b0316815260200190815260200160002060000160009054906101000a90046001600160a01b03168d8c60405161123a93929190611c84565b60405180910390a1611250565b6112508c610ced565b6001600160a01b03808d1660009081526008602052604090819020549051911693507f0d1cb77d1fe491f98926195d0b885509da18bc305dd1489f45610237d971ed46906112a99086908f908f908f908f908e90611d8c565b60405180910390a150985098509895505050505050565b6001600160a01b0381166112d357600080fd5b6001600160a01b03811660009081526020819052604090205460ff16156112f957600080fd5b6001600160a01b03811660009081526020819052604090819020805460ff19166001179055517f038596bb31e2e7d3d9f184d4c98b310103f6d7f5830e5eec32bffe6f1728f9699061072e908390611c56565b60008061135984846115b5565b6001600160a01b031660009081526020819052604090205460ff16949350505050565b6000811161138957600080fd5b6000611395838361165a565b9050600081116113a457600080fd5b6113b086868684610c31565b6113c4866113bd87610dc7565b8685610c31565b505050505050565b6000806113d761166f565b15611439573683810390611431906113f790601484019084906000611e9a565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061169d92505050565b915050610655565b503392915050565b60606001600160a01b03841661145657600080fd5b6001600160a01b03841630141561146c57600080fd5b846001600160a01b0316846001600160a01b0316141561148b57600080fd5b604051631fabcfa160e11b81526001600160a01b03861690633f579f42906114bb90879087908790600401611d2f565b600060405180830381600087803b1580156114d557600080fd5b505af11580156114e9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261041e91908101906119b0565b600081604051611520906116be565b8190604051809103906000f5905080158015611540573d6000803e3d6000fd5b5092915050565b600060606040518060200161155b906116be565b6020820181038252601f19601f820116604052509050600060ff60f81b308584805190602001206040516020016115959493929190611bfb565b60408051808303601f190181529190528051602090910120949350505050565b8051600090819060411415610dc05760208301516040840151606085015160001a601b8110156115e357601b015b8060ff16601b14806115f857508060ff16601c145b1561164f57600187828585604051600081526020016040526040516116209493929190611e55565b6020604051602081039080840390855afa158015611642573d6000803e3d6000fd5b5050506020604051035193505b505050905092915050565b60008282111561166957600080fd5b50900390565b60035460009081906001600160a01b0316331415610c2c57602c36101561169557600080fd5b506001905090565b60008082516014146116ae57600080fd5b505060200151600160601b900490565b61024c80611f0483390190565b803561065581611eee565b60008083601f8401126116e7578182fd5b50813567ffffffffffffffff8111156116fe578182fd5b60208301915083602082850101111561171657600080fd5b9250929050565b60006020828403121561172e578081fd5b8135610dc081611eee565b6000806040838503121561174b578081fd5b823561175681611eee565b9150602083013561176681611eee565b809150509250929050565b60008060008060808587031215611786578182fd5b843561179181611eee565b935060208501356117a181611eee565b925060408501356117b181611eee565b9396929550929360600135925050565b600080600080600080600080600060e08a8c0312156117de578485fd5b89356117e981611eee565b985060208a01356117f981611eee565b975060408a0135965060608a0135955060808a0135945060a08a013567ffffffffffffffff8082111561182a578586fd5b6118368d838e016116d6565b909650945060c08c013591508082111561184e578384fd5b5061185b8c828d016116d6565b915080935050809150509295985092959850929598565b6000806000806000806000806000806101008b8d031215611891578081fd5b8a3561189c81611eee565b995060208b01356118ac81611eee565b985060408b0135975060608b0135965060808b0135955060a08b0135945060c08b013567ffffffffffffffff808211156118e4578283fd5b6118f08e838f016116d6565b909650945060e08d0135915080821115611908578283fd5b506119158d828e016116d6565b915080935050809150509295989b9194979a5092959850565b60006020828403121561193f578081fd5b81518015158114610dc0578182fd5b60006020828403121561195f578081fd5b5035919050565b60008060006040848603121561197a578283fd5b83359250602084013567ffffffffffffffff811115611997578283fd5b6119a3868287016116d6565b9497909650939450505050565b6000602082840312156119c1578081fd5b815167ffffffffffffffff808211156119d8578283fd5b818401915084601f8301126119eb578283fd5b8151818111156119f9578384fd5b611a0c601f8201601f1916602001611e73565b9150808252856020828501011115611a22578384fd5b611a33816020840160208601611ec2565b50949350505050565b6000806000806000806000806000806101208b8d031215611a5b578384fd5b8a35611a6681611eee565b995060208b0135611a7681611eee565b985060408b0135611a8681611eee565b975060608b0135965060808b013567ffffffffffffffff80821115611aa9578586fd5b818d0191508d601f830112611abc578586fd5b813581811115611aca578687fd5b8e60208083028501011115611add578687fd5b602083019850809750505050611af68c60a08d016116cb565b935060c08b0135925060e08b013591506101008b013590509295989b9194979a5092959850565b600060c08284031215611b2e578081fd5b611b3860c0611e73565b8235611b4381611eee565b81526020830135611b5381611eee565b60208201526040830135611b6681611eee565b80604083015250606083013560608201526080830135608082015260a083013560a08201528091505092915050565b600060208284031215611ba6578081fd5b5051919050565b60609190911b6001600160601b031916815260140190565b6001600160601b0319606095861b8116825293851b841660148201529190931b9091166028820152603c810191909152605c0190565b6001600160f81b031994909416845260609290921b6001600160601b03191660018401526015830152603582015260550190565b60008451611c41818460208901611ec2565b91909101928352506020820152604001919050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b0393841681529183166020830152909116604082015260600190565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b03929092168252602082015260400190565b600060018060a01b0385168252836020830152606060408301528251806060840152611d62816080850160208701611ec2565b601f01601f191691909101608001949350505050565b901515815260200190565b90815260200190565b9586526001600160a01b039485166020870152928416604086015292166060840152608083019190915260a082015260c00190565b9687526001600160a01b0395861660208801529385166040870152919093166060850152608084019290925260a083019190915260c082015260e00190565b9586526020860194909452604085019290925260608401526001600160a01b0316608083015260a082015260c00190565b918252602082015260400190565b9283526020830191909152604082015260600190565b93845260ff9290921660208401526040830152606082015260800190565b60405181810167ffffffffffffffff81118282101715611e9257600080fd5b604052919050565b60008085851115611ea9578182fd5b83861115611eb5578182fd5b5050820193919092039150565b60005b83811015611edd578181015183820152602001611ec5565b83811115610ce75750506000910152565b6001600160a01b038116811461068457600080fdfe6080604052600080546001600160a01b03191633179055610227806100256000396000f3fe60806040526004361061002d5760003560e01c80633f579f4214610039578063f77c47911461014057610034565b3661003457005b600080fd5b34801561004557600080fd5b506100cb6004803603606081101561005c57600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561008c57600080fd5b82018360208201111561009e57600080fd5b803590602001918460018302840111640100000000831117156100c057600080fd5b509092509050610171565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101055781810151838201526020016100ed565b50505050905090810190601f1680156101325780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561014c57600080fd5b5061015561020b565b604080516001600160a01b039092168252519081900360200190f35b6000546060906001600160a01b0316331461018b57600080fd5b60606000866001600160a01b0316868686604051808383808284376040519201945060009350909150508083038185875af1925050503d80600081146101ed576040519150601f19603f3d011682016040523d82523d6000602084013e6101f2565b606091505b50925090508061020157600080fd5b5095945050505050565b6000546001600160a01b03168156fea164736f6c634300060c000aa164736f6c634300060c000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061014d5760003560e01c806371404156116100c3578063bd106a021161007c578063bd106a0214610290578063d0f710d614610298578063da1b213d146102ab578063df043380146102be578063e372b55f146102d1578063ffcdce31146102d95761014d565b8063714041561461022957806384389a2b1461023c57806387d313131461024f5780638a1773ab146102575780639a85fae21461026a578063a526d83b1461027d5761014d565b8063392e53cd11610115578063392e53cd146101cd57806351e41700146101d5578063525fb194146101e857806360bf4df2146101f05780636121fcfc146102035780636524a947146102165761014d565b80630c68ba2114610152578063116191b61461017b5780632361a7b2146101905780632e4f161e146101a557806333315deb146101c5575b600080fd5b61016561016036600461171d565b6102ec565b6040516101729190611d78565b60405180910390f35b61018361030a565b6040516101729190611c56565b6101a361019e366004611a3c565b610319565b005b6101b86101b3366004611771565b610410565b6040516101729190611d83565b610183610427565b610165610436565b6101a36101e336600461171d565b610446565b6101b8610644565b6101836101fe36600461171d565b61064a565b61016561021136600461171d565b61065b565b6101a361022436600461171d565b61067b565b6101a361023736600461171d565b610687565b6101b861024a366004611b1d565b610739565b610183610769565b6101b861026536600461194e565b610778565b6101a36102783660046117c1565b61078a565b6101a361028b36600461171d565b610887565b6101b86108ac565b6101656102a6366004611966565b6108b2565b6101a36102b9366004611872565b6108fc565b6101a36102cc3660046117c1565b6109f5565b610183610ad3565b6101b86102e7366004611739565b610ae2565b6001600160a01b031660009081526020819052604090205460ff1690565b6003546001600160a01b031681565b6001546001600160a01b0316331461033057600080fd5b600180546001600160a01b03199081169091556004805482166001600160a01b038d8116919091179091556005805483168c831617905560068054909216908a16179055866103855762278d0060075561038b565b60078790555b6103c7868680806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610b1192505050565b6103d084610b67565b6103db838383610b89565b6040517f5daa87a0e9463431830481fd4b6e3403442dfb9a12b9c07597e9f61d50b633c890600090a150505050505050505050565b600061041e85858585610be7565b95945050505050565b6005546001600160a01b031681565b6001546001600160a01b03161590565b6000610450610c20565b6001600160a01b0380821660009081526008602090815260408083209387168352600190930190522054909150801580159061048c5750428111155b156105b0576001600160a01b038083166000818152600860208181526040808420898716808652600182018452918520859055948452919052915490921691906104e157506001600160a01b03811631610560565b6040516370a0823160e01b81526001600160a01b038616906370a082319061050d908590600401611c56565b60206040518083038186803b15801561052557600080fd5b505afa158015610539573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055d9190611b95565b90505b61056c82858784610c31565b7f95f66b073d65f18e43f6b76c7ab8557787f5f766d86cab7c9c76f41be9f8abc6828587846040516105a19493929190611ca7565b60405180910390a1505061063f565b6105b982610ced565b6007546105c7904290610dae565b6001600160a01b0380841660008181526008602081815260408084208a871685526001810183528185208890559490935252905490519293507f87c4cea7402ca14762efb564287f850e007a236145a58b3962c1c5cbfa18507692610636929190911690859087908690611ca7565b60405180910390a15b505050565b60075481565b600061065582610dc7565b92915050565b6001600160a01b0390811660009081526008602052604090205416151590565b61068481610ced565b50565b3360009081526020819052604090205460ff166106a357600080fd5b336001600160a01b03821614156106b957600080fd5b6001600160a01b03811660009081526020819052604090205460ff166106de57600080fd5b6001600160a01b03811660009081526020819052604090819020805460ff19169055517fb8107d0c6b40be480ce3172ee66ba6d64b71f6b1685a851340036e6e2e3e3c529061072e908390611c56565b60405180910390a150565b6000610655610764836000015184602001518560400151866060015187608001518860a00151610dfc565b610e5d565b6006546001600160a01b031681565b60009081526009602052604090205490565b6000610794610c20565b905060008060006108258d858e8e8e8e8e8e8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508d8d8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610ead92505050565b92509250925061083f8261083886610dc7565b8e84610c31565b7f771bc0494e1a2fcbef19a8762845000d8c4500454c756a7370c955e39ed60fd48382604051610870929190611e31565b60405180910390a150505050505050505050505050565b3360009081526020819052604090205460ff166108a357600080fd5b610684816112c0565b60025481565b60006108f48484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061134c92505050565b949350505050565b6000610906610c20565b905060008060006109978e858f8f8f8f8e8e8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508d8d8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610ead92505050565b9250925092506109aa82858f848d61137c565b7f8b67efde501ee9cd0e771f7436554c44a5c076239ff3a6fbb397646a4689c0f283828b6040516109dd93929190611e3f565b60405180910390a15050505050505050505050505050565b60006109ff610c20565b90506000806000610a908d858e8e8e8e8e8e8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508d8d8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610ead92505050565b925092509250610aa282858e84610c31565b7f6675346cd43846f7d47c310d39fb5c15bc7db66b3770338cdf1f133613a5ae988382604051610870929190611e31565b6004546001600160a01b031681565b6001600160a01b0391821660009081526008602090815260408083209390941682526001909201909152205490565b8051610b3657336000908152602081905260409020805460ff19166001179055610684565b805160005b8181101561063f57610b5f838281518110610b5257fe5b60200260200101516112c0565b600101610b3b565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6040514690610bc6907fd87cd6ef79d4e2b95e15ce8abf732db51ec771f1ca2edccf22a46c729ac564729086908690859030908890602001611e00565b60408051601f19818403018152919052805160209091012060025550505050565b600084848484604051602001610c009493929190611bc5565b604051602081830303815290604052805190602001209050949350505050565b6000610c2c60286113cc565b905090565b6001600160a01b038216610c6357604080516000815260208101909152610c5d90859085908490611441565b50610ce7565b6060610cbe8584600063a9059cbb60e01b8887604051602401610c87929190611d16565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611441565b805190915015610ce55780806020019051810190610cdc919061192e565b610ce557600080fd5b505b50505050565b6001600160a01b038181166000908152600860205260409020541661068457600081604051602001610d1f9190611bad565b604051602081830303815290604052805190602001209050610d4081611511565b6001600160a01b038381166000908152600860205260409081902080546001600160a01b0319169383169390931792839055517fd80572c0f2f24f2d9d726d831bd860ed82b12bafaf01cfb6e4d38fb23c4347e992610da29216908590611c6a565b60405180910390a15050565b600082820183811015610dc057600080fd5b9392505050565b60008082604051602001610ddb9190611bad565b604051602081830303815290604052805190602001209050610dc081611547565b60007f745089e29f2abf28f618236a5dc04d214ac05ead3440ba532b69e9d160ba2e72878787878787604051602001610e3b9796959493929190611dc1565b6040516020818303038152906040528051906020012090509695505050505050565b600060405180604001604052806002815260200161190160f01b81525060025483604051602001610e9093929190611c2f565b604051602081830303815290604052805190602001209050919050565b600080600080610ec46107648d8d8d8d8d8d610dfc565b9050855160001415610f6257600554604051630b36a5df60e31b81526001600160a01b03909116906359b52ef890610f04908f9085908d90600401611cf5565b60206040518083038186803b158015610f1c57600080fd5b505afa158015610f30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f54919061192e565b610f5d57600080fd5b6110c4565b6000610f6e82886115b5565b9050806001600160a01b03168d6001600160a01b0316146110c257600660009054906101000a90046001600160a01b03166001600160a01b03166334d323a48e838c6040518463ffffffff1660e01b8152600401610fce93929190611cd1565b60206040518083038186803b158015610fe657600080fd5b505afa158015610ffa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101e919061192e565b806110b95750600460009054906101000a90046001600160a01b03166001600160a01b03166334d323a48e838c6040518463ffffffff1660e01b815260040161106993929190611cd1565b60206040518083038186803b15801561108157600080fd5b505afa158015611095573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b9919061192e565b6110c257600080fd5b505b6110ce818661134c565b6110d757600080fd5b6110e38c8c8c8c610be7565b60008181526009602052604090205490945061110090889061165a565b91508161110c57600080fd5b8660096000868152602001908152602001600020600001819055506000600860008e6001600160a01b03166001600160a01b0316815260200190815260200160002060010160008c6001600160a01b03166001600160a01b03168152602001908152602001600020541115611247576000600860008e6001600160a01b03166001600160a01b0316815260200190815260200160002060010160008c6001600160a01b03166001600160a01b03168152602001908152602001600020819055507f70a8adc5857fa7647cae18853809fcd84d03b8a6ab9cf7e8ba709b775897b617600860008e6001600160a01b03166001600160a01b0316815260200190815260200160002060000160009054906101000a90046001600160a01b03168d8c60405161123a93929190611c84565b60405180910390a1611250565b6112508c610ced565b6001600160a01b03808d1660009081526008602052604090819020549051911693507f0d1cb77d1fe491f98926195d0b885509da18bc305dd1489f45610237d971ed46906112a99086908f908f908f908f908e90611d8c565b60405180910390a150985098509895505050505050565b6001600160a01b0381166112d357600080fd5b6001600160a01b03811660009081526020819052604090205460ff16156112f957600080fd5b6001600160a01b03811660009081526020819052604090819020805460ff19166001179055517f038596bb31e2e7d3d9f184d4c98b310103f6d7f5830e5eec32bffe6f1728f9699061072e908390611c56565b60008061135984846115b5565b6001600160a01b031660009081526020819052604090205460ff16949350505050565b6000811161138957600080fd5b6000611395838361165a565b9050600081116113a457600080fd5b6113b086868684610c31565b6113c4866113bd87610dc7565b8685610c31565b505050505050565b6000806113d761166f565b15611439573683810390611431906113f790601484019084906000611e9a565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061169d92505050565b915050610655565b503392915050565b60606001600160a01b03841661145657600080fd5b6001600160a01b03841630141561146c57600080fd5b846001600160a01b0316846001600160a01b0316141561148b57600080fd5b604051631fabcfa160e11b81526001600160a01b03861690633f579f42906114bb90879087908790600401611d2f565b600060405180830381600087803b1580156114d557600080fd5b505af11580156114e9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261041e91908101906119b0565b600081604051611520906116be565b8190604051809103906000f5905080158015611540573d6000803e3d6000fd5b5092915050565b600060606040518060200161155b906116be565b6020820181038252601f19601f820116604052509050600060ff60f81b308584805190602001206040516020016115959493929190611bfb565b60408051808303601f190181529190528051602090910120949350505050565b8051600090819060411415610dc05760208301516040840151606085015160001a601b8110156115e357601b015b8060ff16601b14806115f857508060ff16601c145b1561164f57600187828585604051600081526020016040526040516116209493929190611e55565b6020604051602081039080840390855afa158015611642573d6000803e3d6000fd5b5050506020604051035193505b505050905092915050565b60008282111561166957600080fd5b50900390565b60035460009081906001600160a01b0316331415610c2c57602c36101561169557600080fd5b506001905090565b60008082516014146116ae57600080fd5b505060200151600160601b900490565b61024c80611f0483390190565b803561065581611eee565b60008083601f8401126116e7578182fd5b50813567ffffffffffffffff8111156116fe578182fd5b60208301915083602082850101111561171657600080fd5b9250929050565b60006020828403121561172e578081fd5b8135610dc081611eee565b6000806040838503121561174b578081fd5b823561175681611eee565b9150602083013561176681611eee565b809150509250929050565b60008060008060808587031215611786578182fd5b843561179181611eee565b935060208501356117a181611eee565b925060408501356117b181611eee565b9396929550929360600135925050565b600080600080600080600080600060e08a8c0312156117de578485fd5b89356117e981611eee565b985060208a01356117f981611eee565b975060408a0135965060608a0135955060808a0135945060a08a013567ffffffffffffffff8082111561182a578586fd5b6118368d838e016116d6565b909650945060c08c013591508082111561184e578384fd5b5061185b8c828d016116d6565b915080935050809150509295985092959850929598565b6000806000806000806000806000806101008b8d031215611891578081fd5b8a3561189c81611eee565b995060208b01356118ac81611eee565b985060408b0135975060608b0135965060808b0135955060a08b0135945060c08b013567ffffffffffffffff808211156118e4578283fd5b6118f08e838f016116d6565b909650945060e08d0135915080821115611908578283fd5b506119158d828e016116d6565b915080935050809150509295989b9194979a5092959850565b60006020828403121561193f578081fd5b81518015158114610dc0578182fd5b60006020828403121561195f578081fd5b5035919050565b60008060006040848603121561197a578283fd5b83359250602084013567ffffffffffffffff811115611997578283fd5b6119a3868287016116d6565b9497909650939450505050565b6000602082840312156119c1578081fd5b815167ffffffffffffffff808211156119d8578283fd5b818401915084601f8301126119eb578283fd5b8151818111156119f9578384fd5b611a0c601f8201601f1916602001611e73565b9150808252856020828501011115611a22578384fd5b611a33816020840160208601611ec2565b50949350505050565b6000806000806000806000806000806101208b8d031215611a5b578384fd5b8a35611a6681611eee565b995060208b0135611a7681611eee565b985060408b0135611a8681611eee565b975060608b0135965060808b013567ffffffffffffffff80821115611aa9578586fd5b818d0191508d601f830112611abc578586fd5b813581811115611aca578687fd5b8e60208083028501011115611add578687fd5b602083019850809750505050611af68c60a08d016116cb565b935060c08b0135925060e08b013591506101008b013590509295989b9194979a5092959850565b600060c08284031215611b2e578081fd5b611b3860c0611e73565b8235611b4381611eee565b81526020830135611b5381611eee565b60208201526040830135611b6681611eee565b80604083015250606083013560608201526080830135608082015260a083013560a08201528091505092915050565b600060208284031215611ba6578081fd5b5051919050565b60609190911b6001600160601b031916815260140190565b6001600160601b0319606095861b8116825293851b841660148201529190931b9091166028820152603c810191909152605c0190565b6001600160f81b031994909416845260609290921b6001600160601b03191660018401526015830152603582015260550190565b60008451611c41818460208901611ec2565b91909101928352506020820152604001919050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b0393841681529183166020830152909116604082015260600190565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b03929092168252602082015260400190565b600060018060a01b0385168252836020830152606060408301528251806060840152611d62816080850160208701611ec2565b601f01601f191691909101608001949350505050565b901515815260200190565b90815260200190565b9586526001600160a01b039485166020870152928416604086015292166060840152608083019190915260a082015260c00190565b9687526001600160a01b0395861660208801529385166040870152919093166060850152608084019290925260a083019190915260c082015260e00190565b9586526020860194909452604085019290925260608401526001600160a01b0316608083015260a082015260c00190565b918252602082015260400190565b9283526020830191909152604082015260600190565b93845260ff9290921660208401526040830152606082015260800190565b60405181810167ffffffffffffffff81118282101715611e9257600080fd5b604052919050565b60008085851115611ea9578182fd5b83861115611eb5578182fd5b5050820193919092039150565b60005b83811015611edd578181015183820152602001611ec5565b83811115610ce75750506000910152565b6001600160a01b038116811461068457600080fdfe6080604052600080546001600160a01b03191633179055610227806100256000396000f3fe60806040526004361061002d5760003560e01c80633f579f4214610039578063f77c47911461014057610034565b3661003457005b600080fd5b34801561004557600080fd5b506100cb6004803603606081101561005c57600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561008c57600080fd5b82018360208201111561009e57600080fd5b803590602001918460018302840111640100000000831117156100c057600080fd5b509092509050610171565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101055781810151838201526020016100ed565b50505050905090810190601f1680156101325780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561014c57600080fd5b5061015561020b565b604080516001600160a01b039092168252519081900360200190f35b6000546060906001600160a01b0316331461018b57600080fd5b60606000866001600160a01b0316868686604051808383808284376040519201945060009350909150508083038185875af1925050503d80600081146101ed576040519150601f19603f3d011682016040523d82523d6000602084013e6101f2565b606091505b50925090508061020157600080fd5b5095945050505050565b6000546001600160a01b03168156fea164736f6c634300060c000aa164736f6c634300060c000a",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "public constructor"
      }
    },
    "title": "PaymentRegistry",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 323,
        "contract": "src/payment/PaymentRegistry.sol:PaymentRegistry",
        "label": "guardians",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 998,
        "contract": "src/payment/PaymentRegistry.sol:PaymentRegistry",
        "label": "initializer",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1404,
        "contract": "src/payment/PaymentRegistry.sol:PaymentRegistry",
        "label": "typedDataDomainSeparator",
        "offset": 0,
        "slot": "2",
        "type": "t_bytes32"
      },
      {
        "astId": 2686,
        "contract": "src/payment/PaymentRegistry.sol:PaymentRegistry",
        "label": "gateway",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 2936,
        "contract": "src/payment/PaymentRegistry.sol:PaymentRegistry",
        "label": "accountOwnerRegistry",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(AccountOwnerRegistry)142"
      },
      {
        "astId": 2938,
        "contract": "src/payment/PaymentRegistry.sol:PaymentRegistry",
        "label": "accountProofRegistry",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(AccountProofRegistry)285"
      },
      {
        "astId": 2940,
        "contract": "src/payment/PaymentRegistry.sol:PaymentRegistry",
        "label": "personalAccountRegistry",
        "offset": 0,
        "slot": "6",
        "type": "t_contract(PersonalAccountRegistry)4481"
      },
      {
        "astId": 2942,
        "contract": "src/payment/PaymentRegistry.sol:PaymentRegistry",
        "label": "depositWithdrawalLockPeriod",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 2946,
        "contract": "src/payment/PaymentRegistry.sol:PaymentRegistry",
        "label": "deposits",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_struct(Deposit)2910_storage)"
      },
      {
        "astId": 2950,
        "contract": "src/payment/PaymentRegistry.sol:PaymentRegistry",
        "label": "paymentChannels",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_bytes32,t_struct(PaymentChannel)2913_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(AccountOwnerRegistry)142": {
        "encoding": "inplace",
        "label": "contract AccountOwnerRegistry",
        "numberOfBytes": "20"
      },
      "t_contract(AccountProofRegistry)285": {
        "encoding": "inplace",
        "label": "contract AccountProofRegistry",
        "numberOfBytes": "20"
      },
      "t_contract(PersonalAccountRegistry)4481": {
        "encoding": "inplace",
        "label": "contract PersonalAccountRegistry",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(Deposit)2910_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct PaymentRegistry.Deposit)",
        "numberOfBytes": "32",
        "value": "t_struct(Deposit)2910_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_struct(PaymentChannel)2913_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct PaymentRegistry.PaymentChannel)",
        "numberOfBytes": "32",
        "value": "t_struct(PaymentChannel)2913_storage"
      },
      "t_struct(Deposit)2910_storage": {
        "encoding": "inplace",
        "label": "struct PaymentRegistry.Deposit",
        "members": [
          {
            "astId": 2905,
            "contract": "src/payment/PaymentRegistry.sol:PaymentRegistry",
            "label": "account",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 2909,
            "contract": "src/payment/PaymentRegistry.sol:PaymentRegistry",
            "label": "withdrawalLockedUntil",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_uint256)"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(PaymentChannel)2913_storage": {
        "encoding": "inplace",
        "label": "struct PaymentRegistry.PaymentChannel",
        "members": [
          {
            "astId": 2912,
            "contract": "src/payment/PaymentRegistry.sol:PaymentRegistry",
            "label": "committedAmount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}