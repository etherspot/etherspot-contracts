/* eslint-disable */

module.exports = {
  ContractNames: {
    Account: 'Account',
    AccountBase: 'AccountBase',
    AccountController: 'AccountController',
    AccountImplementationV1: 'AccountImplementationV1',
    AccountRegistry: 'AccountRegistry',
    Address: 'Address',
    AddressUpgradeable: 'AddressUpgradeable',
    AmplificationUtils: 'AmplificationUtils',
    BalancesHelper: 'BalancesHelper',
    BalancesHelperV2: 'BalancesHelperV2',
    CBridgeFacet: 'CBridgeFacet',
    ConnextFacet: 'ConnextFacet',
    ConnextMessage: 'ConnextMessage',
    Context: 'Context',
    ContextUpgradeable: 'ContextUpgradeable',
    Controlled: 'Controlled',
    Diamond: 'Diamond',
    DiamondCutFacet: 'DiamondCutFacet',
    DiamondLoupeFacet: 'DiamondLoupeFacet',
    ECDSA: 'ECDSA',
    ENSAbstractResolver: 'ENSAbstractResolver',
    ENSAddressResolver: 'ENSAddressResolver',
    ENSController: 'ENSController',
    ENSHelper: 'ENSHelper',
    ENSNameResolver: 'ENSNameResolver',
    ENSPubKeyResolver: 'ENSPubKeyResolver',
    ENSRegistry: 'ENSRegistry',
    ENSReverseRegistrar: 'ENSReverseRegistrar',
    ENSTextResolver: 'ENSTextResolver',
    ERC20BurnableUpgradeable: 'ERC20BurnableUpgradeable',
    ERC20Token: 'ERC20Token',
    ERC20Upgradeable: 'ERC20Upgradeable',
    ExternalAccountRegistry: 'ExternalAccountRegistry',
    Gateway: 'Gateway',
    GatewayRecipient: 'GatewayRecipient',
    GatewayV2: 'GatewayV2',
    Guarded: 'Guarded',
    Home: 'Home',
    HopFacet: 'HopFacet',
    IBridgeToken: 'IBridgeToken',
    ICBridge: 'ICBridge',
    ICallback: 'ICallback',
    IConnextHandler: 'IConnextHandler',
    IDiamondCut: 'IDiamondCut',
    IDiamondLoupe: 'IDiamondLoupe',
    IERC165: 'IERC165',
    IERC173: 'IERC173',
    IERC20: 'IERC20',
    IERC20MetadataUpgradeable: 'IERC20MetadataUpgradeable',
    IERC20Upgradeable: 'IERC20Upgradeable',
    IExecutor: 'IExecutor',
    IHopBridge: 'IHopBridge',
    IMessageRecipient: 'IMessageRecipient',
    IProposedOwnable: 'IProposedOwnable',
    ISponsorVault: 'ISponsorVault',
    IStableSwap: 'IStableSwap',
    IStargateReceiver: 'IStargateReceiver',
    IStargateRouter: 'IStargateRouter',
    ISuperAgreement: 'ISuperAgreement',
    ISuperfluidToken: 'ISuperfluidToken',
    ITokenRegistry: 'ITokenRegistry',
    IUpdaterManager: 'IUpdaterManager',
    IWrapped: 'IWrapped',
    Initializable: 'Initializable',
    LPToken: 'LPToken',
    LibAsset: 'LibAsset',
    LibConnextStorage: 'LibConnextStorage',
    LibDiamond: 'LibDiamond',
    MathUtils: 'MathUtils',
    MerkleTreeManager: 'MerkleTreeManager',
    Message: 'Message',
    NomadBase: 'NomadBase',
    Ownable: 'Ownable',
    OwnableUpgradeable: 'OwnableUpgradeable',
    OwnershipFacet: 'OwnershipFacet',
    PaymentDepositAccount: 'PaymentDepositAccount',
    PaymentRegistry: 'PaymentRegistry',
    PersonalAccountImplementationV1: 'PersonalAccountImplementationV1',
    PersonalAccountRegistry: 'PersonalAccountRegistry',
    PromiseMessage: 'PromiseMessage',
    PromiseRouter: 'PromiseRouter',
    ProposedOwnable: 'ProposedOwnable',
    ProposedOwnableUpgradeable: 'ProposedOwnableUpgradeable',
    QueueManager: 'QueueManager',
    ReentrancyGuard: 'ReentrancyGuard',
    ReentrancyGuardUpgradeable: 'ReentrancyGuardUpgradeable',
    RelayerFeeMessage: 'RelayerFeeMessage',
    RelayerFeeRouter: 'RelayerFeeRouter',
    Replica: 'Replica',
    Router: 'Router',
    SafeERC20: 'SafeERC20',
    SafeMath: 'SafeMath',
    SignatureValidator: 'SignatureValidator',
    StargateFacet: 'StargateFacet',
    Strings: 'Strings',
    SwapUtils: 'SwapUtils',
    TypeCasts: 'TypeCasts',
    TypedMemView: 'TypedMemView',
    Version: 'Version',
    Version0: 'Version0',
    WrappedWeiToken: 'WrappedWeiToken',
    XAppConnectionClient: 'XAppConnectionClient',
    XAppConnectionManager: 'XAppConnectionManager',
  },
};
