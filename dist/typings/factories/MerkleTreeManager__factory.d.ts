import { Signer, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MerkleTreeManager, MerkleTreeManagerInterface } from "../MerkleTreeManager";
declare type MerkleTreeManagerConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class MerkleTreeManager__factory extends ContractFactory {
    constructor(...args: MerkleTreeManagerConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<MerkleTreeManager>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): MerkleTreeManager;
    connect(signer: Signer): MerkleTreeManager__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b50610aef806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806306661abd14610046578063ebf0c71714610064578063fd54b22814610082575b600080fd5b61004e6100a0565b60405161005b91906109a0565b60405180910390f35b61006c6100ac565b60405161007991906109d4565b60405180910390f35b61008a6100bd565b60405161009791906109a0565b60405180910390f35b60008060200154905090565b60006100b860006100c9565b905090565b60008060200154905081565b60006100dc826100d76100e3565b61088f565b9050919050565b6100eb610964565b600081600060208110610101576101006109ef565b5b6020020181815250507fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb58160016020811061013f5761013e6109ef565b5b6020020181815250507fb4c11951957c6f8f642c4af61cd6b24640fec6dc7fc607ee8206a99e92410d308160026020811061017d5761017c6109ef565b5b6020020181815250507f21ddb9a356815c3fac1026b6dec5df3124afbadb485c9ba5a3e3398a04b7ba85816003602081106101bb576101ba6109ef565b5b6020020181815250507fe58769b32a1beaf1ea27375a44095a0d1fb664ce2dd358e7fcbfb78c26a19344816004602081106101f9576101f86109ef565b5b6020020181815250507f0eb01ebfc9ed27500cd4dfc979272d1f0913cc9f66540d7e8005811109e1cf2d81600560208110610237576102366109ef565b5b6020020181815250507f887c22bd8750d34016ac3c66b5ff102dacdd73f6b014e710b51e8022af9a196881600660208110610275576102746109ef565b5b6020020181815250507fffd70157e48063fc33c97a050f7f640233bf646cc98d9524c6b92bcf3ab56f83816007602081106102b3576102b26109ef565b5b6020020181815250507f9867cc5f7f196b93bae1e27e6320742445d290f2263827498b54fec539f756af816008602081106102f1576102f06109ef565b5b6020020181815250507fcefad4e508c098b9a7e1d8feb19955fb02ba9675585078710969d3440f5054e08160096020811061032f5761032e6109ef565b5b6020020181815250507ff9dc3e7fe016e050eff260334f18a5d4fe391d82092319f5964f2e2eb7c1c3a581600a6020811061036d5761036c6109ef565b5b6020020181815250507ff8b13a49e282f609c317a833fb8d976d11517c571d1221a265d25af778ecf89281600b602081106103ab576103aa6109ef565b5b6020020181815250507f3490c6ceeb450aecdc82e28293031d10c7d73bf85e57bf041a97360aa2c5d99c81600c602081106103e9576103e86109ef565b5b6020020181815250507fc1df82d9c4b87413eae2ef048f94b4d3554cea73d92b0f7af96e0271c691e2bb81600d60208110610427576104266109ef565b5b6020020181815250507f5c67add7c6caf302256adedf7ab114da0acfe870d449a3a489f781d659e8becc81600e60208110610465576104646109ef565b5b6020020181815250507fda7bce9f4e8618b6bd2f4132ce798cdc7a60e7e1460a7299e3c6342a579626d281600f602081106104a3576104a26109ef565b5b6020020181815250507f2733e50f526ec2fa19a22b31e8ed50f23cd1fdf94c9154ed3a7609a2f1ff981f816010602081106104e1576104e06109ef565b5b6020020181815250507fe1d3b5c807b281e4683cc6d6315cf95b9ade8641defcb32372f1c126e398ef7a8160116020811061051f5761051e6109ef565b5b6020020181815250507f5a2dce0a8a7f68bb74560f8f71837c2c2ebbcbf7fffb42ae1896f13f7c7479a08160126020811061055d5761055c6109ef565b5b6020020181815250507fb46a28b6f55540f89444f63de0378e3d121be09e06cc9ded1c20e65876d36aa08160136020811061059b5761059a6109ef565b5b6020020181815250507fc65e9645644786b620e2dd2ad648ddfcbf4a7e5b1a3a4ecfe7f64667a3f0b7e2816014602081106105d9576105d86109ef565b5b6020020181815250507ff4418588ed35a2458cffeb39b93d26f18d2ab13bdce6aee58e7b99359ec2dfd981601560208110610617576106166109ef565b5b6020020181815250507f5a9c16dc00d6ef18b7933a6f8dc65ccb55667138776f7dea101070dc8796e37781601660208110610655576106546109ef565b5b6020020181815250507f4df84f40ae0c8229d0d6069e5c8f39a7c299677a09d367fc7b05e3bc380ee65281601760208110610693576106926109ef565b5b6020020181815250507fcdc72595f74c7b1043d0e1ffbab734648c838dfb0527d971b602bc216c9619ef816018602081106106d1576106d06109ef565b5b6020020181815250507f0abf5ac974a1ed57f4050aa510dd9c74f508277b39d7973bb2dfccc5eeb0618d8160196020811061070f5761070e6109ef565b5b6020020181815250507fb8cd74046ff337f0a7bf2c8e03e10f642c1886798d71806ab1e888d9e5ee87d081601a6020811061074d5761074c6109ef565b5b6020020181815250507f838c5655cb21c6cb83313b5a631175dff4963772cce9108188b34ac87c81c41e81601b6020811061078b5761078a6109ef565b5b6020020181815250507f662ee4dd2dd7b2bc707961b1e646c4047669dcb6584f0d8d770daf5d7e7deb2e81601c602081106107c9576107c86109ef565b5b6020020181815250507f388ab20e2573d171a88108e79d820e98f26c0b84aa8b2f4aa4968dbb818ea32281601d60208110610807576108066109ef565b5b6020020181815250507f93237c50ba75ee485f4c22adf2f741400bdf8d6a9cc7df7ecae576221665d73581601e60208110610845576108446109ef565b5b6020020181815250507f8448818bb4ae4562849e949e17ac16e0be16688e156b5cf15e098c627c0056a981601f60208110610883576108826109ef565b5b60200201818152505090565b6000808360200154905060005b602081101561095c57600060018284901c16905060008660000183602081106108c8576108c76109ef565b5b01549050600182036109045780856040516020016108e7929190610a3f565b604051602081830303815290604052805190602001209450610947565b84868460208110610918576109176109ef565b5b602002015160405160200161092e929190610a3f565b6040516020818303038152906040528051906020012094505b5050808061095490610a9a565b91505061089c565b505092915050565b604051806104000160405280602090602082028036833780820191505090505090565b6000819050919050565b61099a81610987565b82525050565b60006020820190506109b56000830184610991565b92915050565b6000819050919050565b6109ce816109bb565b82525050565b60006020820190506109e960008301846109c5565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000819050919050565b610a39610a34826109bb565b610a1e565b82525050565b6000610a4b8285610a28565b602082019150610a5b8284610a28565b6020820191508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610aa582610987565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ad757610ad6610a6b565b5b60018201905091905056fea164736f6c634300080f000a";
    static readonly abi: {
        inputs: any[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    }[];
    static createInterface(): MerkleTreeManagerInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): MerkleTreeManager;
}
export {};
