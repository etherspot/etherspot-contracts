"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HopFacet__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "CannotBridgeToSameNetwork",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidAmount",
        type: "error",
    },
    {
        inputs: [],
        name: "NativeValueWithERC",
        type: "error",
    },
    {
        inputs: [],
        name: "NoTransferToNullAddress",
        type: "error",
    },
    {
        inputs: [],
        name: "NullAddrIsNotAValidSpender",
        type: "error",
    },
    {
        inputs: [],
        name: "NullAddrIsNotAnERC20Token",
        type: "error",
    },
    {
        inputs: [],
        name: "ReentrancyError",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "chainLayerId",
                type: "uint256",
            },
        ],
        name: "HopInitialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "_destination",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "address",
                name: "_bridge",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "_ammWrapper",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "_recipient",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "_asset",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "_bonderFee",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "_amountOutMin",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "_deadline",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "_destinationAmountOutMin",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "_destinationDeadline",
                type: "uint256",
            },
        ],
        name: "HopTokenSwap",
        type: "event",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "bridge",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "ammWrapper",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "asset",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "recipient",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "chainId",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "bonderFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "amountOutMin",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "deadline",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationAmountOutMin",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationDeadline",
                        type: "uint256",
                    },
                ],
                internalType: "struct HopFacet.HopData",
                name: "_hopData",
                type: "tuple",
            },
        ],
        name: "hopTokenTransfer",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_chainLayerId",
                type: "uint256",
            },
        ],
        name: "initHop",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "";
const isSuperArgs = (xs) => xs.length > 1;
class HopFacet__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.HopFacet__factory = HopFacet__factory;
HopFacet__factory.bytecode = _bytecode;
HopFacet__factory.abi = _abi;
