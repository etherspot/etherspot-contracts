export declare enum ContractNames {
  AccessControl = 'AccessControl',
  Account = 'Account',
  AccountBase = 'AccountBase',
  AccountController = 'AccountController',
  AccountImplementationV1 = 'AccountImplementationV1',
  AccountRegistry = 'AccountRegistry',
  Address = 'Address',
  BalancesHelper = 'BalancesHelper',
  BalancesHelperV2 = 'BalancesHelperV2',
  BeaconProxy = 'BeaconProxy',
  CBridgeFacet = 'CBridgeFacet',
  Context = 'Context',
  Controlled = 'Controlled',
  Counters = 'Counters',
  ECDSA = 'ECDSA',
  EIP712 = 'EIP712',
  ENSAbstractResolver = 'ENSAbstractResolver',
  ENSAddressResolver = 'ENSAddressResolver',
  ENSController = 'ENSController',
  ENSHelper = 'ENSHelper',
  ENSNameResolver = 'ENSNameResolver',
  ENSPubKeyResolver = 'ENSPubKeyResolver',
  ENSRegistry = 'ENSRegistry',
  ENSReverseRegistrar = 'ENSReverseRegistrar',
  ENSTextResolver = 'ENSTextResolver',
  ERC165 = 'ERC165',
  ERC1967Upgrade = 'ERC1967Upgrade',
  ERC20 = 'ERC20',
  ERC20Permit = 'ERC20Permit',
  ERC20Token = 'ERC20Token',
  ExternalAccountRegistry = 'ExternalAccountRegistry',
  Gateway = 'Gateway',
  GatewayRecipient = 'GatewayRecipient',
  Guarded = 'Guarded',
  IAccessControl = 'IAccessControl',
  IBeacon = 'IBeacon',
  ICBridge = 'ICBridge',
  IDiamondCut = 'IDiamondCut',
  IERC165 = 'IERC165',
  IERC1822Proxiable = 'IERC1822Proxiable',
  IERC20 = 'IERC20',
  IERC20Metadata = 'IERC20Metadata',
  IERC20Permit = 'IERC20Permit',
  ISuperAgreement = 'ISuperAgreement',
  ISuperfluidToken = 'ISuperfluidToken',
  Initializable = 'Initializable',
  LibAsset = 'LibAsset',
  LibDiamond = 'LibDiamond',
  Ownable = 'Ownable',
  PaymentDepositAccount = 'PaymentDepositAccount',
  PaymentRegistry = 'PaymentRegistry',
  PersonalAccountImplementationV1 = 'PersonalAccountImplementationV1',
  PersonalAccountRegistry = 'PersonalAccountRegistry',
  Proxy = 'Proxy',
  ReentrancyGuard = 'ReentrancyGuard',
  SafeERC20 = 'SafeERC20',
  SignatureValidator = 'SignatureValidator',
  StorageSlot = 'StorageSlot',
  Strings = 'Strings',
  WrappedWeiToken = 'WrappedWeiToken',
  console = 'console',
}
