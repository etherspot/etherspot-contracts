/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Contract,
  ContractFactory,
  PayableOverrides,
} from "@ethersproject/contracts";

import type { WrappedWeiToken } from "../WrappedWeiToken";

export class WrappedWeiToken__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: PayableOverrides): Promise<WrappedWeiToken> {
    return super.deploy(overrides || {}) as Promise<WrappedWeiToken>;
  }
  getDeployTransaction(overrides?: PayableOverrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WrappedWeiToken {
    return super.attach(address) as WrappedWeiToken;
  }
  connect(signer: Signer): WrappedWeiToken__factory {
    return super.connect(signer) as WrappedWeiToken__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WrappedWeiToken {
    return new Contract(address, _abi, signerOrProvider) as WrappedWeiToken;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "consumer",
        type: "address",
      },
    ],
    name: "ConsumerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "consumer",
        type: "address",
      },
    ],
    name: "ConsumerRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "depositTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "consumers_",
        type: "address[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "consumer",
        type: "address",
      },
    ],
    name: "isConsumer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startConsuming",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopConsuming",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawAllTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x600080546001600160a01b0319163317905560c0604052600b60808190526a577261707065642057656960a81b60a090815262000040916001919062000176565b50604080518082019091526004808252635757454960e01b60209092019182526200006e9160029162000176565b503415620000825762000082333462000088565b62000212565b6001600160a01b0382166200009c57600080fd5b60008111620000aa57600080fd5b6001600160a01b038216600090815260056020908152604090912054620000dc9183906200092a6200015c821b17901c565b6001600160a01b038316600090815260056020908152604090912091909155600454620001149183906200092a6200015c821b17901c565b6004556040805182815290516001600160a01b038416916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6000828201838110156200016f57600080fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001b957805160ff1916838001178555620001e9565b82800160010185558215620001e9579182015b82811115620001e9578251825591602001919060010190620001cc565b50620001f7929150620001fb565b5090565b5b80821115620001f75760008155600101620001fc565b610c6c80620002226000396000f3fe6080604052600436106101185760003560e01c806370a08231116100a0578063a9059cbb11610064578063a9059cbb14610434578063b760faf91461046d578063ca9add8f14610493578063dd62ed3e146104c6578063f55647e01461050157610129565b806370a0823114610327578063834ff7391461035a578063853828b61461038d57806395d89b41146103a2578063a224cee7146103b757610129565b806323b872dd116100e757806323b872dd146102655780632e1a7d4d146102a8578063313ce567146102d2578063392e53cd146102fd57806356a3b64b1461031257610129565b806306fdde031461012e578063095ea7b3146101b857806318160ddd14610205578063205c28781461022c57610129565b36610129576101273334610516565b005b600080fd5b34801561013a57600080fd5b506101436105c7565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017d578181015183820152602001610165565b50505050905090810190601f1680156101aa5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101c457600080fd5b506101f1600480360360408110156101db57600080fd5b506001600160a01b038135169060200135610654565b604080519115158252519081900360200190f35b34801561021157600080fd5b5061021a61066a565b60408051918252519081900360200190f35b34801561023857600080fd5b506101276004803603604081101561024f57600080fd5b506001600160a01b038135169060200135610670565b34801561027157600080fd5b506101f16004803603606081101561028857600080fd5b506001600160a01b0381358116916020810135909116906040013561067f565b3480156102b457600080fd5b50610127600480360360208110156102cb57600080fd5b50356106d0565b3480156102de57600080fd5b506102e76106de565b6040805160ff9092168252519081900360200190f35b34801561030957600080fd5b506101f16106e7565b34801561031e57600080fd5b506101276106f7565b34801561033357600080fd5b5061021a6004803603602081101561034a57600080fd5b50356001600160a01b0316610702565b34801561036657600080fd5b506101f16004803603602081101561037d57600080fd5b50356001600160a01b031661071d565b34801561039957600080fd5b5061012761073b565b3480156103ae57600080fd5b50610143610757565b3480156103c357600080fd5b50610127600480360360208110156103da57600080fd5b8101906020810181356401000000008111156103f557600080fd5b82018360208201111561040757600080fd5b8035906020019184602083028401116401000000008311171561042957600080fd5b5090925090506107af565b34801561044057600080fd5b506101f16004803603604081101561045757600080fd5b506001600160a01b038135169060200135610862565b6101276004803603602081101561048357600080fd5b50356001600160a01b031661086f565b34801561049f57600080fd5b50610127600480360360208110156104b657600080fd5b50356001600160a01b0316610879565b3480156104d257600080fd5b5061021a600480360360408110156104e957600080fd5b506001600160a01b0381358116916020013516610895565b34801561050d57600080fd5b506101276108c0565b6001600160a01b03821661052957600080fd5b6000811161053657600080fd5b6001600160a01b038216600090815260056020526040902054610559908261092a565b6001600160a01b03831660009081526005602052604090205560045461057f908261092a565b6004556040805182815290516001600160a01b038416916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b60018054604080516020600284861615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561064c5780601f106106215761010080835404028352916020019161064c565b820191906000526020600020905b81548152906001019060200180831161062f57829003601f168201915b505050505081565b6000610661338484610943565b50600192915050565b60045481565b61067b3383836109cb565b5050565b600061068c848484610a08565b6001600160a01b0384166000908152600660209081526040808320338085529252909120546106c69186916106c19086610a44565b610943565b5060019392505050565b6106db3333836109cb565b50565b60035460ff1681565b6000546001600160a01b03161590565b61070033610a59565b565b6001600160a01b031660009081526005602052604090205490565b6001600160a01b031660009081526007602052604090205460ff1690565b33600081815260056020526040902054610700919081906109cb565b6002805460408051602060018416156101000260001901909316849004601f8101849004840282018401909252818152929183018282801561064c5780601f106106215761010080835404028352916020019161064c565b6000546001600160a01b031633146107c657600080fd5b600080546001600160a01b0319169055806107fa57336000908152600760205260409020805460ff19166001179055610835565b8060005b818110156108325761082a84848381811061081557fe5b905060200201356001600160a01b0316610a59565b6001016107fe565b50505b6040517f5daa87a0e9463431830481fd4b6e3403442dfb9a12b9c07597e9f61d50b633c890600090a15050565b6000610661338484610a08565b6106db8134610516565b336000818152600560205260409020546106db919083906109cb565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b3360009081526007602052604090205460ff166108dc57600080fd5b33600081815260076020908152604091829020805460ff19169055815192835290517fe3f5ed5f263f1f01764a96edfc7d025f511ec5f7d180e8816908b78bcf74f0989281900390910190a1565b60008282018381101561093c57600080fd5b9392505050565b6001600160a01b03831661095657600080fd5b6001600160a01b03821661096957600080fd5b6001600160a01b03808416600081815260066020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6109d58382610ada565b6040516001600160a01b0383169082156108fc029083906000818181858888f19350505050610a0357600080fd5b505050565b6001600160a01b03821660009081526007602052604090205460ff1615610a3957610a348383836109cb565b610a03565b610a03838383610b8b565b600082821115610a5357600080fd5b50900390565b6001600160a01b03811660009081526007602052604090205460ff1615610a7f57600080fd5b6001600160a01b038116600081815260076020908152604091829020805460ff19166001179055815192835290517f28b26e7a3d20aedbc5f8f2ebf7da671c0491723a2b78f47a097b0e46dee071429281900390910190a150565b6001600160a01b038216610aed57600080fd5b60008111610afa57600080fd5b6001600160a01b038216600090815260056020526040902054610b1d9082610a44565b6001600160a01b038316600090815260056020526040902055600454610b439082610a44565b6004556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6001600160a01b038316610b9e57600080fd5b6001600160a01b038216610bb157600080fd5b6001600160a01b038316600090815260056020526040902054610bd49082610a44565b6001600160a01b038085166000908152600560205260408082209390935590841681522054610c03908261092a565b6001600160a01b0380841660008181526005602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350505056fea164736f6c634300060c000a";
