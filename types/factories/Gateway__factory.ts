/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Gateway } from "../Gateway";

export class Gateway__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Gateway> {
    return super.deploy(overrides || {}) as Promise<Gateway>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Gateway {
    return super.attach(address) as Gateway;
  }
  connect(signer: Signer): Gateway__factory {
    return super.connect(signer) as Gateway__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Gateway {
    return new Contract(address, _abi, signerOrProvider) as Gateway;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "batch",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "succeeded",
        type: "bool",
      },
    ],
    name: "BatchDelegated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "accountOwnerRegistry",
    outputs: [
      {
        internalType: "contract AccountOwnerRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
      {
        internalType: "bytes",
        name: "senderSignature",
        type: "bytes",
      },
    ],
    name: "delegateBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
      {
        internalType: "bytes",
        name: "senderSignature",
        type: "bytes",
      },
    ],
    name: "delegateBatchWithGasPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "batches",
        type: "bytes[]",
      },
      {
        internalType: "bool",
        name: "revertOnFailure",
        type: "bool",
      },
    ],
    name: "delegateBatches",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getAccountNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "bytes[]",
            name: "data",
            type: "bytes[]",
          },
        ],
        internalType: "struct Gateway.DelegatedBatch",
        name: "delegatedBatch",
        type: "tuple",
      },
    ],
    name: "hashDelegatedBatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "bytes[]",
            name: "data",
            type: "bytes[]",
          },
          {
            internalType: "uint256",
            name: "gasPrice",
            type: "uint256",
          },
        ],
        internalType: "struct Gateway.DelegatedBatchWithGasPrice",
        name: "delegatedBatch",
        type: "tuple",
      },
    ],
    name: "hashDelegatedBatchWithGasPrice",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract AccountOwnerRegistry",
        name: "accountOwnerRegistry_",
        type: "address",
      },
      {
        internalType: "contract PersonalAccountRegistry",
        name: "personalAccountRegistry_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "typedDataDomainNameHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "typedDataDomainVersionHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "typedDataDomainSalt",
        type: "bytes32",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "personalAccountRegistry",
    outputs: [
      {
        internalType: "contract PersonalAccountRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "sendBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "sendBatchFromAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "typedDataDomainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633179055611231806100326000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806387d313131161008c578063b5021b1611610066578063b5021b161461019b578063bd106a02146101ae578063d126199f146101b6578063e372b55f146101c9576100cf565b806387d3131314610160578063984bd28f146101755780639f25562614610188576100cf565b8063231badaf146100d4578063235f8a44146100e9578063392e53cd146101125780635afaa7bb146101275780636d482cfb1461013a578063867519c61461014d575b600080fd5b6100e76100e2366004610c86565b6101d1565b005b6100fc6100f7366004610e44565b610245565b60405161010991906110dd565b60405180910390f35b61011a61026c565b60405161010991906110d2565b6100e7610135366004610d88565b61027c565b6100fc610148366004610ee9565b610375565b6100e761015b366004610c13565b610391565b61016861039d565b6040516101099190611173565b6100e7610183366004610df4565b6103ac565b6100e7610196366004610d27565b610436565b6100e76101a9366004610c86565b610446565b6100fc61047f565b6100fc6101c4366004610bf7565b610485565b6101686104a0565b6001600160a01b03851660009081526004602052604090205484116101f557600080fd5b60006102148261020e6102098888886104af565b6105e2565b90610632565b6001600160a01b0387166000908152600460205260409020869055905061023d868286866106d7565b505050505050565b6000610266610209836000015184602001518560400151866060015161092b565b92915050565b6000546001600160a01b03161590565b600082511161028a57600080fd5b60005b8251811015610370576000306001600160a01b03168483815181106102ae57fe5b60200260200101516040516102c39190610fea565b6000604051808303816000865af19150503d8060008114610300576040519150601f19603f3d011682016040523d82523d6000602084013e610305565b606091505b505090508215610319578061031957600080fd5b7f361c14722cc344132c73396113f7164232448b09c544a149f09048648b43d8723385848151811061034757fe5b60200260200101518360405161035f9392919061106e565b60405180910390a15060010161028d565b505050565b60006102666102098360000151846020015185604001516104af565b610370833384846106d7565b6003546001600160a01b031681565b6000546001600160a01b031633146103c357600080fd5b600080546001600160a01b03199081169091556002805482166001600160a01b038881169190911790915560038054909216908616179055610406838383610a61565b6040517f5daa87a0e9463431830481fd4b6e3403442dfb9a12b9c07597e9f61d50b633c890600090a15050505050565b610442333384846106d7565b5050565b6001600160a01b038516600090815260046020526040902054841161046a57600080fd5b60006102148261020e6102098888883a61092b565b60015481565b6001600160a01b031660009081526004602052604090205490565b6002546001600160a01b031681565b60006060825167ffffffffffffffff811180156104cb57600080fd5b506040519080825280602002602001820160405280156104f5578160200160208202803683370190505b50905060005b835181101561053e5783818151811061051057fe5b60200260200101518051906020012082828151811061052b57fe5b60209081029190910101526001016104fb565b507f4dc0a39234edc20669002d7daeb6a39b3af6a6a56073618b70893384c405c84985856040516020016105729190610f81565b60405160208183030381529060405280519060200120836040516020016105999190610fc0565b604051602081830303815290604052805190602001206040516020016105c29493929190611117565b604051602081830303815290604052805190602001209150509392505050565b600060405180604001604052806002815260200161190160f01b8152506001548360405160200161061593929190611047565b604051602081830303815290604052805190602001209050919050565b80516000908190604114156106d05760208301516040840151606085015160001a601b81101561066057601b015b8060ff16601b148061067557508060ff16601c145b156106cc576001878285856040516000815260200160405260405161069d9493929190611155565b6020604051602081039080840390855afa1580156106bf573d6000803e3d6000fd5b5050506020604051035193505b5050505b9392505050565b6001600160a01b0384166106ea57600080fd5b60008251116106f857600080fd5b815181511461070657600080fd5b826001600160a01b0316846001600160a01b0316146108325760035460405163bb890d3f60e01b81526001600160a01b039091169063bb890d3f9061075190879087906004016110b8565b60206040518083038186803b15801561076957600080fd5b505afa15801561077d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a19190610dd8565b80610829575060025460405163bb890d3f60e01b81526001600160a01b039091169063bb890d3f906107d990879087906004016110b8565b60206040518083038186803b1580156107f157600080fd5b505afa158015610805573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108299190610dd8565b61083257600080fd5b6000805b825181101561023d5760006001600160a01b031684828151811061085657fe5b60200260200101516001600160a01b0316141561087257600080fd5b83818151811061087e57fe5b60200260200101516001600160a01b031683828151811061089b57fe5b602002602001015187876040516020016108b793929190611006565b60408051601f19818403018152908290526108d191610fea565b6000604051808303816000865af19150503d806000811461090e576040519150601f19603f3d011682016040523d82523d6000602084013e610913565b606091505b5050809250508161092357600080fd5b600101610836565b60006060835167ffffffffffffffff8111801561094757600080fd5b50604051908082528060200260200182016040528015610971578160200160208202803683370190505b50905060005b84518110156109ba5784818151811061098c57fe5b6020026020010151805190602001208282815181106109a757fe5b6020908102919091010152600101610977565b507f75a27a7ebaa6d94f2ad4eecbc98a424b9a0516c245c680308385c79d2ad6af2a86866040516020016109ee9190610f81565b6040516020818303038152906040528051906020012083604051602001610a159190610fc0565b6040516020818303038152906040528051906020012086604051602001610a40959493929190611132565b60405160208183030381529060405280519060200120915050949350505050565b6040514690610a9e907fd87cd6ef79d4e2b95e15ce8abf732db51ec771f1ca2edccf22a46c729ac5647290869086908590309088906020016110e6565b60408051601f19818403018152919052805160209091012060015550505050565b600082601f830112610acf578081fd5b8135610ae2610add826111ae565b611187565b818152915060208083019084810181840286018201871015610b0357600080fd5b60005b84811015610b2b578135610b19816111fe565b84529282019290820190600101610b06565b505050505092915050565b600082601f830112610b46578081fd5b8135610b54610add826111ae565b818152915060208083019084810160005b84811015610b2b57610b7c888484358a0101610b8e565b84529282019290820190600101610b65565b600082601f830112610b9e578081fd5b813567ffffffffffffffff811115610bb4578182fd5b610bc7601f8201601f1916602001611187565b9150808252836020828501011115610bde57600080fd5b8060208401602084013760009082016020015292915050565b600060208284031215610c08578081fd5b81356106d0816111fe565b600080600060608486031215610c27578182fd5b8335610c32816111fe565b9250602084013567ffffffffffffffff80821115610c4e578384fd5b610c5a87838801610abf565b93506040860135915080821115610c6f578283fd5b50610c7c86828701610b36565b9150509250925092565b600080600080600060a08688031215610c9d578081fd5b8535610ca8816111fe565b945060208601359350604086013567ffffffffffffffff80821115610ccb578283fd5b610cd789838a01610abf565b94506060880135915080821115610cec578283fd5b610cf889838a01610b36565b93506080880135915080821115610d0d578283fd5b50610d1a88828901610b8e565b9150509295509295909350565b60008060408385031215610d39578182fd5b823567ffffffffffffffff80821115610d50578384fd5b610d5c86838701610abf565b93506020850135915080821115610d71578283fd5b50610d7e85828601610b36565b9150509250929050565b60008060408385031215610d9a578182fd5b823567ffffffffffffffff811115610db0578283fd5b610dbc85828601610b36565b9250506020830135610dcd81611216565b809150509250929050565b600060208284031215610de9578081fd5b81516106d081611216565b600080600080600060a08688031215610e0b578081fd5b8535610e16816111fe565b94506020860135610e26816111fe565b94979496505050506040830135926060810135926080909101359150565b600060208284031215610e55578081fd5b813567ffffffffffffffff80821115610e6c578283fd5b9083019060808286031215610e7f578283fd5b610e896080611187565b82358152602083013582811115610e9e578485fd5b610eaa87828601610abf565b602083015250604083013582811115610ec1578485fd5b610ecd87828601610b36565b6040830152506060830135606082015280935050505092915050565b600060208284031215610efa578081fd5b813567ffffffffffffffff80821115610f11578283fd5b9083019060608286031215610f24578283fd5b610f2e6060611187565b82358152602083013582811115610f43578485fd5b610f4f87828601610abf565b602083015250604083013582811115610f66578485fd5b610f7287828601610b36565b60408301525095945050505050565b815160009082906020808601845b83811015610fb45781516001600160a01b031685529382019390820190600101610f8f565b50929695505050505050565b815160009082906020808601845b83811015610fb457815185529382019390820190600101610fce565b60008251610ffc8184602087016111ce565b9190910192915050565b600084516110188184602089016111ce565b6bffffffffffffffffffffffff19606095861b8116919093019081529290931b16601482015260280192915050565b600084516110598184602089016111ce565b91909101928352506020820152604001919050565b600060018060a01b038516825260606020830152835180606084015261109b8160808501602088016111ce565b921515604083015250601f91909101601f19160160800192915050565b6001600160a01b0392831681529116602082015260400190565b901515815260200190565b90815260200190565b9586526020860194909452604085019290925260608401526001600160a01b0316608083015260a082015260c00190565b93845260208401929092526040830152606082015260800190565b948552602085019390935260408401919091526060830152608082015260a00190565b93845260ff9290921660208401526040830152606082015260800190565b6001600160a01b0391909116815260200190565b60405181810167ffffffffffffffff811182821017156111a657600080fd5b604052919050565b600067ffffffffffffffff8211156111c4578081fd5b5060209081020190565b60005b838110156111e95781810151838201526020016111d1565b838111156111f8576000848401525b50505050565b6001600160a01b038116811461121357600080fd5b50565b801515811461121357600080fdfea164736f6c634300060c000a";
