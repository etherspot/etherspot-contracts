/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BLSSignatureAggregator,
  BLSSignatureAggregatorInterface,
} from "../BLSSignatureAggregator";

const _abi = [
  {
    inputs: [],
    name: "BLS_DOMAIN",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "N",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "entryPoint",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "delay",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation[]",
        name: "userOps",
        type: "tuple[]",
      },
    ],
    name: "aggregateSignatures",
    outputs: [
      {
        internalType: "bytes",
        name: "aggregatesSignature",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getTrailingPublicKey",
    outputs: [
      {
        internalType: "uint256[4]",
        name: "publicKey",
        type: "uint256[4]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getUserOpHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getUserOpPublicKey",
    outputs: [
      {
        internalType: "uint256[4]",
        name: "publicKey",
        type: "uint256[4]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "userOpToMessage",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation[]",
        name: "userOps",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "validateSignatures",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "validateUserOpSignature",
    outputs: [
      {
        internalType: "bytes",
        name: "sigForUserOp",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612c51806100206000396000f3fe6080604052600436106100905760003560e01c806364c530cd1161005957806364c530cd14610193578063a6193531146101d0578063b7620eb41461020d578063c9e525df1461024a578063e3563a4f1461027557610090565b80629d925014610095578063275e2d79146100c057806340864431146100fd578063451711591461013a57806357f09b7214610156575b600080fd5b3480156100a157600080fd5b506100aa61029e565b6040516100b791906115a2565b60405180910390f35b3480156100cc57600080fd5b506100e760048036038101906100e29190611636565b6102c2565b6040516100f4919061171c565b60405180910390f35b34801561010957600080fd5b50610124600480360381019061011f9190611a88565b61041f565b6040516101319190611b7c565b60405180910390f35b610154600480360381019061014f9190611c11565b610446565b005b34801561016257600080fd5b5061017d60048036038101906101789190611a88565b6104b6565b60405161018a9190611cd5565b60405180910390f35b34801561019f57600080fd5b506101ba60048036038101906101b59190611d15565b610563565b6040516101c7919061171c565b60405180910390f35b3480156101dc57600080fd5b506101f760048036038101906101f29190611a88565b610688565b60405161020491906115a2565b60405180910390f35b34801561021957600080fd5b50610234600480360381019061022f9190611d5e565b6106a8565b6040516102419190611cd5565b60405180910390f35b34801561025657600080fd5b5061025f610728565b60405161026c9190611db6565b60405180910390f35b34801561028157600080fd5b5061029c60048036038101906102979190611e27565b61074c565b005b7fd84c4373167c517e9ccd66803f86d8a4f49e7e1315a7a73b516affea7428f82b81565b606060008383905067ffffffffffffffff8111156102e3576102e2611743565b5b60405190808252806020026020018201604052801561031c57816020015b61030961152b565b8152602001906001900390816103015790505b50905060005b81518110156103bc5760008086868481811061034157610340611ea8565b5b90506020028101906103539190611ee6565b8061014001906103639190611f0f565b8101906103709190611f72565b9150915060405180604001604052808381526020018281525084848151811061039c5761039b611ea8565b5b6020026020010181905250505080806103b490611fe1565b915050610322565b5060006103e9827f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47610a77565b90508060000151816020015160405160200161040692919061202a565b6040516020818303038152906040529250505092915050565b610427611545565b600061043283610b7a565b905061043e8382610bb2565b915050919050565b8173ffffffffffffffffffffffffffffffffffffffff16630396cb6034836040518363ffffffff1660e01b81526004016104809190612062565b6000604051808303818588803b15801561049957600080fd5b505af11580156104ad573d6000803e3d6000fd5b50505050505050565b6104be611567565b6000826040015190506000815111156104e1576104da816106a8565b915061055c565b826000015173ffffffffffffffffffffffffffffffffffffffff1663e02afbae6040518163ffffffff1660e01b8152600401608060405180830381865afa158015610530573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105549190612143565b91505061055e565b505b919050565b60606000828061014001906105789190611f0f565b8101906105859190612221565b9050600061059b846105969061224e565b6104b6565b905060006105b1856105ac9061224e565b61041f565b905073__$b9791500c16b639726521ab5391f2dd20a$__63ebbdac918484846040518463ffffffff1660e01b81526004016105ee9392919061234c565b602060405180830381865af415801561060b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062f91906123bc565b61066e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066590612446565b60405180910390fd5b604051806020016040528060008152509350505050919050565b60008061069483610b7a565b90506106a08382610c89565b915050919050565b6106b0611567565b600082519050608081116106f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f0906124b2565b60405180910390fd5b606081840103805183526020810151602084015260408101516040840152606081015160608401525050919050565b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4781565b60408282905014610792576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107899061251e565b60405180910390fd5b600082828101906107a39190612221565b9050600085859050905060008167ffffffffffffffff8111156107c9576107c8611743565b5b60405190808252806020026020018201604052801561080257816020015b6107ef611567565b8152602001906001900390816107e75790505b50905060008267ffffffffffffffff81111561082157610820611743565b5b60405190808252806020026020018201604052801561085a57816020015b610847611545565b81526020019060019003908161083f5790505b50905060005b838110156109b157600089898381811061087d5761087c611ea8565b5b905060200281019061088f9190611ee6565b6108989061224e565b90506000816000015190508073ffffffffffffffffffffffffffffffffffffffff1663e02afbae6175306040518263ffffffff1660e01b81526004016080604051808303818786fa1580156108f1573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906109169190612143565b85848151811061092957610928611ea8565b5b602002602001018190525061097e8286858151811061094b5761094a611ea8565b5b60200260200101516040516020016109639190611cd5565b60405160208183030381529060405280519060200120610bb2565b84848151811061099157610990611ea8565b5b6020026020010181905250505080806109a990611fe1565b915050610860565b5073__$b9791500c16b639726521ab5391f2dd20a$__63914137638584846040518463ffffffff1660e01b81526004016109ed93929190612760565b602060405180830381865af4158015610a0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2e91906123bc565b610a6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a64906127f1565b60405180910390fd5b5050505050505050565b610a7f61152b565b600083600081518110610a9557610a94611ea8565b5b6020026020010151600001519050600084600081518110610ab957610ab8611ea8565b5b60200260200101516020015190506000600190506000600190505b8651811015610b4857610b298484848a8581518110610af657610af5611ea8565b5b6020026020010151600001518b8681518110610b1557610b14611ea8565b5b60200260200101516020015160018c610cc8565b8094508195508296505050508080610b4090611fe1565b915050610ad4565b50610b5583838388611347565b8093508194505050828460000181815250508184602001818152505050505092915050565b6000610b85826104b6565b604051602001610b959190611cd5565b604051602081830303815290604052805190602001209050919050565b610bba611545565b6000610bc68484610c89565b905073__$b9791500c16b639726521ab5391f2dd20a$";

type BLSSignatureAggregatorConstructorParams =
  | [
      linkLibraryAddresses: BLSSignatureAggregatorLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BLSSignatureAggregatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class BLSSignatureAggregator__factory extends ContractFactory {
  constructor(...args: BLSSignatureAggregatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        BLSSignatureAggregator__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: BLSSignatureAggregatorLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$b9791500c16b639726521ab5391f2dd20a\\$__", "g"),
      linkLibraryAddresses["src/4337_wallet/bls/lib/BLSOpen.sol:BLSOpen"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BLSSignatureAggregator> {
    return super.deploy(overrides || {}) as Promise<BLSSignatureAggregator>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BLSSignatureAggregator {
    return super.attach(address) as BLSSignatureAggregator;
  }
  connect(signer: Signer): BLSSignatureAggregator__factory {
    return super.connect(signer) as BLSSignatureAggregator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BLSSignatureAggregatorInterface {
    return new utils.Interface(_abi) as BLSSignatureAggregatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BLSSignatureAggregator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BLSSignatureAggregator;
  }
}

export interface BLSSignatureAggregatorLibraryAddresses {
  ["src/4337_wallet/bls/lib/BLSOpen.sol:BLSOpen"]: string;
}
