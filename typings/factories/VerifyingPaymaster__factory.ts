/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VerifyingPaymaster,
  VerifyingPaymasterInterface,
} from "../VerifyingPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "_verifyingSigner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    name: "setEntryPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "requiredPreFund",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "sigTimeRange",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifyingSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620025a4380380620025a483398181016040528101906200003791906200031d565b81620000586200004c620000a660201b60201c565b620000ae60201b60201c565b62000069816200017260201b60201c565b508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505050620003e7565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b62000182620000a660201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620001a86200024560201b60201c565b73ffffffffffffffffffffffffffffffffffffffff161462000201576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001f890620003c5565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002a08262000273565b9050919050565b6000620002b48262000293565b9050919050565b620002c681620002a7565b8114620002d257600080fd5b50565b600081519050620002e681620002bb565b92915050565b620002f78162000293565b81146200030357600080fd5b50565b6000815190506200031781620002ec565b92915050565b600080604083850312156200033757620003366200026e565b5b60006200034785828601620002d5565b92505060206200035a8582860162000306565b9150509250929050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000620003ad60208362000364565b9150620003ba8262000375565b602082019050919050565b60006020820190508181036000830152620003e0816200039e565b9050919050565b60805161219a6200040a600039600081816105530152610d1a015261219a6000f3fe6080604052600436106100e85760003560e01c8063b0d691fe1161008a578063c399ec8811610059578063c399ec8814610299578063d0e30db0146102c4578063f2fde38b146102ce578063f465c77e146102f7576100e8565b8063b0d691fe146101f1578063bb9fe6bf1461021c578063c23a5cea14610233578063c266f2921461025c576100e8565b8063584465f2116100c6578063584465f21461015d578063715018a6146101865780638da5cb5b1461019d578063a9a23409146101c8576100e8565b80630396cb60146100ed578063205c28781461010957806323d9ac9b14610132575b600080fd5b6101076004803603810190610102919061136c565b610335565b005b34801561011557600080fd5b50610130600480360381019061012b919061142d565b610442565b005b34801561013e57600080fd5b50610147610551565b604051610154919061148e565b60405180910390f35b34801561016957600080fd5b50610184600480360381019061017f91906114e7565b610575565b005b34801561019257600080fd5b5061019b610635565b005b3480156101a957600080fd5b506101b26106bd565b6040516101bf919061148e565b60405180910390f35b3480156101d457600080fd5b506101ef60048036038101906101ea919061159e565b6106e6565b005b3480156101fd57600080fd5b50610206610700565b6040516102139190611671565b60405180910390f35b34801561022857600080fd5b50610231610726565b005b34801561023f57600080fd5b5061025a6004803603810190610255919061168c565b610826565b005b34801561026857600080fd5b50610283600480360381019061027e91906116de565b610932565b6040516102909190611740565b60405180910390f35b3480156102a557600080fd5b506102ae6109dd565b6040516102bb919061176a565b60405180910390f35b6102cc610a80565b005b3480156102da57600080fd5b506102f560048036038101906102f091906117b1565b610b10565b005b34801561030357600080fd5b5061031e6004803603810190610319919061180a565b610c08565b60405161032c929190611912565b60405180910390f35b61033d610d98565b73ffffffffffffffffffffffffffffffffffffffff1661035b6106bd565b73ffffffffffffffffffffffffffffffffffffffff16146103b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a89061199f565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630396cb6034836040518363ffffffff1660e01b815260040161040d91906119ce565b6000604051808303818588803b15801561042657600080fd5b505af115801561043a573d6000803e3d6000fd5b505050505050565b61044a610d98565b73ffffffffffffffffffffffffffffffffffffffff166104686106bd565b73ffffffffffffffffffffffffffffffffffffffff16146104be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b59061199f565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663205c287883836040518363ffffffff1660e01b815260040161051b9291906119f8565b600060405180830381600087803b15801561053557600080fd5b505af1158015610549573d6000803e3d6000fd5b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b61057d610d98565b73ffffffffffffffffffffffffffffffffffffffff1661059b6106bd565b73ffffffffffffffffffffffffffffffffffffffff16146105f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e89061199f565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61063d610d98565b73ffffffffffffffffffffffffffffffffffffffff1661065b6106bd565b73ffffffffffffffffffffffffffffffffffffffff16146106b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a89061199f565b60405180910390fd5b6106bb6000610da0565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106ee610e64565b6106fa84848484610ec0565b50505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61072e610d98565b73ffffffffffffffffffffffffffffffffffffffff1661074c6106bd565b73ffffffffffffffffffffffffffffffffffffffff16146107a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107999061199f565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561080c57600080fd5b505af1158015610820573d6000803e3d6000fd5b50505050565b61082e610d98565b73ffffffffffffffffffffffffffffffffffffffff1661084c6106bd565b73ffffffffffffffffffffffffffffffffffffffff16146108a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108999061199f565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c23a5cea826040518263ffffffff1660e01b81526004016108fd9190611a21565b600060405180830381600087803b15801561091757600080fd5b505af115801561092b573d6000803e3d6000fd5b5050505050565b600061093d82610efb565b82602001358380604001906109529190611a4b565b604051610960929190611aed565b60405180910390208480606001906109789190611a4b565b604051610986929190611aed565b604051809103902085608001358660a001358760c001358860e001358961010001356040516020016109c099989796959493929190611b06565b604051602081830303815290604052805190602001209050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a3a919061148e565b602060405180830381865afa158015610a57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7b9190611ba8565b905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b760faf934306040518363ffffffff1660e01b8152600401610adc919061148e565b6000604051808303818588803b158015610af557600080fd5b505af1158015610b09573d6000803e3d6000fd5b5050505050565b610b18610d98565b73ffffffffffffffffffffffffffffffffffffffff16610b366106bd565b73ffffffffffffffffffffffffffffffffffffffff1614610b8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b839061199f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610bfc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf390611c47565b60405180910390fd5b610c0581610da0565b50565b6060600080610c1686610932565b905036600087806101200190610c2c9190611a4b565b915091506000601483839050610c429190611c96565b90506040811480610c535750604181145b610c92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8990611d3c565b60405180910390fd5b610d0283836014908092610ca893929190611d66565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610cf486610f0b565b610f3b90919063ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610d7457600160405180602001604052806000815250909550955050505050610d90565b6000604051806020016040528060008152509095509550505050505b935093915050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ebe57600080fd5b565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef290611ded565b60405180910390fd5b6000808235905080915050919050565b600081604051602001610f1e9190611e85565b604051602081830303815290604052805190602001209050919050565b6000806000610f4a8585610f62565b91509150610f5781610fe5565b819250505092915050565b600080604183511415610fa45760008060006020860151925060408601519150606086015160001a9050610f98878285856111ba565b94509450505050610fde565b604083511415610fd5576000806020850151915060408501519050610fca8683836112c7565b935093505050610fde565b60006002915091505b9250929050565b60006004811115610ff957610ff8611eab565b5b81600481111561100c5761100b611eab565b5b1415611017576111b7565b6001600481111561102b5761102a611eab565b5b81600481111561103e5761103d611eab565b5b141561107f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107690611f26565b60405180910390fd5b6002600481111561109357611092611eab565b5b8160048111156110a6576110a5611eab565b5b14156110e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110de90611f92565b60405180910390fd5b600360048111156110fb576110fa611eab565b5b81600481111561110e5761110d611eab565b5b141561114f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114690612024565b60405180910390fd5b60048081111561116257611161611eab565b5b81600481111561117557611174611eab565b5b14156111b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ad906120b6565b60405180910390fd5b5b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156111f55760006003915091506112be565b601b8560ff161415801561120d5750601c8560ff1614155b1561121f5760006004915091506112be565b60006001878787876040516000815260200160405260405161124494939291906120f2565b6020604051602081039080840390855afa158015611266573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156112b5576000600192509250506112be565b80600092509250505b94509492505050565b60008060007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60001b841690506000601b60ff8660001c901c61130a9190612137565b9050611318878288856111ba565b935093505050935093915050565b600080fd5b600080fd5b600063ffffffff82169050919050565b61134981611330565b811461135457600080fd5b50565b60008135905061136681611340565b92915050565b60006020828403121561138257611381611326565b5b600061139084828501611357565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113c482611399565b9050919050565b6113d4816113b9565b81146113df57600080fd5b50565b6000813590506113f1816113cb565b92915050565b6000819050919050565b61140a816113f7565b811461141557600080fd5b50565b60008135905061142781611401565b92915050565b6000806040838503121561144457611443611326565b5b6000611452858286016113e2565b925050602061146385828601611418565b9150509250929050565b600061147882611399565b9050919050565b6114888161146d565b82525050565b60006020820190506114a3600083018461147f565b92915050565b60006114b48261146d565b9050919050565b6114c4816114a9565b81146114cf57600080fd5b50565b6000813590506114e1816114bb565b92915050565b6000602082840312156114fd576114fc611326565b5b600061150b848285016114d2565b91505092915050565b6003811061152157600080fd5b50565b60008135905061153381611514565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261155e5761155d611539565b5b8235905067ffffffffffffffff81111561157b5761157a61153e565b5b60208301915083600182028301111561159757611596611543565b5b9250929050565b600080600080606085870312156115b8576115b7611326565b5b60006115c687828801611524565b945050602085013567ffffffffffffffff8111156115e7576115e661132b565b5b6115f387828801611548565b9350935050604061160687828801611418565b91505092959194509250565b6000819050919050565b600061163761163261162d84611399565b611612565b611399565b9050919050565b60006116498261161c565b9050919050565b600061165b8261163e565b9050919050565b61166b81611650565b82525050565b60006020820190506116866000830184611662565b92915050565b6000602082840312156116a2576116a1611326565b5b60006116b0848285016113e2565b91505092915050565b600080fd5b600061016082840312156116d5576116d46116b9565b5b81905092915050565b6000602082840312156116f4576116f3611326565b5b600082013567ffffffffffffffff8111156117125761171161132b565b5b61171e848285016116be565b91505092915050565b6000819050919050565b61173a81611727565b82525050565b60006020820190506117556000830184611731565b92915050565b611764816113f7565b82525050565b600060208201905061177f600083018461175b565b92915050565b61178e8161146d565b811461179957600080fd5b50565b6000813590506117ab81611785565b92915050565b6000602082840312156117c7576117c6611326565b5b60006117d58482850161179c565b91505092915050565b6117e781611727565b81146117f257600080fd5b50565b600081359050611804816117de565b92915050565b60008060006060848603121561182357611822611326565b5b600084013567ffffffffffffffff8111156118415761184061132b565b5b61184d868287016116be565b935050602061185e868287016117f5565b925050604061186f86828701611418565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b838110156118b3578082015181840152602081019050611898565b838111156118c2576000848401525b50505050565b6000601f19601f8301169050919050565b60006118e482611879565b6118ee8185611884565b93506118fe818560208601611895565b611907816118c8565b840191505092915050565b6000604082019050818103600083015261192c81856118d9565b905061193b602083018461175b565b9392505050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611989602083611942565b915061199482611953565b602082019050919050565b600060208201905081810360008301526119b88161197c565b9050919050565b6119c881611330565b82525050565b60006020820190506119e360008301846119bf565b92915050565b6119f2816113b9565b82525050565b6000604082019050611a0d60008301856119e9565b611a1a602083018461175b565b9392505050565b6000602082019050611a3660008301846119e9565b92915050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112611a6857611a67611a3c565b5b80840192508235915067ffffffffffffffff821115611a8a57611a89611a41565b5b602083019250600182023603831315611aa657611aa5611a46565b5b509250929050565b600081905092915050565b82818337600083830152505050565b6000611ad48385611aae565b9350611ae1838584611ab9565b82840190509392505050565b6000611afa828486611ac8565b91508190509392505050565b600061012082019050611b1c600083018c61147f565b611b29602083018b61175b565b611b36604083018a611731565b611b436060830189611731565b611b50608083018861175b565b611b5d60a083018761175b565b611b6a60c083018661175b565b611b7760e083018561175b565b611b8561010083018461175b565b9a9950505050505050505050565b600081519050611ba281611401565b92915050565b600060208284031215611bbe57611bbd611326565b5b6000611bcc84828501611b93565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611c31602683611942565b9150611c3c82611bd5565b604082019050919050565b60006020820190508181036000830152611c6081611c24565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611ca1826113f7565b9150611cac836113f7565b925082821015611cbf57611cbe611c67565b5b828203905092915050565b7f566572696679696e675061796d61737465723a20696e76616c6964207369676e60008201527f6174757265206c656e67746820696e207061796d6173746572416e6444617461602082015250565b6000611d26604083611942565b9150611d3182611cca565b604082019050919050565b60006020820190508181036000830152611d5581611d19565b9050919050565b600080fd5b600080fd5b60008085851115611d7a57611d79611d5c565b5b83861115611d8b57611d8a611d61565b5b6001850283019150848603905094509492505050565b7f6d757374206f7665727269646500000000000000000000000000000000000000600082015250565b6000611dd7600d83611942565b9150611de282611da1565b602082019050919050565b60006020820190508181036000830152611e0681611dca565b9050919050565b600081905092915050565b7f19457468657265756d205369676e6564204d6573736167653a0a333200000000600082015250565b6000611e4e601c83611e0d565b9150611e5982611e18565b601c82019050919050565b6000819050919050565b611e7f611e7a82611727565b611e64565b82525050565b6000611e9082611e41565b9150611e9c8284611e6e565b60208201915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b6000611f10601883611942565b9150611f1b82611eda565b602082019050919050565b60006020820190508181036000830152611f3f81611f03565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b6000611f7c601f83611942565b9150611f8782611f46565b602082019050919050565b60006020820190508181036000830152611fab81611f6f565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b600061200e602283611942565b915061201982611fb2565b604082019050919050565b6000602082019050818103600083015261203d81612001565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202776272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b60006120a0602283611942565b91506120ab82612044565b604082019050919050565b600060208201905081810360008301526120cf81612093565b9050919050565b600060ff82169050919050565b6120ec816120d6565b82525050565b60006080820190506121076000830187611731565b61211460208301866120e3565b6121216040830185611731565b61212e6060830184611731565b95945050505050565b6000612142826113f7565b915061214d836113f7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561218257612181611c67565b5b82820190509291505056fea164736f6c634300080c000a";

type VerifyingPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifyingPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VerifyingPaymaster__factory extends ContractFactory {
  constructor(...args: VerifyingPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _entryPoint: string,
    _verifyingSigner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VerifyingPaymaster> {
    return super.deploy(
      _entryPoint,
      _verifyingSigner,
      overrides || {}
    ) as Promise<VerifyingPaymaster>;
  }
  getDeployTransaction(
    _entryPoint: string,
    _verifyingSigner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _entryPoint,
      _verifyingSigner,
      overrides || {}
    );
  }
  attach(address: string): VerifyingPaymaster {
    return super.attach(address) as VerifyingPaymaster;
  }
  connect(signer: Signer): VerifyingPaymaster__factory {
    return super.connect(signer) as VerifyingPaymaster__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifyingPaymasterInterface {
    return new utils.Interface(_abi) as VerifyingPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VerifyingPaymaster {
    return new Contract(address, _abi, signerOrProvider) as VerifyingPaymaster;
  }
}
