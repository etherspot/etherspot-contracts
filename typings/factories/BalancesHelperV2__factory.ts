/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BalancesHelperV2,
  BalancesHelperV2Interface,
} from "../BalancesHelperV2";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "AccountZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "TokenZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__158c7976",
        type: "bytes8",
      },
    ],
    name: "c_158c7976",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__158c7976",
        type: "bytes8",
      },
    ],
    name: "c_false158c7976",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__158c7976",
        type: "bytes8",
      },
    ],
    name: "c_true158c7976",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "getBalances",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "getSuperfluidWrappedTokenBalances",
    outputs: [
      {
        internalType: "int256[]",
        name: "",
        type: "int256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002b6709f30c992493712560c01b61003060201b60201c565b610033565b50565b611605806100426000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632686e1591461005c57806350c5a71014610078578063598cebc2146100a857806385837775146100d8578063ef5bfc3714610108575b600080fd5b61007660048036038101906100719190610f34565b610138565b005b610092600480360381019061008d9190610ebf565b61013b565b60405161009f91906111f9565b60405180910390f35b6100c260048036038101906100bd9190610f34565b610409565b6040516100cf919061123d565b60405180910390f35b6100f260048036038101906100ed9190610f34565b610414565b6040516100ff919061123d565b60405180910390f35b610122600480360381019061011d9190610ebf565b61041b565b60405161012f919061121b565b60405180910390f35b50565b606061015167b7e5e1e9244e5e0160c01b610138565b610165672048521181b0f1cf60c01b610138565b61017967b4518694c34f490660c01b610138565b6000838390508686905061018d9190611394565b67ffffffffffffffff8111156101cc577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156101fa5781602001602082028036833780820191505090505b5090506102116757f4c382f00c5a8360c01b610138565b61022567e69f8d60c03d722d60c01b610138565b60005b868690508110156103d45761024767ab1fc139b6b2455a60c01b610138565b61025b6771d1b307fe59c4ba60c01b610138565b60005b858590508110156103c05761027d676fc8991df9fe527360c01b610138565b610291670d0d6fcdea937bbc60c01b610138565b600082878790506102a29190611394565b826102ad919061133e565b90506102c367691e1323cd6c34f260c01b610138565b6103678989858181106102ff577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020160208101906103149190610e96565b88888581811061034d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020160208101906103629190610e96565b6106e9565b8482815181106103a0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250505080806103b89061149f565b91505061025e565b5080806103cc9061149f565b915050610228565b506103e96705d2747fe66b15de60c01b610138565b6103fd6779537f854243435860c01b610138565b80915050949350505050565b600060019050919050565b6000919050565b60606104316757a851679897871060c01b610138565b61044567afca38cbaae3954b60c01b610138565b6104596717e61485e2adddae60c01b610138565b6000838390508686905061046d9190611394565b67ffffffffffffffff8111156104ac577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156104da5781602001602082028036833780820191505090505b5090506104f167a8fd47c736e098c660c01b610138565b6105056754a3a66a760471e260c01b610138565b60005b868690508110156106b457610527676020aede3cf0f24260c01b610138565b61053b677c74b1a46b3310a860c01b610138565b60005b858590508110156106a05761055d67a6e963d7511535f060c01b610138565b6105716767f1de8600063fdd60c01b610138565b600082878790506105829190611394565b8261058d919061133e565b90506105a367f267705018eace0d60c01b610138565b6106478989858181106105df577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020160208101906105f49190610e96565b88888581811061062d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020160208101906106429190610e96565b6109c7565b848281518110610680577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250505080806106989061149f565b91505061053e565b5080806106ac9061149f565b915050610508565b506106c967f5cb551b5203b64e60c01b610138565b6106dd67dcd6147ba89eec3960c01b610138565b80915050949350505050565b60006106ff6716015317cc44c1fe60c01b610138565b61071367d08a07da0c10fa6560c01b610138565b61072767904b2cf5eb3c41ad60c01b610138565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107af5761077067f2daedce79a4ab6660c01b610138565b82826040517f484305ff0000000000000000000000000000000000000000000000000000000081526004016107a69291906111d0565b60405180910390fd5b6107c367dbfe044603cf7ed960c01b610138565b6107d767bcd8d2533bb37a4860c01b610138565b6107eb6704079fddbeeaca4960c01b610138565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561087357610834675e3fae1ce3835aac60c01b610138565b82826040517f41f93bdf00000000000000000000000000000000000000000000000000000000815260040161086a9291906111d0565b60405180910390fd5b6108876729109ed6e6803a3e60c01b610138565b61089b67df9d686a987d620260c01b610138565b6108af67ff1d584f0b3383ff60c01b610138565b600061094f632ec8eec760e01b856040516024016108cd91906111b5565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050508473ffffffffffffffffffffffffffffffffffffffff16610c7490919063ffffffff16565b90506109656734d8c5a7d10216ee60c01b610138565b6109796739c0f73afd5eb4ac60c01b610138565b60008180602001905181019061098f9190610f5d565b50505090506109a8674c52b5de12a9f5f860c01b610138565b6109bc6710cce64556abd10560c01b610138565b809250505092915050565b60006109dd678d7f6ae46953909760c01b610138565b6109f16770b374a1822c332460c01b610138565b610a056787145e489d3e328460c01b610138565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a8d57610a4e67873f8a37fca17e4360c01b610138565b82826040517f484305ff000000000000000000000000000000000000000000000000000000008152600401610a849291906111d0565b60405180910390fd5b610aa16770e4c54b166c57c260c01b610138565b610ab567c49ee77d5f48860260c01b610138565b610ac967ad0eade5d3d1ba8c60c01b610138565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b5157610b126749cab2b7bd90a8bc60c01b610138565b82826040517f41f93bdf000000000000000000000000000000000000000000000000000000008152600401610b489291906111d0565b60405180910390fd5b610b6567e85f3c08277b03f160c01b610138565b610b7967c26540d5beb682f560c01b610138565b610b8d67e1af98e33c8d159160c01b610138565b6000610c2d6370a0823160e01b85604051602401610bab91906111b5565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050508473ffffffffffffffffffffffffffffffffffffffff16610c7490919063ffffffff16565b9050610c4367779032358553ccd060c01b610138565b610c5767f3c5150d5508debe60c01b610138565b80806020019051810190610c6b9190610fc0565b91505092915050565b6060610c9983836040518060600160405280602581526020016115d460259139610ca1565b905092915050565b6060610cac84610d6e565b610ceb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce29061127a565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1685604051610d13919061119e565b600060405180830381855afa9150503d8060008114610d4e576040519150601f19603f3d011682016040523d82523d6000602084013e610d53565b606091505b5091509150610d63828286610d91565b925050509392505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315610da157829050610df1565b600083511115610db45782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de89190611258565b60405180910390fd5b9392505050565b600081359050610e0781611577565b92915050565b60008083601f840112610e1f57600080fd5b8235905067ffffffffffffffff811115610e3857600080fd5b602083019150836020820283011115610e5057600080fd5b9250929050565b600081359050610e668161158e565b92915050565b600081519050610e7b816115a5565b92915050565b600081519050610e90816115bc565b92915050565b600060208284031215610ea857600080fd5b6000610eb684828501610df8565b91505092915050565b60008060008060408587031215610ed557600080fd5b600085013567ffffffffffffffff811115610eef57600080fd5b610efb87828801610e0d565b9450945050602085013567ffffffffffffffff811115610f1a57600080fd5b610f2687828801610e0d565b925092505092959194509250565b600060208284031215610f4657600080fd5b6000610f5484828501610e57565b91505092915050565b60008060008060808587031215610f7357600080fd5b6000610f8187828801610e6c565b9450506020610f9287828801610e81565b9350506040610fa387828801610e81565b9250506060610fb487828801610e81565b91505092959194509250565b600060208284031215610fd257600080fd5b6000610fe084828501610e81565b91505092915050565b6000610ff58383611124565b60208301905092915050565b600061100d838361118f565b60208301905092915050565b611022816113ee565b82525050565b6000611033826112ba565b61103d8185611300565b93506110488361129a565b8060005b838110156110795781516110608882610fe9565b975061106b836112e6565b92505060018101905061104c565b5085935050505092915050565b6000611091826112c5565b61109b8185611311565b93506110a6836112aa565b8060005b838110156110d75781516110be8882611001565b97506110c9836112f3565b9250506001810190506110aa565b5085935050505092915050565b6110ed81611400565b82525050565b60006110fe826112d0565b6111088185611322565b935061111881856020860161146c565b80840191505092915050565b61112d81611438565b82525050565b600061113e826112db565b611148818561132d565b935061115881856020860161146c565b61116181611517565b840191505092915050565b600061117960248361132d565b915061118482611528565b604082019050919050565b61119881611462565b82525050565b60006111aa82846110f3565b915081905092915050565b60006020820190506111ca6000830184611019565b92915050565b60006040820190506111e56000830185611019565b6111f26020830184611019565b9392505050565b600060208201905081810360008301526112138184611028565b905092915050565b600060208201905081810360008301526112358184611086565b905092915050565b600060208201905061125260008301846110e4565b92915050565b600060208201905081810360008301526112728184611133565b905092915050565b600060208201905081810360008301526112938161116c565b9050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600061134982611462565b915061135483611462565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611389576113886114e8565b5b828201905092915050565b600061139f82611462565b91506113aa83611462565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156113e3576113e26114e8565b5b828202905092915050565b60006113f982611442565b9050919050565b60008115159050919050565b60007fffffffffffffffff00000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b8381101561148a57808201518184015260208101905061146f565b83811115611499576000848401525b50505050565b60006114aa82611462565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156114dd576114dc6114e8565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7460008201527f7261637400000000000000000000000000000000000000000000000000000000602082015250565b611580816113ee565b811461158b57600080fd5b50565b6115978161140c565b81146115a257600080fd5b50565b6115ae81611438565b81146115b957600080fd5b50565b6115c581611462565b81146115d057600080fd5b5056fe416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564a164736f6c6343000804000a";

type BalancesHelperV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BalancesHelperV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BalancesHelperV2__factory extends ContractFactory {
  constructor(...args: BalancesHelperV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BalancesHelperV2> {
    return super.deploy(overrides || {}) as Promise<BalancesHelperV2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BalancesHelperV2 {
    return super.attach(address) as BalancesHelperV2;
  }
  connect(signer: Signer): BalancesHelperV2__factory {
    return super.connect(signer) as BalancesHelperV2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BalancesHelperV2Interface {
    return new utils.Interface(_abi) as BalancesHelperV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BalancesHelperV2 {
    return new Contract(address, _abi, signerOrProvider) as BalancesHelperV2;
  }
}
