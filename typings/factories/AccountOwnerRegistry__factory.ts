/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { AccountOwnerRegistry } from "../AccountOwnerRegistry";

export class AccountOwnerRegistry__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<AccountOwnerRegistry> {
    return super.deploy(overrides || {}) as Promise<AccountOwnerRegistry>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AccountOwnerRegistry {
    return super.attach(address) as AccountOwnerRegistry;
  }
  connect(signer: Signer): AccountOwnerRegistry__factory {
    return super.connect(signer) as AccountOwnerRegistry__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccountOwnerRegistry {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AccountOwnerRegistry;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "AccountOwnerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "AccountOwnerRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "addAccountOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "removeAccountOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "verifyAccountOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "verifyAccountOwnerAtBlock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506104a3806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806334d323a4146100515780638ecc13651461009b578063bb890d3f146100c3578063e278cfc6146100f1575b600080fd5b6100876004803603606081101561006757600080fd5b506001600160a01b03813581169160208101359091169060400135610117565b604080519115158252519081900360200190f35b6100c1600480360360208110156100b157600080fd5b50356001600160a01b0316610168565b005b610087600480360360408110156100d957600080fd5b506001600160a01b038135811691602001351661029d565b6100c16004803603602081101561010757600080fd5b50356001600160a01b03166102ec565b6001600160a01b0380841660009081526020818152604080832093861683529281528282208351808501909452805460ff161515845260010154908301529061016090836103d1565b949350505050565b6001600160a01b0381166101ad5760405162461bcd60e51b815260040180806020018281038252602a81526020018061046d602a913960400191505060405180910390fd5b336000908152602081815260408083206001600160a01b03851684528252918290208251808401909352805460ff161515835260010154908201526101f190610407565b1561022d5760405162461bcd60e51b815260040180806020018281038252602a81526020018061041a602a913960400191505060405180910390fd5b336000818152602081815260408083206001600160a01b038616808552908352818420805460ff191660019081178255019390935580519384529083019190915280517f27e282f7712c5b4617277759c834b86d163dfc1aad25c8c3c5926a1c9e5644689281900390910190a150565b6001600160a01b0380831660009081526020818152604080832093851683529281528282208351808501909452805460ff16151584526001015490830152906102e590610407565b9392505050565b336000908152602081815260408083206001600160a01b03851684528252918290208251808401909352805460ff1615158352600101549082015261033090610407565b61036b5760405162461bcd60e51b81526004018080602001828103825260298152602001806104446029913960400191505060405180910390fd5b336000818152602081815260408083206001600160a01b038616808552908352928190204360019091015580519384529083019190915280517f1ce3cbbc43ee231e5b950332f2b0b9dd7d349291a3ee411ce5c5c7ed745661bb9281900390910190a150565b81516000908190156102e55760208401516103ee575060016102e5565b826103fb575060016102e5565b50506020909101511190565b600061041382436103d1565b9291505056fe4163636f756e744f776e657252656769737472793a206f776e657220616c7265616479206578697374734163636f756e744f776e657252656769737472793a206f776e657220646f65736e27742065786973744163636f756e744f776e657252656769737472793a2063616e6e6f742061646420307830206f776e6572a164736f6c634300060c000a";
