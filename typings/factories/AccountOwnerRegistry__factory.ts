/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { AccountOwnerRegistry } from "../AccountOwnerRegistry";

export class AccountOwnerRegistry__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<AccountOwnerRegistry> {
    return super.deploy(overrides || {}) as Promise<AccountOwnerRegistry>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AccountOwnerRegistry {
    return super.attach(address) as AccountOwnerRegistry;
  }
  connect(signer: Signer): AccountOwnerRegistry__factory {
    return super.connect(signer) as AccountOwnerRegistry__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccountOwnerRegistry {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AccountOwnerRegistry;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "AccountOwnerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "AccountOwnerRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "addAccountOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0x8fa56b90",
        type: "bytes32",
      },
    ],
    name: "c_0x8fa56b90",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "removeAccountOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "verifyAccountOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "verifyAccountOwnerAtBlock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061130e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806310b46f841461005c57806334d323a41461008a5780638ecc13651461010e578063bb890d3f14610152578063e278cfc6146101cc575b600080fd5b6100886004803603602081101561007257600080fd5b8101908080359060200190929190505050610210565b005b6100f6600480360360608110156100a057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610213565b60405180821515815260200191505060405180910390f35b6101506004803603602081101561012457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061035f565b005b6101b46004803603604081101561016857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061090b565b60405180821515815260200191505060405180910390f35b61020e600480360360208110156101e257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a4c565b005b50565b60006102417fa82f14e86a270902119f0ee2b984371da1f48a004ac078ed27f68b56147b4d8560001b610210565b61026d7f8126339fcbfbacfc73efcf05c79ef40f89bfe7f137dc148194c3f2eb9b397faa60001b610210565b6102997f39d8142a4b16e870d3a9f81e0c8b95766e775ee96b8901159f06d80544f5fee060001b610210565b610356826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900460ff16151515158152602001600182015481525050610dd190919063ffffffff16565b90509392505050565b61038b7fef7aea294691071b0f36eb551f51e805fb1bfba3d9524aa18738e8382806eaa260001b610210565b6103b77f2b66619210c880c3c3219ff4498a6857ecbadce6d197afa2c55465ae327948ed60001b610210565b6103e37f57f7d9e69a6508cebb6a3736d0e9081149d65d2954998a8b6f61d8296b4ea63b60001b610210565b61040f7f23fb8552bb6b5e83ef86f206f96c7ed181cd3a8e6d40309abafa44e79f01e18260001b610210565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610495576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806112d8602a913960400191505060405180910390fd5b6104c17f05dc2e63f0ff5013fa6d152be44887e14f33ea8c28f93bdc7b63c304da1b5f7f60001b610210565b6104ed7fbbdbd33d639e20774792bc0d59a52b3b09aa882f1065312876675805bc0d2f9c60001b610210565b6105197ff15fefa4ed986415684dbfbcf7c5d0bc2d622afed960478f22e8f3facbcde44f60001b610210565b6105457f6df0540dba41e0f181d254851d570a03154ca1949fe4d27d66de7b86b80d98d660001b610210565b6105f86000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900460ff161515151581526020016001820154815250506111ea565b1561064e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180611285602a913960400191505060405180910390fd5b61067a7f4529ae4572c18cdd6637d0f6b2c5f4f24a5fdafdae20f5510bd6561653de4e9360001b610210565b6106a67f50210b699c2ed7b7186bc68d842c63968dbac533b9dc71a2e1f64ac0b7f881ac60001b610210565b6106d27f52976bff7413b4cb1028a98fc5224e56932459352091551b45a6e7243fd3fb8e60001b610210565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083151502179055506107957f86a1f09d8a9841170cd1ff38de2837ff706a8432b67a30fbaff15de8e021a17360001b610210565b6107c17f17f0b8dcd276050f76b49c92e4dd6665c58b38c87ec923638c1217fd8f469d9660001b610210565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506108717facdc22679cda142fdea201d83e55f7fe455e17186e54f9045b14e29225588a2860001b610210565b61089d7ff012d6c345a1da44ce914fef7574cbd029d59f8ac68dd136f1055f07864facd160001b610210565b7f27e282f7712c5b4617277759c834b86d163dfc1aad25c8c3c5926a1c9e5644683382604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b60006109397f4bb121aae03090c651ce8c6969069971bdba26459af85909bdc34bdf96f545a760001b610210565b6109657f113a5c2d9a768dd33ce3a6cebca0671cd3fa0fc1c74468d333fe136934aadcff60001b610210565b6109917f35ce891a1ab1c17fa0982a0a40ac5541d776ed3424057fc72de6cbc8320eb19760001b610210565b610a446000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900460ff161515151581526020016001820154815250506111ea565b905092915050565b610a787f563133e623c9b574225206063360287f122ea5418550316677f657a9b3a4fb0260001b610210565b610aa47f30a65d3a83e9692afec191e575ad73964d3951ad25a15b150001bc72a25dffcd60001b610210565b610ad07f72d357e5eecb85a9f1eb32c1b35317f0b1869088dfb0e369f77ca2ce8d38847460001b610210565b610afc7fab41eae9f7e0fdde144b0a245734292c45373cef8c732c9e06bf1384f24a8d8360001b610210565b610baf6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900460ff161515151581526020016001820154815250506111ea565b610c04576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806112af6029913960400191505060405180910390fd5b610c307f3ebea402469b97930e9d81d3df2dd22ac7d709f49a9120bac62fae1569e2a60660001b610210565b610c5c7f60e08ab6f7446d39a58528efb6000a2bf14d43362770e435713d2569615060c760001b610210565b610c887f910f7ed4ffa3b67cb9c30c24318d950690497867087a6c41d82d1f355baddb9260001b610210565b436000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550610d377f25d3bbccb2b98b0d5fe818ab9ed28ce398e1d246d8714a7bb3a6873c40abc17960001b610210565b610d637fc3610594c509de865428097bb091acfaf6cef12d34d00ff8428a2281173a570360001b610210565b7f1ce3cbbc43ee231e5b950332f2b0b9dd7d349291a3ee411ce5c5c7ed745661bb3382604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b6000610dff7f09281f6a9eb692d5f809dd706ca31645bde17707127b03c1539bfc71a3ff58e360001b611281565b610e2b7f10c7fe389d475ce554c15a51992e0d344c862da5aaaa29fd52035b43a5db8aae60001b611281565b610e577f0fe0cb06a28008304139d6408c74d4bdc596c9bacca0e77f8fb2337c8507413860001b611281565b6000610e857f65f7856512d4de7462a9d6506a1d8a0964f6253f144a8f0c0b5cac4a75059ab160001b611281565b610eb17f711d638b736081d10321733602afc58f392636574fb31e10d1b0dd7915c019e560001b611281565b83600001511561115b57610ee77f0bbd0c28606017022279b7fd50c3c7b9395ec029cdb4d9d01f7ff495b567027a60001b611281565b610f137f3f926ca2855d503fa3141d40be8d338239d65cff9732c4bbfaf99d67ca39016a60001b611281565b610f3f7f520d5f736a05763ab738b62505b1686c35e854501728a6515fa449aabb6012cc60001b611281565b600084602001511415610fd957610f787ff58968e00bd3e68e1633151a4e7515b44f5b307b554d12f108423b6de645328560001b611281565b610fa47fd0eca4243aaf9b5c7ccf1e3fae3a24ea57b8911cb10dd582fe4c41ec066ddb8f60001b611281565b610fd07fe13e237f518e640bb840e5e4b5c7cfec49b7347fc6c0c5702e5173a0fdec97e460001b611281565b60019050611156565b6110057f44652caba9411240631ac5214a02339304ade2db54020f126f113a861dfc7b8760001b611281565b6110317f21b20da4a4ffb7e343d4b8d9ccb6d0e9a04d4a4c425fe7f309d046323176dea460001b611281565b60008314156110c7576110667ff500799a62360b4c48fe3c5266647b6bbf3afc64dc3ed90da996707301c74fea60001b611281565b6110927f55cd00447812b924ce1d162834513a728f8341ca8e0a4b2cac0ba5f71b9b7e6160001b611281565b6110be7f886493a3cdae75f1004a0cb8f5a5f1dc1feb2c83f5ca15822ed986a2e138638960001b611281565b60019050611155565b6110f37f3aa6a39158dfb85a7dfd054d1886b31983a5f71eea6d27b37e6364f33daa20f260001b611281565b61111f7f326a1b0007e248890a0924298ad81b3fcfcb0b31a81972cca97d597cd52a9cc860001b611281565b61114b7f383a4ab77c65a5697f073732188d150d8e35e2bc21f532194038f7ca8a5a0b7d60001b611281565b8284602001511190505b5b611188565b6111877fa3d6540a7700b1c1d927f6f300378eebd0a37879398a7485dffd235883f5c53060001b611281565b5b6111b47f02203a55426ebffa545fb1db083fc1e31d392c88dcde64ec119753f66b31f8e060001b611281565b6111e07f73fa0c5b41a47f64dabc3f9f71bda1582b8fbfef8502d6bab042023e4e167f1760001b611281565b8091505092915050565b60006112187f2d044c83763114a1fbc6ce101e65943d578f1ca4a9f465bde8dc6a1d6aac618560001b611281565b6112447fa6e61b718cfba9ee5f78b3e696a414475baafcaac17ad0df4464fcec363e76de60001b611281565b6112707f19bf578006fcd1ea38a9bfc95270c2f46b5f5c8e907d40dcf8363c7442c082dc60001b611281565b61127a8243610dd1565b9050919050565b5056fe4163636f756e744f776e657252656769737472793a206f776e657220616c7265616479206578697374734163636f756e744f776e657252656769737472793a206f776e657220646f65736e27742065786973744163636f756e744f776e657252656769737472793a2063616e6e6f742061646420307830206f776e6572a164736f6c634300060c000a";
