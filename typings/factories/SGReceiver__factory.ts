/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SGReceiver, SGReceiverInterface } from "../SGReceiver";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_sgRouter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StargateReceivedOnDestination",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountLD",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_payload",
        type: "bytes",
      },
    ],
    name: "sgReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610c55380380610c558339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b600081519050610087816100e8565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b60006100c1826100c8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100f1816100b6565b81146100fc57600080fd5b50565b610b478061010e6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063ab8236f314610030575b600080fd5b61004a60048036038101906100459190610585565b61004c565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100d1906107d4565b60405180910390fd5b6000818060200190518101906100f09190610533565b905061011d81848673ffffffffffffffffffffffffffffffffffffffff1661015f9092919063ffffffff16565b7fa99538de04029bcd6cc1a8af32ebefef188052f963f80ab67b7fc49e23d0cd4c848460405161014e929190610769565b60405180910390a150505050505050565b6101e08363a9059cbb60e01b848460405160240161017e929190610769565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506101e5565b505050565b6000610247826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166102ac9092919063ffffffff16565b90506000815111156102a75780806020019051810190610267919061055c565b6102a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029d90610814565b60405180910390fd5b5b505050565b60606102bb84846000856102c4565b90509392505050565b606082471015610309576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610300906107b4565b60405180910390fd5b610312856103d8565b610351576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610348906107f4565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161037a9190610752565b60006040518083038185875af1925050503d80600081146103b7576040519150601f19603f3d011682016040523d82523d6000602084013e6103bc565b606091505b50915091506103cc8282866103fb565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060831561040b5782905061045b565b60008351111561041e5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104529190610792565b60405180910390fd5b9392505050565b600061047561047084610859565b610834565b90508281526020810184848401111561048d57600080fd5b610498848285610924565b509392505050565b6000813590506104af81610ac7565b92915050565b6000815190506104c481610ade565b92915050565b6000815190506104d981610af5565b92915050565b600082601f8301126104f057600080fd5b8135610500848260208601610462565b91505092915050565b60008135905061051881610b0c565b92915050565b60008135905061052d81610b23565b92915050565b60006020828403121561054557600080fd5b6000610553848285016104b5565b91505092915050565b60006020828403121561056e57600080fd5b600061057c848285016104ca565b91505092915050565b60008060008060008060c0878903121561059e57600080fd5b60006105ac89828a01610509565b965050602087013567ffffffffffffffff8111156105c957600080fd5b6105d589828a016104df565b95505060406105e689828a0161051e565b94505060606105f789828a016104a0565b935050608061060889828a0161051e565b92505060a087013567ffffffffffffffff81111561062557600080fd5b61063189828a016104df565b9150509295509295509295565b610647816108bc565b82525050565b60006106588261088a565b61066281856108a0565b9350610672818560208601610933565b80840191505092915050565b600061068982610895565b61069381856108ab565b93506106a3818560208601610933565b6106ac816109c6565b840191505092915050565b60006106c46026836108ab565b91506106cf826109d7565b604082019050919050565b60006106e7601f836108ab565b91506106f282610a26565b602082019050919050565b600061070a601d836108ab565b915061071582610a4f565b602082019050919050565b600061072d602a836108ab565b915061073882610a78565b604082019050919050565b61074c8161091a565b82525050565b600061075e828461064d565b915081905092915050565b600060408201905061077e600083018561063e565b61078b6020830184610743565b9392505050565b600060208201905081810360008301526107ac818461067e565b905092915050565b600060208201905081810360008301526107cd816106b7565b9050919050565b600060208201905081810360008301526107ed816106da565b9050919050565b6000602082019050818103600083015261080d816106fd565b9050919050565b6000602082019050818103600083015261082d81610720565b9050919050565b600061083e61084f565b905061084a8282610966565b919050565b6000604051905090565b600067ffffffffffffffff82111561087457610873610997565b5b61087d826109c6565b9050602081019050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006108c7826108fa565b9050919050565b60006108d9826108fa565b9050919050565b60008115159050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610951578082015181840152602081019050610936565b83811115610960576000848401525b50505050565b61096f826109c6565b810181811067ffffffffffffffff8211171561098e5761098d610997565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f53746172676174653a3a206f6e6c7920737461726761746520726f7574657200600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b610ad0816108bc565b8114610adb57600080fd5b50565b610ae7816108ce565b8114610af257600080fd5b50565b610afe816108e0565b8114610b0957600080fd5b50565b610b15816108ec565b8114610b2057600080fd5b50565b610b2c8161091a565b8114610b3757600080fd5b5056fea164736f6c6343000804000a";

type SGReceiverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SGReceiverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SGReceiver__factory extends ContractFactory {
  constructor(...args: SGReceiverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _sgRouter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SGReceiver> {
    return super.deploy(_sgRouter, overrides || {}) as Promise<SGReceiver>;
  }
  getDeployTransaction(
    _sgRouter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_sgRouter, overrides || {});
  }
  attach(address: string): SGReceiver {
    return super.attach(address) as SGReceiver;
  }
  connect(signer: Signer): SGReceiver__factory {
    return super.connect(signer) as SGReceiver__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SGReceiverInterface {
    return new utils.Interface(_abi) as SGReceiverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SGReceiver {
    return new Contract(address, _abi, signerOrProvider) as SGReceiver;
  }
}
