/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AmarokFacet, AmarokFacetInterface } from "../AmarokFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_connext",
        type: "address",
      },
    ],
    name: "AmarokInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "_destination",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_relayerFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_transferId",
        type: "bytes32",
      },
    ],
    name: "AmarokNativeSwap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "_destination",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_relayerFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_transferId",
        type: "bytes32",
      },
    ],
    name: "AmarokTokenSwap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "_destination",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_callData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_relayerFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_transferId",
        type: "bytes32",
      },
    ],
    name: "AmarokXCall",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_callData",
        type: "bytes",
      },
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_relayerFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recovery",
        type: "address",
      },
      {
        internalType: "address",
        name: "_callback",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_callbackFee",
        type: "uint256",
      },
    ],
    name: "amarokCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_relayerFee",
        type: "uint256",
      },
    ],
    name: "amarokNativeAssetTransfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_relayerFee",
        type: "uint256",
      },
    ],
    name: "amarokTokenTransfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_connext",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_chainId",
        type: "uint32",
      },
    ],
    name: "initAmarok",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611500806100206000396000f3fe60806040526004361061003f5760003560e01c80638f76b7e0146100445780639adb1af514610060578063b4d5aed51461007c578063dddd8be914610098575b600080fd5b61005e60048036038101906100599190610b40565b6100c1565b005b61007a60048036038101906100759190610bbb565b6101f8565b005b61009660048036038101906100919190610d54565b610287565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610e3a565b6103d4565b005b6100cb85836104fa565b8473ffffffffffffffffffffffffffffffffffffffff1663095ea7b36100ef610756565b846040518363ffffffff1660e01b815260040161010d929190610e98565b6020604051808303816000875af115801561012c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101509190610ef9565b50600061017e856040518060200160405280600081525061016f61078e565b878a88883360008060006107b6565b90508573ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168563ffffffff167f2b7eff59a68b7c8dba3cca38fa20a9b09643160b50deccf63fb85f80fdeae7618686866040516101e893929190610f3f565b60405180910390a4505050505050565b6000610226846040518060200160405280600081525061021661078e565b86600034883360008060006107b6565b90508373ffffffffffffffffffffffffffffffffffffffff168363ffffffff167fea2172aa595d119249ad31920711a3d637ab077433324c007a70ad2ca4bef6d434858560405161027993929190610f3f565b60405180910390a350505050565b61029186866104fa565b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161461034c578573ffffffffffffffffffffffffffffffffffffffff1663095ea7b36102e9610756565b876040518363ffffffff1660e01b8152600401610307929190610e98565b6020604051808303816000875af1158015610326573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034a9190610ef9565b505b60006103698a8a61035b61078e565b8b8b8b8b8b8b8b60006107b6565b90508973ffffffffffffffffffffffffffffffffffffffff168863ffffffff167ff08b1a34521371ae389ef282d2444d6f3fa4c853c4c7138e97bc4b6fc688bdeb89898d8a876040516103c0959493929190610ffe565b60405180910390a350505050505050505050565b6103dc610967565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561044c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610443906110b5565b60405180910390fd5b6000610456610a02565b9050828160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818160000160146101000a81548163ffffffff021916908363ffffffff1602179055507f4b33229bbe49f3b43a7b1e8b98b19fd8d5afaf60c85cfc80a1ed2d31bd87040f836040516104ed91906110d5565b60405180910390a1505050565b600081141561050857610752565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156105845780341461057f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105769061113c565b60405180910390fd5b610751565b60008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105bf91906110d5565b602060405180830381865afa1580156105dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106009190611171565b90508273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161063f9392919061119e565b6020604051808303816000875af115801561065e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106829190610ef9565b5060008373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106be91906110d5565b602060405180830381865afa1580156106db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ff9190611171565b905082828261070e9190611204565b1461074e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107459061113c565b60405180910390fd5b50505b5b5050565b600080610761610a02565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b600080610799610a02565b90508060000160149054906101000a900463ffffffff1691505090565b6000806107c1610756565b905060006040518061012001604052808f73ffffffffffffffffffffffffffffffffffffffff1681526020018e81526020018d63ffffffff1681526020018c63ffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018515158152602001600015158152509050600060405180608001604052808381526020018c73ffffffffffffffffffffffffffffffffffffffff1681526020018b81526020018a815250905060008073ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff16146108d15760006108d3565b345b90508373ffffffffffffffffffffffffffffffffffffffff16634156a88382846040518363ffffffff1660e01b815260040161090f91906113e6565b60206040518083038185885af115801561092d573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906109529190611434565b9450505050509b9a5050505050505050505050565b61096f610a2f565b60040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a00576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f7906114d3565b60405180910390fd5b565b6000807fa4cabcf91d6212ba2873e2f19de6e26ae65fd3280b9eaa6d8bc38c5fba52ec9d90508091505090565b6000807fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90508091505090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9b82610a70565b9050919050565b610aab81610a90565b8114610ab657600080fd5b50565b600081359050610ac881610aa2565b92915050565b600063ffffffff82169050919050565b610ae781610ace565b8114610af257600080fd5b50565b600081359050610b0481610ade565b92915050565b6000819050919050565b610b1d81610b0a565b8114610b2857600080fd5b50565b600081359050610b3a81610b14565b92915050565b600080600080600060a08688031215610b5c57610b5b610a66565b5b6000610b6a88828901610ab9565b9550506020610b7b88828901610ab9565b9450506040610b8c88828901610af5565b9350506060610b9d88828901610b2b565b9250506080610bae88828901610b2b565b9150509295509295909350565b600080600060608486031215610bd457610bd3610a66565b5b6000610be286828701610ab9565b9350506020610bf386828701610af5565b9250506040610c0486828701610b2b565b9150509250925092565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610c6182610c18565b810181811067ffffffffffffffff82111715610c8057610c7f610c29565b5b80604052505050565b6000610c93610a5c565b9050610c9f8282610c58565b919050565b600067ffffffffffffffff821115610cbf57610cbe610c29565b5b610cc882610c18565b9050602081019050919050565b82818337600083830152505050565b6000610cf7610cf284610ca4565b610c89565b905082815260208101848484011115610d1357610d12610c13565b5b610d1e848285610cd5565b509392505050565b600082601f830112610d3b57610d3a610c0e565b5b8135610d4b848260208601610ce4565b91505092915050565b60008060008060008060008060006101208a8c031215610d7757610d76610a66565b5b6000610d858c828d01610ab9565b99505060208a013567ffffffffffffffff811115610da657610da5610a6b565b5b610db28c828d01610d26565b9850506040610dc38c828d01610af5565b9750506060610dd48c828d01610ab9565b9650506080610de58c828d01610b2b565b95505060a0610df68c828d01610b2b565b94505060c0610e078c828d01610ab9565b93505060e0610e188c828d01610ab9565b925050610100610e2a8c828d01610b2b565b9150509295985092959850929598565b60008060408385031215610e5157610e50610a66565b5b6000610e5f85828601610ab9565b9250506020610e7085828601610af5565b9150509250929050565b610e8381610a90565b82525050565b610e9281610b0a565b82525050565b6000604082019050610ead6000830185610e7a565b610eba6020830184610e89565b9392505050565b60008115159050919050565b610ed681610ec1565b8114610ee157600080fd5b50565b600081519050610ef381610ecd565b92915050565b600060208284031215610f0f57610f0e610a66565b5b6000610f1d84828501610ee4565b91505092915050565b6000819050919050565b610f3981610f26565b82525050565b6000606082019050610f546000830186610e89565b610f616020830185610e89565b610f6e6040830184610f30565b949350505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610fb0578082015181840152602081019050610f95565b83811115610fbf576000848401525b50505050565b6000610fd082610f76565b610fda8185610f81565b9350610fea818560208601610f92565b610ff381610c18565b840191505092915050565b600060a0820190506110136000830188610e7a565b6110206020830187610e89565b81810360408301526110328186610fc5565b90506110416060830185610e89565b61104e6080830184610f30565b9695505050505050565b600082825260208201905092915050565b7f416d61726f6b3a20696e76616c69642061646472657373000000000000000000600082015250565b600061109f601783611058565b91506110aa82611069565b602082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b60006020820190506110ea6000830184610e7a565b92915050565b7f416d61726f6b3a20496e76616c69642076616c75650000000000000000000000600082015250565b6000611126601583611058565b9150611131826110f0565b602082019050919050565b6000602082019050818103600083015261115581611119565b9050919050565b60008151905061116b81610b14565b92915050565b60006020828403121561118757611186610a66565b5b60006111958482850161115c565b91505092915050565b60006060820190506111b36000830186610e7a565b6111c06020830185610e7a565b6111cd6040830184610e89565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061120f82610b0a565b915061121a83610b0a565b92508282101561122d5761122c6111d5565b5b828203905092915050565b61124181610a90565b82525050565b600082825260208201905092915050565b600061126382610f76565b61126d8185611247565b935061127d818560208601610f92565b61128681610c18565b840191505092915050565b61129a81610ace565b82525050565b6112a981610b0a565b82525050565b6112b881610ec1565b82525050565b6000610120830160008301516112d76000860182611238565b50602083015184820360208601526112ef8282611258565b91505060408301516113046040860182611291565b5060608301516113176060860182611291565b50608083015161132a6080860182611238565b5060a083015161133d60a0860182611238565b5060c083015161135060c08601826112a0565b5060e083015161136360e08601826112af565b506101008301516113786101008601826112af565b508091505092915050565b600060808301600083015184820360008601526113a082826112be565b91505060208301516113b56020860182611238565b5060408301516113c860408601826112a0565b5060608301516113db60608601826112a0565b508091505092915050565b600060208201905081810360008301526114008184611383565b905092915050565b61141181610f26565b811461141c57600080fd5b50565b60008151905061142e81611408565b92915050565b60006020828403121561144a57611449610a66565b5b60006114588482850161141f565b91505092915050565b7f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b60006114bd602283611058565b91506114c882611461565b604082019050919050565b600060208201905081810360008301526114ec816114b0565b905091905056fea164736f6c634300080b000a";

type AmarokFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AmarokFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AmarokFacet__factory extends ContractFactory {
  constructor(...args: AmarokFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AmarokFacet> {
    return super.deploy(overrides || {}) as Promise<AmarokFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AmarokFacet {
    return super.attach(address) as AmarokFacet;
  }
  connect(signer: Signer): AmarokFacet__factory {
    return super.connect(signer) as AmarokFacet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AmarokFacetInterface {
    return new utils.Interface(_abi) as AmarokFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AmarokFacet {
    return new Contract(address, _abi, signerOrProvider) as AmarokFacet;
  }
}
