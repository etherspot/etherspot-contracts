/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AmarokFacet, AmarokFacetInterface } from "../AmarokFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_connext",
        type: "address",
      },
    ],
    name: "AmarokInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "_destination",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_relayerFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_transferId",
        type: "bytes32",
      },
    ],
    name: "AmarokNativeSwap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "_destination",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_relayerFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_transferId",
        type: "bytes32",
      },
    ],
    name: "AmarokTokenSwap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "_destination",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_callData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_relayerFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_transferId",
        type: "bytes32",
      },
    ],
    name: "AmarokXCall",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_callData",
        type: "bytes",
      },
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_relayerFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recovery",
        type: "address",
      },
      {
        internalType: "address",
        name: "_callback",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_callbackFee",
        type: "uint256",
      },
    ],
    name: "amarokCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_relayerFee",
        type: "uint256",
      },
    ],
    name: "amarokNativeAssetTransfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_relayerFee",
        type: "uint256",
      },
    ],
    name: "amarokTokenTransfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_connext",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_chainId",
        type: "uint32",
      },
    ],
    name: "initAmarok",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506114de806100206000396000f3fe60806040526004361061003f5760003560e01c80638f76b7e0146100445780639adb1af514610060578063b4d5aed51461007c578063dddd8be914610098575b600080fd5b61005e60048036038101906100599190610ac8565b6100c1565b005b61007a60048036038101906100759190610b43565b610168565b005b61009660048036038101906100919190610cdc565b6101f7565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610dc2565b61027f565b005b60006100ee85604051806020016040528060008152506100df6103a5565b878a88883360008060006103cd565b90508573ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168563ffffffff167f2b7eff59a68b7c8dba3cca38fa20a9b09643160b50deccf63fb85f80fdeae76186868660405161015893929190610e2a565b60405180910390a4505050505050565b600061019684604051806020016040528060008152506101866103a5565b86600034883360008060006103cd565b90508373ffffffffffffffffffffffffffffffffffffffff168363ffffffff167fea2172aa595d119249ad31920711a3d637ab077433324c007a70ad2ca4bef6d43485856040516101e993929190610e2a565b60405180910390a350505050565b60006102148a8a6102066103a5565b8b8b8b8b8b8b8b60006103cd565b90508973ffffffffffffffffffffffffffffffffffffffff168863ffffffff167ff08b1a34521371ae389ef282d2444d6f3fa4c853c4c7138e97bc4b6fc688bdeb89898d8a8760405161026b959493929190610ef8565b60405180910390a350505050505050505050565b610287610605565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156102f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ee90610faf565b60405180910390fd5b60006103016106a0565b9050828160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818160000160146101000a81548163ffffffff021916908363ffffffff1602179055507f4b33229bbe49f3b43a7b1e8b98b19fd8d5afaf60c85cfc80a1ed2d31bd87040f836040516103989190610fcf565b60405180910390a1505050565b6000806103b06106a0565b90508060000160149054906101000a900463ffffffff1691505090565b60006103db888888866106cd565b600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610496578773ffffffffffffffffffffffffffffffffffffffff1663095ea7b361043361097f565b896040518363ffffffff1660e01b8152600401610451929190610fea565b6020604051808303816000875af1158015610470573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610494919061104b565b505b60006104a061097f565b905060006040518061012001604052808f73ffffffffffffffffffffffffffffffffffffffff1681526020018e81526020018d63ffffffff1681526020018c63ffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018515158152602001600015158152509050600060405180608001604052808381526020018c73ffffffffffffffffffffffffffffffffffffffff1681526020018b81526020018a81525090508273ffffffffffffffffffffffffffffffffffffffff16634156a88334836040518363ffffffff1660e01b81526004016105ae9190611226565b60206040518083038185885af11580156105cc573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906105f19190611274565b93505050509b9a5050505050505050505050565b61060d6109b7565b60040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461069e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069590611313565b60405180910390fd5b565b6000807fa4cabcf91d6212ba2873e2f19de6e26ae65fd3280b9eaa6d8bc38c5fba52ec9d90508091505090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561075f5780828461070f9190611362565b6107199190611362565b341461075a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075190611404565b60405180910390fd5b610979565b808261076b9190611362565b34146107ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a390611404565b60405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107e79190610fcf565b602060405180830381865afa158015610804573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108289190611439565b90508473ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161086793929190611466565b6020604051808303816000875af1158015610886573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108aa919061104b565b5060008573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108e69190610fcf565b602060405180830381865afa158015610903573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109279190611439565b9050848282610936919061149d565b14610976576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096d90611404565b60405180910390fd5b50505b50505050565b60008061098a6106a0565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6000807fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90508091505090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a23826109f8565b9050919050565b610a3381610a18565b8114610a3e57600080fd5b50565b600081359050610a5081610a2a565b92915050565b600063ffffffff82169050919050565b610a6f81610a56565b8114610a7a57600080fd5b50565b600081359050610a8c81610a66565b92915050565b6000819050919050565b610aa581610a92565b8114610ab057600080fd5b50565b600081359050610ac281610a9c565b92915050565b600080600080600060a08688031215610ae457610ae36109ee565b5b6000610af288828901610a41565b9550506020610b0388828901610a41565b9450506040610b1488828901610a7d565b9350506060610b2588828901610ab3565b9250506080610b3688828901610ab3565b9150509295509295909350565b600080600060608486031215610b5c57610b5b6109ee565b5b6000610b6a86828701610a41565b9350506020610b7b86828701610a7d565b9250506040610b8c86828701610ab3565b9150509250925092565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610be982610ba0565b810181811067ffffffffffffffff82111715610c0857610c07610bb1565b5b80604052505050565b6000610c1b6109e4565b9050610c278282610be0565b919050565b600067ffffffffffffffff821115610c4757610c46610bb1565b5b610c5082610ba0565b9050602081019050919050565b82818337600083830152505050565b6000610c7f610c7a84610c2c565b610c11565b905082815260208101848484011115610c9b57610c9a610b9b565b5b610ca6848285610c5d565b509392505050565b600082601f830112610cc357610cc2610b96565b5b8135610cd3848260208601610c6c565b91505092915050565b60008060008060008060008060006101208a8c031215610cff57610cfe6109ee565b5b6000610d0d8c828d01610a41565b99505060208a013567ffffffffffffffff811115610d2e57610d2d6109f3565b5b610d3a8c828d01610cae565b9850506040610d4b8c828d01610a7d565b9750506060610d5c8c828d01610a41565b9650506080610d6d8c828d01610ab3565b95505060a0610d7e8c828d01610ab3565b94505060c0610d8f8c828d01610a41565b93505060e0610da08c828d01610a41565b925050610100610db28c828d01610ab3565b9150509295985092959850929598565b60008060408385031215610dd957610dd86109ee565b5b6000610de785828601610a41565b9250506020610df885828601610a7d565b9150509250929050565b610e0b81610a92565b82525050565b6000819050919050565b610e2481610e11565b82525050565b6000606082019050610e3f6000830186610e02565b610e4c6020830185610e02565b610e596040830184610e1b565b949350505050565b610e6a81610a18565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610eaa578082015181840152602081019050610e8f565b83811115610eb9576000848401525b50505050565b6000610eca82610e70565b610ed48185610e7b565b9350610ee4818560208601610e8c565b610eed81610ba0565b840191505092915050565b600060a082019050610f0d6000830188610e61565b610f1a6020830187610e02565b8181036040830152610f2c8186610ebf565b9050610f3b6060830185610e02565b610f486080830184610e1b565b9695505050505050565b600082825260208201905092915050565b7f416d61726f6b3a20696e76616c69642061646472657373000000000000000000600082015250565b6000610f99601783610f52565b9150610fa482610f63565b602082019050919050565b60006020820190508181036000830152610fc881610f8c565b9050919050565b6000602082019050610fe46000830184610e61565b92915050565b6000604082019050610fff6000830185610e61565b61100c6020830184610e02565b9392505050565b60008115159050919050565b61102881611013565b811461103357600080fd5b50565b6000815190506110458161101f565b92915050565b600060208284031215611061576110606109ee565b5b600061106f84828501611036565b91505092915050565b61108181610a18565b82525050565b600082825260208201905092915050565b60006110a382610e70565b6110ad8185611087565b93506110bd818560208601610e8c565b6110c681610ba0565b840191505092915050565b6110da81610a56565b82525050565b6110e981610a92565b82525050565b6110f881611013565b82525050565b6000610120830160008301516111176000860182611078565b506020830151848203602086015261112f8282611098565b915050604083015161114460408601826110d1565b50606083015161115760608601826110d1565b50608083015161116a6080860182611078565b5060a083015161117d60a0860182611078565b5060c083015161119060c08601826110e0565b5060e08301516111a360e08601826110ef565b506101008301516111b86101008601826110ef565b508091505092915050565b600060808301600083015184820360008601526111e082826110fe565b91505060208301516111f56020860182611078565b50604083015161120860408601826110e0565b50606083015161121b60608601826110e0565b508091505092915050565b6000602082019050818103600083015261124081846111c3565b905092915050565b61125181610e11565b811461125c57600080fd5b50565b60008151905061126e81611248565b92915050565b60006020828403121561128a576112896109ee565b5b60006112988482850161125f565b91505092915050565b7f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b60006112fd602283610f52565b9150611308826112a1565b604082019050919050565b6000602082019050818103600083015261132c816112f0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061136d82610a92565b915061137883610a92565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156113ad576113ac611333565b5b828201905092915050565b7f416d61726f6b3a20496e76616c69642076616c75650000000000000000000000600082015250565b60006113ee601583610f52565b91506113f9826113b8565b602082019050919050565b6000602082019050818103600083015261141d816113e1565b9050919050565b60008151905061143381610a9c565b92915050565b60006020828403121561144f5761144e6109ee565b5b600061145d84828501611424565b91505092915050565b600060608201905061147b6000830186610e61565b6114886020830185610e61565b6114956040830184610e02565b949350505050565b60006114a882610a92565b91506114b383610a92565b9250828210156114c6576114c5611333565b5b82820390509291505056fea164736f6c634300080b000a";

type AmarokFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AmarokFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AmarokFacet__factory extends ContractFactory {
  constructor(...args: AmarokFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AmarokFacet> {
    return super.deploy(overrides || {}) as Promise<AmarokFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AmarokFacet {
    return super.attach(address) as AmarokFacet;
  }
  connect(signer: Signer): AmarokFacet__factory {
    return super.connect(signer) as AmarokFacet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AmarokFacetInterface {
    return new utils.Interface(_abi) as AmarokFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AmarokFacet {
    return new Contract(address, _abi, signerOrProvider) as AmarokFacet;
  }
}
