/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LPToken, LPTokenInterface } from "../LPToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MINIMUM_LIQUIDITY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612771806100206000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063a457c2d711610071578063a457c2d71461030a578063a9059cbb1461033a578063ba9a7a561461036a578063dd62ed3e14610388578063f2fde38b146103b857610121565b806370a0823114610278578063715018a6146102a857806379cc6790146102b25780638da5cb5b146102ce57806395d89b41146102ec57610121565b8063313ce567116100f4578063313ce567146101c257806339509351146101e057806340c10f191461021057806342966c681461022c5780634cd88b761461024857610121565b806306fdde0314610126578063095ea7b31461014457806318160ddd1461017457806323b872dd14610192575b600080fd5b61012e6103d4565b60405161013b91906116b0565b60405180910390f35b61015e6004803603810190610159919061177a565b610466565b60405161016b91906117d5565b60405180910390f35b61017c610489565b60405161018991906117ff565b60405180910390f35b6101ac60048036038101906101a7919061181a565b610493565b6040516101b991906117d5565b60405180910390f35b6101ca6104c2565b6040516101d79190611889565b60405180910390f35b6101fa60048036038101906101f5919061177a565b6104cb565b60405161020791906117d5565b60405180910390f35b61022a6004803603810190610225919061177a565b610502565b005b610246600480360381019061024191906118a4565b6105ec565b005b610262600480360381019061025d9190611a06565b610600565b60405161026f91906117d5565b60405180910390f35b610292600480360381019061028d9190611a7e565b6106af565b60405161029f91906117ff565b60405180910390f35b6102b06106f8565b005b6102cc60048036038101906102c7919061177a565b610780565b005b6102d66107a0565b6040516102e39190611aba565b60405180910390f35b6102f46107ca565b60405161030191906116b0565b60405180910390f35b610324600480360381019061031f919061177a565b61085c565b60405161033191906117d5565b60405180910390f35b610354600480360381019061034f919061177a565b6108d3565b60405161036191906117d5565b60405180910390f35b6103726108f6565b60405161037f91906117ff565b60405180910390f35b6103a2600480360381019061039d9190611ad5565b6108fc565b6040516103af91906117ff565b60405180910390f35b6103d260048036038101906103cd9190611a7e565b610983565b005b6060603680546103e390611b44565b80601f016020809104026020016040519081016040528092919081815260200182805461040f90611b44565b801561045c5780601f106104315761010080835404028352916020019161045c565b820191906000526020600020905b81548152906001019060200180831161043f57829003601f168201915b5050505050905090565b600080610471610a7a565b905061047e818585610a82565b600191505092915050565b6000603554905090565b60008061049e610a7a565b90506104ab858285610c4b565b6104b6858585610cd7565b60019150509392505050565b60006012905090565b6000806104d6610a7a565b90506104f78185856104e885896108fc565b6104f29190611ba4565b610a82565b600191505092915050565b61050a610a7a565b73ffffffffffffffffffffffffffffffffffffffff166105286107a0565b73ffffffffffffffffffffffffffffffffffffffff161461057e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057590611c46565b60405180910390fd5b600081036105c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b890611cb2565b60405180910390fd5b60006105cb610489565b036105de576105dd60016103e8610f59565b5b6105e88282610f59565b5050565b6105fd6105f7610a7a565b826110b9565b50565b60008061060d6001611291565b90508015610631576001600060016101000a81548160ff0219169083151502179055505b610639611381565b61064384846113d2565b61064b611445565b6001915080156106a85760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498600160405161069f9190611d17565b60405180910390a15b5092915050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610700610a7a565b73ffffffffffffffffffffffffffffffffffffffff1661071e6107a0565b73ffffffffffffffffffffffffffffffffffffffff1614610774576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076b90611c46565b60405180910390fd5b61077e60006114a6565b565b6107928261078c610a7a565b83610c4b565b61079c82826110b9565b5050565b6000609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060603780546107d990611b44565b80601f016020809104026020016040519081016040528092919081815260200182805461080590611b44565b80156108525780601f1061082757610100808354040283529160200191610852565b820191906000526020600020905b81548152906001019060200180831161083557829003601f168201915b5050505050905090565b600080610867610a7a565b9050600061087582866108fc565b9050838110156108ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b190611da4565b60405180910390fd5b6108c78286868403610a82565b60019250505092915050565b6000806108de610a7a565b90506108eb818585610cd7565b600191505092915050565b6103e881565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61098b610a7a565b73ffffffffffffffffffffffffffffffffffffffff166109a96107a0565b73ffffffffffffffffffffffffffffffffffffffff16146109ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f690611c46565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6590611e36565b60405180910390fd5b610a77816114a6565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610af1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae890611ec8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5790611f5a565b60405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610c3e91906117ff565b60405180910390a3505050565b6000610c5784846108fc565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610cd15781811015610cc3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cba90611fc6565b60405180910390fd5b610cd08484848403610a82565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3d90612058565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610db5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dac906120ea565b60405180910390fd5b610dc083838361156c565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3e9061217c565b60405180910390fd5b818103603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610edc9190611ba4565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610f4091906117ff565b60405180910390a3610f538484846115ea565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fc8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fbf906121e8565b60405180910390fd5b610fd46000838361156c565b8060356000828254610fe69190611ba4565b9250508190555080603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461103c9190611ba4565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110a191906117ff565b60405180910390a36110b5600083836115ea565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611128576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111f9061227a565b60405180910390fd5b6111348260008361156c565b6000603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156111bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b29061230c565b60405180910390fd5b818103603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160356000828254611213919061232c565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161127891906117ff565b60405180910390a361128c836000846115ea565b505050565b60008060019054906101000a900460ff16156113085760018260ff161480156112c057506112be306115ef565b155b6112ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f6906123d2565b60405180910390fd5b6000905061137c565b8160ff1660008054906101000a900460ff1660ff161061135d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611354906123d2565b60405180910390fd5b816000806101000a81548160ff021916908360ff160217905550600190505b919050565b600060019054906101000a900460ff166113d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c790612464565b60405180910390fd5b565b600060019054906101000a900460ff16611421576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141890612464565b60405180910390fd5b81603690816114309190612626565b5080603790816114409190612626565b505050565b600060019054906101000a900460ff16611494576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148b90612464565b60405180910390fd5b6114a461149f610a7a565b6114a6565b565b6000609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081609760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611577838383611612565b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115dc90612744565b60405180910390fd5b505050565b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611651578082015181840152602081019050611636565b83811115611660576000848401525b50505050565b6000601f19601f8301169050919050565b600061168282611617565b61168c8185611622565b935061169c818560208601611633565b6116a581611666565b840191505092915050565b600060208201905081810360008301526116ca8184611677565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611711826116e6565b9050919050565b61172181611706565b811461172c57600080fd5b50565b60008135905061173e81611718565b92915050565b6000819050919050565b61175781611744565b811461176257600080fd5b50565b6000813590506117748161174e565b92915050565b60008060408385031215611791576117906116dc565b5b600061179f8582860161172f565b92505060206117b085828601611765565b9150509250929050565b60008115159050919050565b6117cf816117ba565b82525050565b60006020820190506117ea60008301846117c6565b92915050565b6117f981611744565b82525050565b600060208201905061181460008301846117f0565b92915050565b600080600060608486031215611833576118326116dc565b5b60006118418682870161172f565b93505060206118528682870161172f565b925050604061186386828701611765565b9150509250925092565b600060ff82169050919050565b6118838161186d565b82525050565b600060208201905061189e600083018461187a565b92915050565b6000602082840312156118ba576118b96116dc565b5b60006118c884828501611765565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61191382611666565b810181811067ffffffffffffffff82111715611932576119316118db565b5b80604052505050565b60006119456116d2565b9050611951828261190a565b919050565b600067ffffffffffffffff821115611971576119706118db565b5b61197a82611666565b9050602081019050919050565b82818337600083830152505050565b60006119a96119a484611956565b61193b565b9050828152602081018484840111156119c5576119c46118d6565b5b6119d0848285611987565b509392505050565b600082601f8301126119ed576119ec6118d1565b5b81356119fd848260208601611996565b91505092915050565b60008060408385031215611a1d57611a1c6116dc565b5b600083013567ffffffffffffffff811115611a3b57611a3a6116e1565b5b611a47858286016119d8565b925050602083013567ffffffffffffffff811115611a6857611a676116e1565b5b611a74858286016119d8565b9150509250929050565b600060208284031215611a9457611a936116dc565b5b6000611aa28482850161172f565b91505092915050565b611ab481611706565b82525050565b6000602082019050611acf6000830184611aab565b92915050565b60008060408385031215611aec57611aeb6116dc565b5b6000611afa8582860161172f565b9250506020611b0b8582860161172f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611b5c57607f821691505b602082108103611b6f57611b6e611b15565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611baf82611744565b9150611bba83611744565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611bef57611bee611b75565b5b828201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611c30602083611622565b9150611c3b82611bfa565b602082019050919050565b60006020820190508181036000830152611c5f81611c23565b9050919050565b7f4c50546f6b656e3a2063616e6e6f74206d696e74203000000000000000000000600082015250565b6000611c9c601683611622565b9150611ca782611c66565b602082019050919050565b60006020820190508181036000830152611ccb81611c8f565b9050919050565b6000819050919050565b6000819050919050565b6000611d01611cfc611cf784611cd2565b611cdc565b61186d565b9050919050565b611d1181611ce6565b82525050565b6000602082019050611d2c6000830184611d08565b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611d8e602583611622565b9150611d9982611d32565b604082019050919050565b60006020820190508181036000830152611dbd81611d81565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611e20602683611622565b9150611e2b82611dc4565b604082019050919050565b60006020820190508181036000830152611e4f81611e13565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611eb2602483611622565b9150611ebd82611e56565b604082019050919050565b60006020820190508181036000830152611ee181611ea5565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611f44602283611622565b9150611f4f82611ee8565b604082019050919050565b60006020820190508181036000830152611f7381611f37565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611fb0601d83611622565b9150611fbb82611f7a565b602082019050919050565b60006020820190508181036000830152611fdf81611fa3565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000612042602583611622565b915061204d82611fe6565b604082019050919050565b6000602082019050818103600083015261207181612035565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006120d4602383611622565b91506120df82612078565b604082019050919050565b60006020820190508181036000830152612103816120c7565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000612166602683611622565b91506121718261210a565b604082019050919050565b6000602082019050818103600083015261219581612159565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006121d2601f83611622565b91506121dd8261219c565b602082019050919050565b60006020820190508181036000830152612201816121c5565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000612264602183611622565b915061226f82612208565b604082019050919050565b6000602082019050818103600083015261229381612257565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b60006122f6602283611622565b91506123018261229a565b604082019050919050565b60006020820190508181036000830152612325816122e9565b9050919050565b600061233782611744565b915061234283611744565b92508282101561235557612354611b75565b5b828203905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b60006123bc602e83611622565b91506123c782612360565b604082019050919050565b600060208201905081810360008301526123eb816123af565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b600061244e602b83611622565b9150612459826123f2565b604082019050919050565b6000602082019050818103600083015261247d81612441565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026124e67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826124a9565b6124f086836124a9565b95508019841693508086168417925050509392505050565b600061252361251e61251984611744565b611cdc565b611744565b9050919050565b6000819050919050565b61253d83612508565b6125516125498261252a565b8484546124b6565b825550505050565b600090565b612566612559565b612571818484612534565b505050565b5b818110156125955761258a60008261255e565b600181019050612577565b5050565b601f8211156125da576125ab81612484565b6125b484612499565b810160208510156125c3578190505b6125d76125cf85612499565b830182612576565b50505b505050565b600082821c905092915050565b60006125fd600019846008026125df565b1980831691505092915050565b600061261683836125ec565b9150826002028217905092915050565b61262f82611617565b67ffffffffffffffff811115612648576126476118db565b5b6126528254611b44565b61265d828285612599565b600060209050601f831160018114612690576000841561267e578287015190505b612688858261260a565b8655506126f0565b601f19841661269e86612484565b60005b828110156126c6578489015182556001820191506020850194506020810190506126a1565b868310156126e357848901516126df601f8916826125ec565b8355505b6001600288020188555050505b505050505050565b7f4c50546f6b656e3a2063616e6e6f742073656e6420746f20697473656c660000600082015250565b600061272e601e83611622565b9150612739826126f8565b602082019050919050565b6000602082019050818103600083015261275d81612721565b905091905056fea164736f6c634300080f000a";

type LPTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LPTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LPToken__factory extends ContractFactory {
  constructor(...args: LPTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LPToken> {
    return super.deploy(overrides || {}) as Promise<LPToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LPToken {
    return super.attach(address) as LPToken;
  }
  connect(signer: Signer): LPToken__factory {
    return super.connect(signer) as LPToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LPTokenInterface {
    return new utils.Interface(_abi) as LPTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LPToken {
    return new Contract(address, _abi, signerOrProvider) as LPToken;
  }
}
