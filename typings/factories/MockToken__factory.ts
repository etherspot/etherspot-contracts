/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockToken, MockTokenInterface } from "../MockToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimal",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001cbd38038062001cbd8339818101604052810190620000379190620001d6565b828281600390805190602001906200005192919062000091565b5080600490805190602001906200006a92919062000091565b50505080600560006101000a81548160ff021916908360ff1602179055505050506200041b565b8280546200009f9062000312565b90600052602060002090601f016020900481019282620000c357600085556200010f565b82601f10620000de57805160ff19168380011785556200010f565b828001600101855582156200010f579182015b828111156200010e578251825591602001919060010190620000f1565b5b5090506200011e919062000122565b5090565b5b808211156200013d57600081600090555060010162000123565b5090565b600062000158620001528462000299565b62000270565b905082815260208101848484011115620001775762000176620003e1565b5b62000184848285620002dc565b509392505050565b600082601f830112620001a457620001a3620003dc565b5b8151620001b684826020860162000141565b91505092915050565b600081519050620001d08162000401565b92915050565b600080600060608486031215620001f257620001f1620003eb565b5b600084015167ffffffffffffffff811115620002135762000212620003e6565b5b62000221868287016200018c565b935050602084015167ffffffffffffffff811115620002455762000244620003e6565b5b62000253868287016200018c565b92505060406200026686828701620001bf565b9150509250925092565b60006200027c6200028f565b90506200028a828262000348565b919050565b6000604051905090565b600067ffffffffffffffff821115620002b757620002b6620003ad565b5b620002c282620003f0565b9050602081019050919050565b600060ff82169050919050565b60005b83811015620002fc578082015181840152602081019050620002df565b838111156200030c576000848401525b50505050565b600060028204905060018216806200032b57607f821691505b602082108114156200034257620003416200037e565b5b50919050565b6200035382620003f0565b810181811067ffffffffffffffff82111715620003755762000374620003ad565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6200040c81620002cf565b81146200041857600080fd5b50565b611892806200042b6000396000f3fe6080604052600436106100c65760003560e01c806340c10f191161007f57806395d89b411161005957806395d89b4114610296578063a457c2d7146102c1578063a9059cbb146102fe578063dd62ed3e1461033b576100cd565b806340c10f191461020757806342966c681461023057806370a0823114610259576100cd565b806306fdde03146100cf578063095ea7b3146100fa57806318160ddd1461013757806323b872dd14610162578063313ce5671461019f57806339509351146101ca576100cd565b366100cd57005b005b3480156100db57600080fd5b506100e4610378565b6040516100f19190611221565b60405180910390f35b34801561010657600080fd5b50610121600480360381019061011c9190610fd5565b61040a565b60405161012e9190611206565b60405180910390f35b34801561014357600080fd5b5061014c61042d565b6040516101599190611383565b60405180910390f35b34801561016e57600080fd5b5061018960048036038101906101849190610f82565b610437565b6040516101969190611206565b60405180910390f35b3480156101ab57600080fd5b506101b4610466565b6040516101c1919061139e565b60405180910390f35b3480156101d657600080fd5b506101f160048036038101906101ec9190610fd5565b61047d565b6040516101fe9190611206565b60405180910390f35b34801561021357600080fd5b5061022e60048036038101906102299190610fd5565b6104b4565b005b34801561023c57600080fd5b5061025760048036038101906102529190611015565b6104c2565b005b34801561026557600080fd5b50610280600480360381019061027b9190610f15565b6104cf565b60405161028d9190611383565b60405180910390f35b3480156102a257600080fd5b506102ab610517565b6040516102b89190611221565b60405180910390f35b3480156102cd57600080fd5b506102e860048036038101906102e39190610fd5565b6105a9565b6040516102f59190611206565b60405180910390f35b34801561030a57600080fd5b5061032560048036038101906103209190610fd5565b610620565b6040516103329190611206565b60405180910390f35b34801561034757600080fd5b50610362600480360381019061035d9190610f42565b610643565b60405161036f9190611383565b60405180910390f35b606060038054610387906114e7565b80601f01602080910402602001604051908101604052809291908181526020018280546103b3906114e7565b80156104005780601f106103d557610100808354040283529160200191610400565b820191906000526020600020905b8154815290600101906020018083116103e357829003601f168201915b5050505050905090565b6000806104156106ca565b90506104228185856106d2565b600191505092915050565b6000600254905090565b6000806104426106ca565b905061044f85828561089d565b61045a858585610929565b60019150509392505050565b6000600560009054906101000a900460ff16905090565b6000806104886106ca565b90506104a981858561049a8589610643565b6104a491906113d5565b6106d2565b600191505092915050565b6104be8282610baa565b5050565b6104cc3382610d0a565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054610526906114e7565b80601f0160208091040260200160405190810160405280929190818152602001828054610552906114e7565b801561059f5780601f106105745761010080835404028352916020019161059f565b820191906000526020600020905b81548152906001019060200180831161058257829003601f168201915b5050505050905090565b6000806105b46106ca565b905060006105c28286610643565b905083811015610607576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fe90611343565b60405180910390fd5b61061482868684036106d2565b60019250505092915050565b60008061062b6106ca565b9050610638818585610929565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610742576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073990611323565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a990611283565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108909190611383565b60405180910390a3505050565b60006108a98484610643565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109235781811015610915576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090c906112a3565b60405180910390fd5b61092284848484036106d2565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610999576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099090611303565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0090611243565b60405180910390fd5b610a14838383610ee1565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a91906112c3565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b2d91906113d5565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b919190611383565b60405180910390a3610ba4848484610ee6565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1190611363565b60405180910390fd5b610c2660008383610ee1565b8060026000828254610c3891906113d5565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c8d91906113d5565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610cf29190611383565b60405180910390a3610d0660008383610ee6565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d71906112e3565b60405180910390fd5b610d8682600083610ee1565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0390611263565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160026000828254610e63919061142b565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ec89190611383565b60405180910390a3610edc83600084610ee6565b505050565b505050565b505050565b600081359050610efa81611857565b92915050565b600081359050610f0f8161186e565b92915050565b600060208284031215610f2b57610f2a611577565b5b6000610f3984828501610eeb565b91505092915050565b60008060408385031215610f5957610f58611577565b5b6000610f6785828601610eeb565b9250506020610f7885828601610eeb565b9150509250929050565b600080600060608486031215610f9b57610f9a611577565b5b6000610fa986828701610eeb565b9350506020610fba86828701610eeb565b9250506040610fcb86828701610f00565b9150509250925092565b60008060408385031215610fec57610feb611577565b5b6000610ffa85828601610eeb565b925050602061100b85828601610f00565b9150509250929050565b60006020828403121561102b5761102a611577565b5b600061103984828501610f00565b91505092915050565b61104b81611471565b82525050565b600061105c826113b9565b61106681856113c4565b93506110768185602086016114b4565b61107f8161157c565b840191505092915050565b60006110976023836113c4565b91506110a28261158d565b604082019050919050565b60006110ba6022836113c4565b91506110c5826115dc565b604082019050919050565b60006110dd6022836113c4565b91506110e88261162b565b604082019050919050565b6000611100601d836113c4565b915061110b8261167a565b602082019050919050565b60006111236026836113c4565b915061112e826116a3565b604082019050919050565b60006111466021836113c4565b9150611151826116f2565b604082019050919050565b60006111696025836113c4565b915061117482611741565b604082019050919050565b600061118c6024836113c4565b915061119782611790565b604082019050919050565b60006111af6025836113c4565b91506111ba826117df565b604082019050919050565b60006111d2601f836113c4565b91506111dd8261182e565b602082019050919050565b6111f18161149d565b82525050565b611200816114a7565b82525050565b600060208201905061121b6000830184611042565b92915050565b6000602082019050818103600083015261123b8184611051565b905092915050565b6000602082019050818103600083015261125c8161108a565b9050919050565b6000602082019050818103600083015261127c816110ad565b9050919050565b6000602082019050818103600083015261129c816110d0565b9050919050565b600060208201905081810360008301526112bc816110f3565b9050919050565b600060208201905081810360008301526112dc81611116565b9050919050565b600060208201905081810360008301526112fc81611139565b9050919050565b6000602082019050818103600083015261131c8161115c565b9050919050565b6000602082019050818103600083015261133c8161117f565b9050919050565b6000602082019050818103600083015261135c816111a2565b9050919050565b6000602082019050818103600083015261137c816111c5565b9050919050565b600060208201905061139860008301846111e8565b92915050565b60006020820190506113b360008301846111f7565b92915050565b600081519050919050565b600082825260208201905092915050565b60006113e08261149d565b91506113eb8361149d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114205761141f611519565b5b828201905092915050565b60006114368261149d565b91506114418361149d565b92508282101561145457611453611519565b5b828203905092915050565b600061146a8261147d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156114d25780820151818401526020810190506114b7565b838111156114e1576000848401525b50505050565b600060028204905060018216806114ff57607f821691505b6020821081141561151357611512611548565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6118608161145f565b811461186b57600080fd5b50565b6118778161149d565b811461188257600080fd5b5056fea164736f6c6343000807000a";

type MockTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockToken__factory extends ContractFactory {
  constructor(...args: MockTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _name: string,
    _symbol: string,
    _decimal: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockToken> {
    return super.deploy(
      _name,
      _symbol,
      _decimal,
      overrides || {}
    ) as Promise<MockToken>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    _decimal: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _decimal,
      overrides || {}
    );
  }
  attach(address: string): MockToken {
    return super.attach(address) as MockToken;
  }
  connect(signer: Signer): MockToken__factory {
    return super.connect(signer) as MockToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockTokenInterface {
    return new utils.Interface(_abi) as MockTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockToken {
    return new Contract(address, _abi, signerOrProvider) as MockToken;
  }
}
