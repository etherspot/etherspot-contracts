/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CBridgeFacet, CBridgeFacetInterface } from "../CBridgeFacet";

const _abi = [
  {
    inputs: [],
    name: "CBSlippageTooLow",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotBridgeToSameNetwork",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyError",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenAddressIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddressProvided",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "cBridge",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "CBInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "bridgeUsed",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "qty",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chainIdTo",
        type: "uint256",
      },
    ],
    name: "CBTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "CBUpdatedBridge",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newSlippage",
        type: "uint256",
      },
    ],
    name: "CBUpdatedSlippageTolerance",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__58fae2aa",
        type: "bytes8",
      },
    ],
    name: "c_58fae2aa",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__b7c4ddcd",
        type: "bytes8",
      },
    ],
    name: "c_b7c4ddcd",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__58fae2aa",
        type: "bytes8",
      },
    ],
    name: "c_false58fae2aa",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__b7c4ddcd",
        type: "bytes8",
      },
    ],
    name: "c_falseb7c4ddcd",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__58fae2aa",
        type: "bytes8",
      },
    ],
    name: "c_true58fae2aa",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__b7c4ddcd",
        type: "bytes8",
      },
    ],
    name: "c_trueb7c4ddcd",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "dstChainId",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "qty",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct CBridgeFacet.CBridgeData",
        name: "_cbData",
        type: "tuple",
      },
    ],
    name: "cbBridgeTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_cbBridge",
        type: "address",
      },
    ],
    name: "cbInitialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newAddress",
        type: "address",
      },
    ],
    name: "cbUpdateBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_newSlippage",
        type: "uint32",
      },
    ],
    name: "cbUpdateSlippageTolerance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "cbWithdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612288806100206000396000f3fe6080604052600436106100a05760003560e01c806352434c6e1161006457806352434c6e146101945780636f395e60146101b05780637f76a521146101d95780639206af4c146102025780639e32e2e61461023f578063a1ba0bbc14610268576100a7565b8063221263de146100ac57806322359169146100d55780632b80b66e1461011257806340d280a21461014f57806350501f6914610178576100a7565b366100a757005b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce9190611a45565b6102a5565b005b3480156100e157600080fd5b506100fc60048036038101906100f79190611a45565b6102a8565b6040516101099190611dd3565b60405180910390f35b34801561011e57600080fd5b5061013960048036038101906101349190611a45565b6102af565b6040516101469190611dd3565b60405180910390f35b34801561015b57600080fd5b50610176600480360381019061017191906119a4565b6102b6565b005b610192600480360381019061018d91906119cd565b6104f7565b005b6101ae60048036038101906101a99190611a6e565b610738565b005b3480156101bc57600080fd5b506101d760048036038101906101d291906119a4565b610e72565b005b3480156101e557600080fd5b5061020060048036038101906101fb9190611a45565b61105b565b005b34801561020e57600080fd5b5061022960048036038101906102249190611a45565b61105e565b6040516102369190611dd3565b60405180910390f35b34801561024b57600080fd5b5061026660048036038101906102619190611ac0565b611069565b005b34801561027457600080fd5b5061028f600480360381019061028a9190611a45565b61120c565b60405161029c9190611dd3565b60405180910390f35b50565b6000919050565b6000919050565b6102ca671bd090f89cfcd19360c01b61105b565b6102de674b099b3457b0ff1e60c01b61105b565b6102f267127b6e246ac10bd360c01b61105b565b6102fa611217565b61030e67d6649f8b385508b360c01b61105b565b610322670a9ac4f8da592ecc60c01b61105b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561039d5761036b67ec0ffeb12a6156b560c01b61105b565b6040517f8474420100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103b1677aca0cae1088047260c01b61105b565b6103c5675b2248d7e56808e260c01b61105b565b6103d9676a129d88c86f6ac560c01b61105b565b60006103e3611316565b90506103f967c20258a37d30cb7860c01b61105b565b818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061045067cbe19e55c404cf9d60c01b61105b565b46816001018190555061046d67066dbe6a3e0cf28160c01b61105b565b6127108160020160006101000a81548163ffffffff021916908363ffffffff1602179055506104a6671d63d5f0ce6ca76660c01b61105b565b6104ba670fdc5ed72d200bf360c01b61105b565b7fcbfd47a07530fc4fffba96f5686a7127e5661fe26dd01503239ca2f66fcad99082466040516104eb929190611daa565b60405180910390a15050565b61050b6714b7d286f6b8ff7860c01b61105b565b61051f675a423aeaf20dd32860c01b6102a5565b610533679ad6790127db18bb60c01b6102a5565b610547672737674dbc7078ee60c01b6102a5565b6000610551611394565b90506105676728809103a8bd973660c01b6102a5565b61057b67d649ab2105259e8960c01b6102a5565b6001816000015414156105ce5761059c67cfd59523a7e022a060c01b6102a5565b6040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105e267a2892a3d86d37ccc60c01b6102a5565b6105f667efa2e82dc813ef4860c01b6102a5565b60018160000181905550610614670ecd9b89cef8e43260c01b6102a5565b6106286767042505b76bcfeb60c01b61105b565b61063c679a563366a085961660c01b61105b565b6106506749cef90fc194bb3b60c01b61105b565b61066467162f65cf01a57ef760c01b61105b565b61066c611217565b610680679f55999c8cf1245660c01b61105b565b610694671564cbf787a1ac8560c01b61105b565b6106bf30838673ffffffffffffffffffffffffffffffffffffffff166114129092919063ffffffff16565b6106d36702fae3f7016dc9d360c01b61105b565b6106e767da9e5979f949ce3e60c01b61105b565b6107143084848773ffffffffffffffffffffffffffffffffffffffff16611570909392919063ffffffff16565b61072867c021ef4410c0a57560c01b6102a5565b6000816000018190555050505050565b61074c6707c031fbe43410d360c01b61105b565b610760675a423aeaf20dd32860c01b6102a5565b610774679ad6790127db18bb60c01b6102a5565b610788672737674dbc7078ee60c01b6102a5565b6000610792611394565b90506107a86728809103a8bd973660c01b6102a5565b6107bc67d649ab2105259e8960c01b6102a5565b60018160000154141561080f576107dd67cfd59523a7e022a060c01b6102a5565b6040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61082367a2892a3d86d37ccc60c01b6102a5565b61083767efa2e82dc813ef4860c01b6102a5565b60018160000181905550610855670ecd9b89cef8e43260c01b6102a5565b6108696721356ab71a5ec78f60c01b61105b565b61087d67511f70bae4d7035860c01b61105b565b610891670e36dbf12ff8d36b60c01b61105b565b6108a567b97cdb73a261e29960c01b61105b565b8160000160208101906108b89190611ae9565b67ffffffffffffffff16461415610923576108dd671fa4052a10a3a0ee60c01b61105b565b6108f167b8e3fa1d476c8f0160c01b61105b565b6040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61093767704ec19135164f3460c01b61105b565b61094b67f1920bcd73ed2fab60c01b61105b565b61095f675b9f289ee83640f460c01b61105b565b600073ffffffffffffffffffffffffffffffffffffffff1682606001602081019061098a91906119a4565b73ffffffffffffffffffffffffffffffffffffffff1614156109ec576109ba67bba6ed4a5db580c060c01b61105b565b6040517f8474420100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a00675ef7e63aa41b387e60c01b61105b565b610a1467490d307936583df660c01b61105b565b610a28679aa6c545a1b1a3d660c01b61105b565b6000826040013511610a7a57610a4867f0aec2f652a26b9360c01b61105b565b6040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a8e676be4ed4bfe4e025b60c01b61105b565b610aa267533a52711abe650060c01b61105b565b610ab667ada5a94b7cc6990160c01b61105b565b600073ffffffffffffffffffffffffffffffffffffffff16826080016020810190610ae191906119a4565b73ffffffffffffffffffffffffffffffffffffffff161415610b4357610b1167c0034bb8b79be17460c01b61105b565b6040517fdc2e5e8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b57673481716bfa0a92da60c01b61105b565b610b6b67fa23589b0d26245060c01b61105b565b610b7f672be2e09752365f7660c01b61105b565b6000610b89611316565b9050610b9f679e33f2c0be7ef5ae60c01b61105b565b610bb367d479f8c6138e56b760c01b61105b565b60008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050610bf067279faed61ba89eac60c01b61105b565b610c0467160fec878d84afe360c01b61105b565b610c4733308660400135876080016020810190610c2191906119a4565b73ffffffffffffffffffffffffffffffffffffffff16611570909392919063ffffffff16565b610c5b6724ab1c7798b90f3060c01b61105b565b610c6f6759ad2017151fa75860c01b61105b565b610cb0818560400135866080016020810190610c8b91906119a4565b73ffffffffffffffffffffffffffffffffffffffff166114129092919063ffffffff16565b610cc467532d0e8ad38716ed60c01b61105b565b610cd867c3194b0f64ce4b5060c01b61105b565b8073ffffffffffffffffffffffffffffffffffffffff1663a5977fbb856060016020810190610d0791906119a4565b866080016020810190610d1a91906119a4565b8760400135886000016020810190610d329190611ae9565b896020016020810190610d459190611ae9565b8860020160009054906101000a900463ffffffff166040518763ffffffff1660e01b8152600401610d7b96959493929190611d49565b600060405180830381600087803b158015610d9557600080fd5b505af1158015610da9573d6000803e3d6000fd5b50505050610dc167cd7cb0b0100d5d4660c01b61105b565b610dd567ce50704b241a168060c01b61105b565b7fd565a5cf794050de1a171170c91acd5d14cbf11877dc3fa020e9975495ab1757846080016020810190610e0991906119a4565b33866060016020810190610e1d91906119a4565b8760400135886000016020810190610e359190611ae9565b604051610e46959493929190611e50565b60405180910390a15050610e6467c021ef4410c0a57560c01b6102a5565b600081600001819055505050565b610e8667e9406adc9e4a592260c01b61105b565b610e9a670253bb530e62a01260c01b61105b565b610eae67b863db777a8b832760c01b61105b565b610eb6611217565b610eca67809a39851e20e6aa60c01b61105b565b610ede67ee8c081554212cef60c01b61105b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f5957610f27670a193d3cf4ea4ed560c01b61105b565b6040517f8474420100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f6d67e4e9d9222af84ff960c01b61105b565b610f8167d5917be14cd803c460c01b61105b565b610f9567ce9ee697175aa06e60c01b61105b565b6000610f9f611316565b9050610fb567e7eb0cf6b0faa53560c01b61105b565b818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061100c671c80fc1e809ec56560c01b61105b565b611020676d68432a5aa5ab5960c01b61105b565b7f4ae67faf3cf135d9eca1b5490d3613096d2d0610fca7496112fa46ef019fbd4e8260405161104f9190611cce565b60405180910390a15050565b50565b600060019050919050565b61107d6753bb9b4cce5b56b260c01b61105b565b61109167476ef97c728cd84f60c01b61105b565b6110a56785a634ea63ac9bad60c01b61105b565b6113888163ffffffff16116110fa576110c867df93a3f9e9c128b460c01b61105b565b6040517f9ff4125000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61110e672642ee08789395ac60c01b61105b565b611122674d5dc5a53a20841760c01b61105b565b6111366745498b3bb7d0c9fc60c01b61105b565b61113e611217565b61115267460499bfca3ef7e260c01b61105b565b611166677e3c53c648077fd160c01b61105b565b6000611170611316565b9050611186671efb386b08b662e060c01b61105b565b818160020160006101000a81548163ffffffff021916908363ffffffff1602179055506111bd676d92c317d2c6bba660c01b61105b565b6111d16743d9b3a2bb4c166160c01b61105b565b7f8d5e80c35df41e151b58f1a100ad605ae1ebcda3d0c329b22820b232767a7730826040516112009190611f16565b60405180910390a15050565b600060019050919050565b61122b679eee40465793ea5060c01b6115f9565b61123f67a5e606b4a7bbd01c60c01b6115f9565b6112536795e427799384b20060c01b6115f9565b6112676773e3160fa84aeb9960c01b6115f9565b61126f6115fc565b60040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611300576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f790611e10565b60405180910390fd5b61131467abcba4e5adbea94260c01b6115f9565b565b600061132c67b2b8c4c736eb659060c01b61105b565b61134067f15c32d718bb6a7b60c01b61105b565b61135467a2f4eb42c6cb100460c01b61105b565b60007f9d7253cc9498e9cc54011bbbe9471a68adbc99d0ac1eef42369f5a452e814c4a905061138d679a4514f3992d67cb60c01b61105b565b8091505090565b60006113aa67aa2fb19c00bd668260c01b6102a5565b6113be67b4e5f7078447462860c01b6102a5565b6113d267f0bfe1784fb46df960c01b6102a5565b60007fc59b5acc5a6673a6c49ca2de898f87adbd9fdfdff36f689476b1c9e0c50964b4905061140b672c48fe06a315962560c01b6102a5565b8091505090565b60008114806114ab575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401611459929190611ce9565b60206040518083038186803b15801561147157600080fd5b505afa158015611485573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a99190611a97565b145b6114ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114e190611ef6565b60405180910390fd5b61156b8363095ea7b360e01b8484604051602401611509929190611daa565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611679565b505050565b6115f3846323b872dd60e01b85858560405160240161159193929190611d12565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611679565b50505050565b50565b600061161166c6fbd4fbaed54a60c01b6115f9565b61162567714552e98475403a60c01b6115f9565b611639674b20cd335540d24060c01b6115f9565b60007fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90506116726757acb9403953294960c01b6115f9565b8091505090565b60006116db826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166117409092919063ffffffff16565b905060008151111561173b57808060200190518101906116fb9190611a1c565b61173a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161173190611ed6565b60405180910390fd5b5b505050565b606061174f8484600085611758565b90509392505050565b60608247101561179d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161179490611e30565b60405180910390fd5b6117a68561186c565b6117e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117dc90611eb6565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161180e9190611cb7565b60006040518083038185875af1925050503d806000811461184b576040519150601f19603f3d011682016040523d82523d6000602084013e611850565b606091505b509150915061186082828661188f565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060831561189f578290506118ef565b6000835111156118b25782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118e69190611dee565b60405180910390fd5b9392505050565b600081359050611905816121f1565b92915050565b60008151905061191a81612208565b92915050565b60008135905061192f8161221f565b92915050565b600060a0828403121561194757600080fd5b81905092915050565b60008135905061195f81612236565b92915050565b60008151905061197481612236565b92915050565b6000813590506119898161224d565b92915050565b60008135905061199e81612264565b92915050565b6000602082840312156119b657600080fd5b60006119c4848285016118f6565b91505092915050565b6000806000606084860312156119e257600080fd5b60006119f0868287016118f6565b9350506020611a01868287016118f6565b9250506040611a1286828701611950565b9150509250925092565b600060208284031215611a2e57600080fd5b6000611a3c8482850161190b565b91505092915050565b600060208284031215611a5757600080fd5b6000611a6584828501611920565b91505092915050565b600060a08284031215611a8057600080fd5b6000611a8e84828501611935565b91505092915050565b600060208284031215611aa957600080fd5b6000611ab784828501611965565b91505092915050565b600060208284031215611ad257600080fd5b6000611ae08482850161197a565b91505092915050565b600060208284031215611afb57600080fd5b6000611b098482850161198f565b91505092915050565b611b1b81611f63565b82525050565b611b2a81611f75565b82525050565b6000611b3b82611f31565b611b458185611f47565b9350611b5581856020860161201f565b80840191505092915050565b6000611b6c82611f3c565b611b768185611f52565b9350611b8681856020860161201f565b611b8f81612052565b840191505092915050565b6000611ba7602283611f52565b9150611bb282612063565b604082019050919050565b6000611bca602683611f52565b9150611bd5826120b2565b604082019050919050565b6000611bed600783611f52565b9150611bf882612101565b602082019050919050565b6000611c10601d83611f52565b9150611c1b8261212a565b602082019050919050565b6000611c33602a83611f52565b9150611c3e82612153565b604082019050919050565b6000611c56603683611f52565b9150611c61826121a2565b604082019050919050565b611c7581611fcd565b82525050565b611c8481611ffb565b82525050565b611c9381611fd7565b82525050565b611ca28161200d565b82525050565b611cb181611fe7565b82525050565b6000611cc38284611b30565b915081905092915050565b6000602082019050611ce36000830184611b12565b92915050565b6000604082019050611cfe6000830185611b12565b611d0b6020830184611b12565b9392505050565b6000606082019050611d276000830186611b12565b611d346020830185611b12565b611d416040830184611c6c565b949350505050565b600060c082019050611d5e6000830189611b12565b611d6b6020830188611b12565b611d786040830187611c6c565b611d856060830186611ca8565b611d926080830185611ca8565b611d9f60a0830184611c8a565b979650505050505050565b6000604082019050611dbf6000830185611b12565b611dcc6020830184611c6c565b9392505050565b6000602082019050611de86000830184611b21565b92915050565b60006020820190508181036000830152611e088184611b61565b905092915050565b60006020820190508181036000830152611e2981611b9a565b9050919050565b60006020820190508181036000830152611e4981611bbd565b9050919050565b600060c0820190508181036000830152611e6981611be0565b9050611e786020830188611b12565b611e856040830187611b12565b611e926060830186611b12565b611e9f6080830185611c6c565b611eac60a0830184611c99565b9695505050505050565b60006020820190508181036000830152611ecf81611c03565b9050919050565b60006020820190508181036000830152611eef81611c26565b9050919050565b60006020820190508181036000830152611f0f81611c49565b9050919050565b6000602082019050611f2b6000830184611c7b565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000611f6e82611fad565b9050919050565b60008115159050919050565b60007fffffffffffffffff00000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b600061200682611fd7565b9050919050565b600061201882611fe7565b9050919050565b60005b8381101561203d578082015181840152602081019050612022565b8381111561204c576000848401525b50505050565b6000601f19601f8301169050919050565b7f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f6362726964676500000000000000000000000000000000000000000000000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60008201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000602082015250565b6121fa81611f63565b811461220557600080fd5b50565b61221181611f75565b811461221c57600080fd5b50565b61222881611f81565b811461223357600080fd5b50565b61223f81611fcd565b811461224a57600080fd5b50565b61225681611fd7565b811461226157600080fd5b50565b61226d81611fe7565b811461227857600080fd5b5056fea164736f6c6343000804000a";

type CBridgeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CBridgeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CBridgeFacet__factory extends ContractFactory {
  constructor(...args: CBridgeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CBridgeFacet> {
    return super.deploy(overrides || {}) as Promise<CBridgeFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CBridgeFacet {
    return super.attach(address) as CBridgeFacet;
  }
  connect(signer: Signer): CBridgeFacet__factory {
    return super.connect(signer) as CBridgeFacet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CBridgeFacetInterface {
    return new utils.Interface(_abi) as CBridgeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CBridgeFacet {
    return new Contract(address, _abi, signerOrProvider) as CBridgeFacet;
  }
}
