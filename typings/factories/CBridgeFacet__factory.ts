/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CBridgeFacet, CBridgeFacetInterface } from "../CBridgeFacet";

const _abi = [
  {
    inputs: [],
    name: "CannotBridgeToSameNetwork",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidConfig",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeValueWithERC",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTransferToNullAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAValidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAnERC20Token",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "cBridge",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "CBridgeInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "bridgeUsed",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chainIdTo",
        type: "uint256",
      },
    ],
    name: "TransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "UpdatedCBridgeAddress",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "maxSlippage",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "dstChainId",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct CBridgeFacet.CBridgeData",
        name: "_cBridgeData",
        type: "tuple",
      },
    ],
    name: "bridgeTokensCBridge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "cBridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_cBridge",
        type: "address",
      },
    ],
    name: "initializeCBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newAddress",
        type: "address",
      },
    ],
    name: "updateBridgeAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506001600081905550611904806100286000396000f3fe60806040526004361061003f5760003560e01c80631124bcf91461004457806336d4b75f1461006d5780635277cbc714610098578063645c8a4b146100b4575b600080fd5b34801561005057600080fd5b5061006b60048036038101906100669190610fed565b6100dd565b005b34801561007957600080fd5b506100826101c9565b60405161008f91906112a4565b60405180910390f35b6100b260048036038101906100ad919061103f565b6101ef565b005b3480156100c057600080fd5b506100db60048036038101906100d69190610fed565b6102fa565b005b6100e56103e4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561014c576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f5b114a545b5a08e3628017ac6e1af1f29e3f593dde50a4a93ab76f2a2220cd3881466040516101be929190611380565b60405180910390a150565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026000541415610235576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022c906114b1565b60405180910390fd5b600260008190555061025d8160a00160208101906102539190610fed565b826060013561047f565b610276818036038101906102719190611068565b6104bd565b7f83bd4b75444b26482a091d91d32e43a65722f9fd8267a590beadccd9e61539e88160a00160208101906102aa9190610fed565b338360800160208101906102be9190610fed565b84606001358560200160208101906102d691906110ba565b6040516102e795949392919061140b565b60405180910390a1600160008190555050565b6103026103e4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610369576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fef1a021f4afad10827a9f886313f92d00348a53d0b0df8d0aa270a0ac3379bc5816040516103d991906112a4565b60405180910390a150565b6103ec6105ec565b60040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461047d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610474906113cb565b60405180910390fd5b565b6104b98282600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610619565b5050565b806020015167ffffffffffffffff16461415610505576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61053a8160a00151600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836060015161073d565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a5977fbb82608001518360a0015184606001518560200151866040015187600001516040518763ffffffff1660e01b81526004016105b79695949392919061131f565b600060405180830381600087803b1580156105d157600080fd5b505af11580156105e5573d6000803e3d6000fd5b5050505050565b6000807fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90508091505090565b6000821415610654576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b801561069857813414610693576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610738565b600034146106d1576040517e3f45b500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006106dc846108a8565b90506106ea84333086610974565b82816106f5866108a8565b6106ff9190611548565b14610736576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610777576108a3565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107de576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b815260040161081b9291906112bf565b60206040518083038186803b15801561083357600080fd5b505afa158015610847573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086b9190611091565b9050818110156108a1576108a084847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610a54565b5b505b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461096b578173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161091691906112a4565b60206040518083038186803b15801561092e57600080fd5b505afa158015610942573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109669190611091565b61096d565b475b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156109db576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a42576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a4e84848484610bb2565b50505050565b6000811480610aed575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401610a9b9291906112bf565b60206040518083038186803b158015610ab357600080fd5b505afa158015610ac7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aeb9190611091565b145b610b2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b23906114d1565b60405180910390fd5b610bad8363095ea7b360e01b8484604051602401610b4b929190611380565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610c3b565b505050565b610c35846323b872dd60e01b858585604051602401610bd3939291906112e8565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610c3b565b50505050565b6000610c9d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610d029092919063ffffffff16565b9050600081511115610cfd5780806020019051810190610cbd9190611016565b610cfc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf390611491565b60405180910390fd5b5b505050565b6060610d118484600085610d1a565b90509392505050565b606082471015610d5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d56906113eb565b60405180910390fd5b610d6885610e2e565b610da7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9e90611471565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610dd0919061128d565b60006040518083038185875af1925050503d8060008114610e0d576040519150601f19603f3d011682016040523d82523d6000602084013e610e12565b606091505b5091509150610e22828286610e51565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315610e6157829050610eb1565b600083511115610e745782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea891906113a9565b60405180910390fd5b9392505050565b600081359050610ec781611884565b92915050565b600081519050610edc8161189b565b92915050565b600060c08284031215610ef457600080fd5b81905092915050565b600060c08284031215610f0f57600080fd5b610f1960c06114f1565b90506000610f2984828501610fc3565b6000830152506020610f3d84828501610fd8565b6020830152506040610f5184828501610fd8565b6040830152506060610f6584828501610f99565b6060830152506080610f7984828501610eb8565b60808301525060a0610f8d84828501610eb8565b60a08301525092915050565b600081359050610fa8816118b2565b92915050565b600081519050610fbd816118b2565b92915050565b600081359050610fd2816118c9565b92915050565b600081359050610fe7816118e0565b92915050565b600060208284031215610fff57600080fd5b600061100d84828501610eb8565b91505092915050565b60006020828403121561102857600080fd5b600061103684828501610ecd565b91505092915050565b600060c0828403121561105157600080fd5b600061105f84828501610ee2565b91505092915050565b600060c0828403121561107a57600080fd5b600061108884828501610efd565b91505092915050565b6000602082840312156110a357600080fd5b60006110b184828501610fae565b91505092915050565b6000602082840312156110cc57600080fd5b60006110da84828501610fd8565b91505092915050565b6110ec8161157c565b82525050565b60006110fd82611516565b611107818561152c565b93506111178185602086016115fa565b80840191505092915050565b600061112e82611521565b6111388185611537565b93506111488185602086016115fa565b611151816116bc565b840191505092915050565b6000611169602283611537565b9150611174826116cd565b604082019050919050565b600061118c602683611537565b91506111978261171c565b604082019050919050565b60006111af600783611537565b91506111ba8261176b565b602082019050919050565b60006111d2601d83611537565b91506111dd82611794565b602082019050919050565b60006111f5602a83611537565b9150611200826117bd565b604082019050919050565b6000611218601f83611537565b91506112238261180c565b602082019050919050565b600061123b603683611537565b915061124682611835565b604082019050919050565b61125a816115ba565b82525050565b611269816115c4565b82525050565b611278816115e8565b82525050565b611287816115d4565b82525050565b600061129982846110f2565b915081905092915050565b60006020820190506112b960008301846110e3565b92915050565b60006040820190506112d460008301856110e3565b6112e160208301846110e3565b9392505050565b60006060820190506112fd60008301866110e3565b61130a60208301856110e3565b6113176040830184611251565b949350505050565b600060c08201905061133460008301896110e3565b61134160208301886110e3565b61134e6040830187611251565b61135b606083018661127e565b611368608083018561127e565b61137560a0830184611260565b979650505050505050565b600060408201905061139560008301856110e3565b6113a26020830184611251565b9392505050565b600060208201905081810360008301526113c38184611123565b905092915050565b600060208201905081810360008301526113e48161115c565b9050919050565b600060208201905081810360008301526114048161117f565b9050919050565b600060c0820190508181036000830152611424816111a2565b905061143360208301886110e3565b61144060408301876110e3565b61144d60608301866110e3565b61145a6080830185611251565b61146760a083018461126f565b9695505050505050565b6000602082019050818103600083015261148a816111c5565b9050919050565b600060208201905081810360008301526114aa816111e8565b9050919050565b600060208201905081810360008301526114ca8161120b565b9050919050565b600060208201905081810360008301526114ea8161122e565b9050919050565b60006114fb61150c565b9050611507828261162d565b919050565b6000604051905090565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000611553826115ba565b915061155e836115ba565b9250828210156115715761157061165e565b5b828203905092915050565b60006115878261159a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b60006115f3826115d4565b9050919050565b60005b838110156116185780820151818401526020810190506115fd565b83811115611627576000848401525b50505050565b611636826116bc565b810181811067ffffffffffffffff821117156116555761165461168d565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f6342726964676500000000000000000000000000000000000000000000000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60008201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000602082015250565b61188d8161157c565b811461189857600080fd5b50565b6118a48161158e565b81146118af57600080fd5b50565b6118bb816115ba565b81146118c657600080fd5b50565b6118d2816115c4565b81146118dd57600080fd5b50565b6118e9816115d4565b81146118f457600080fd5b5056fea164736f6c6343000804000a";

type CBridgeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CBridgeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CBridgeFacet__factory extends ContractFactory {
  constructor(...args: CBridgeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CBridgeFacet> {
    return super.deploy(overrides || {}) as Promise<CBridgeFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CBridgeFacet {
    return super.attach(address) as CBridgeFacet;
  }
  connect(signer: Signer): CBridgeFacet__factory {
    return super.connect(signer) as CBridgeFacet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CBridgeFacetInterface {
    return new utils.Interface(_abi) as CBridgeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CBridgeFacet {
    return new Contract(address, _abi, signerOrProvider) as CBridgeFacet;
  }
}
