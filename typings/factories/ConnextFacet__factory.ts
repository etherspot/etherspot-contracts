/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ConnextFacet, ConnextFacetInterface } from "../ConnextFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_connext",
        type: "address",
      },
    ],
    name: "ConnextInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "_destination",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_relayerFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_transferId",
        type: "bytes32",
      },
    ],
    name: "ConnextNativeSwap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "_destination",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_relayerFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_transferId",
        type: "bytes32",
      },
    ],
    name: "ConnextTokenSwap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "_destination",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_callData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_relayerFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_transferId",
        type: "bytes32",
      },
    ],
    name: "ConnextXCall",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__9fd86305",
        type: "bytes8",
      },
    ],
    name: "c_9fd86305",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__9fd86305",
        type: "bytes8",
      },
    ],
    name: "c_false9fd86305",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__9fd86305",
        type: "bytes8",
      },
    ],
    name: "c_true9fd86305",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_callData",
        type: "bytes",
      },
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_relayerFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recovery",
        type: "address",
      },
      {
        internalType: "address",
        name: "_callback",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_callbackFee",
        type: "uint256",
      },
    ],
    name: "connextCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_relayerFee",
        type: "uint256",
      },
    ],
    name: "connextNativeAssetTransfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_relayerFee",
        type: "uint256",
      },
    ],
    name: "connextTokenTransfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_connext",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_domainId",
        type: "uint32",
      },
    ],
    name: "initConnext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611d8a806100206000396000f3fe6080604052600436106100705760003560e01c8063b5f63d6b1161004e578063b5f63d6b146100ea578063cca8c47814610113578063d858af201461013c578063db2379a61461015857610070565b80635fc0e736146100755780636c11f1f814610091578063a520f8df146100ce575b600080fd5b61008f600480360381019061008a91906112c5565b610195565b005b34801561009d57600080fd5b506100b860048036038101906100b39190611398565b6102a0565b6040516100c591906113e0565b60405180910390f35b6100e860048036038101906100e391906113fb565b6102a7565b005b3480156100f657600080fd5b50610111600480360381019061010c919061144e565b61039a565b005b34801561011f57600080fd5b5061013a60048036038101906101359190611398565b6105c4565b005b610156600480360381019061015191906115d4565b6105c7565b005b34801561016457600080fd5b5061017f600480360381019061017a9190611398565b6106b3565b60405161018c91906113e0565b60405180910390f35b6101a9673ef7ebac9be6cddb60c01b6105c4565b6101bd67b19354fc66bb506560c01b6105c4565b6101d167bbdc1770eeaebcb460c01b6105c4565b60006101fe85604051806020016040528060008152506101ef6106be565b878a888833600080600061074b565b90506102146789a4d0f6d57b5b0660c01b6105c4565b610228678f4930eb80b23eef60c01b6105c4565b8573ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168563ffffffff167f1a0290ac7c224ab0140c811403ba545f80e92404b9979b69e52b3f589bc1c1e0868686604051610290939291906116e2565b60405180910390a4505050505050565b6000919050565b6102bb6705aa17467a119ad960c01b6105c4565b6102cf67594e8f4fb2355d0060c01b6105c4565b6102e3676c18f4dac5dacdad60c01b6105c4565b600061031184604051806020016040528060008152506103016106be565b866000348833600080600061074b565b905061032767162f457abbf13d9660c01b6105c4565b61033b67c1e30687753bab1f60c01b6105c4565b8373ffffffffffffffffffffffffffffffffffffffff168363ffffffff167fb47dd05ba9e0eb3ec95a42c27945552b2a232180e3b6441c20d4d5bff04ede9534858560405161038c939291906116e2565b60405180910390a350505050565b6103ae67134804c04bbca86c60c01b6105c4565b6103c26709800b2d38d2831060c01b6105c4565b6103d6679529fc1e1cabb95a60c01b6105c4565b6103de610ac8565b6103f26746b4efa02e7596d860c01b6105c4565b61040667dc53fb14ad803c7d60c01b6105c4565b61041a6714950adcfd1f13dd60c01b6105c4565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561048a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048190611776565b60405180910390fd5b61049e675ab4a3b078c3618e60c01b6105c4565b6104b2670a30a66008f1a1b460c01b6105c4565b6104c667e7c27ff9f10aa56660c01b6105c4565b60006104d0610bc7565b90506104e66747c29cb21f77c92d60c01b6105c4565b828160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061053d6798542942ebf48ac560c01b6105c4565b818160000160146101000a81548163ffffffff021916908363ffffffff16021790555061057467d6eb650e32b0aa3260c01b6105c4565b61058867694974f62875c2a660c01b6105c4565b7ffcbf7a247efac41495da0df0e3ef60d8f0dd28dc5c86461b56507b29322dd8a0836040516105b791906117a5565b60405180910390a1505050565b50565b6105db67a39780556703dafc60c01b6105c4565b6105ef67f66957232697eecb60c01b6105c4565b610603675a410e04224d325460c01b6105c4565b60006106208a8a6106126106be565b8b8b8b8b8b8b8b600061074b565b905061063667a8a0e6a50579fee360c01b6105c4565b61064a675ef24c00bd51c5f060c01b6105c4565b8973ffffffffffffffffffffffffffffffffffffffff168863ffffffff167f0f54f42e149762e432717bddc67b5ffb97adff1fd377dd688d9747bc8c1aab3d89898d8a8760405161069f959493929190611848565b60405180910390a350505050505050505050565b600060019050919050565b60006106d4679bee1e06ca02ff6460c01b6105c4565b6106e8675f4d96bb613d2db760c01b6105c4565b6106fc67eacf3c7492707e0b60c01b6105c4565b6000610706610bc7565b905061071c67bad52d3ea78b31f760c01b6105c4565b61073067f58f2768d3ee4b8060c01b6105c4565b8060000160149054906101000a900463ffffffff1691505090565b60006107616778c6684da304aa7d60c01b6105c4565b61077567ff7458e36e4840f760c01b6105c4565b61078967e1fb0d99dc8d2cad60c01b6105c4565b61079588888886610c45565b6107a967cabf2538c91b93b160c01b6105c4565b6107bd67d8a1a7a2e2a8cb7360c01b6105c4565b600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146108b85761080567b3948b5e3258115660c01b6105c4565b610819676a8c7e963c70553f60c01b6105c4565b61082d67ede249d711908d9c60c01b6105c4565b8773ffffffffffffffffffffffffffffffffffffffff1663095ea7b36108516110c3565b896040518363ffffffff1660e01b815260040161086f9291906118a2565b6020604051808303816000875af115801561088e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b291906118f7565b506108cd565b6108cc67b878d69d7a1a58c460c01b6105c4565b5b6108e1675108e55db872cdfe60c01b6105c4565b6108f56795c55eb294a868d960c01b6105c4565b60006108ff6110c3565b905061091567e34897a2a8e4450360c01b6105c4565b610929671544f5564599e04d60c01b6105c4565b60006040518061012001604052808f73ffffffffffffffffffffffffffffffffffffffff1681526020018e81526020018d63ffffffff1681526020018c63ffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff16815260200186815260200185151581526020016000151581525090506109d4671ef291dc2466145b60c01b6105c4565b6109e867940a21ec610a3cf560c01b6105c4565b600060405180608001604052808381526020018c73ffffffffffffffffffffffffffffffffffffffff1681526020018b81526020018a8152509050610a3767a9e93b466a31d05260c01b6105c4565b8273ffffffffffffffffffffffffffffffffffffffff16634156a88334836040518363ffffffff1660e01b8152600401610a719190611ad2565b60206040518083038185885af1158015610a8f573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610ab49190611b20565b93505050509b9a5050505050505050505050565b610adc6776efe7f9a3f3bf8460c01b611160565b610af06713b5651d33e3ab7f60c01b611160565b610b0467142703995f8e23ac60c01b611160565b610b1867464721b4be2bc29360c01b611160565b610b20611163565b60040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bb1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba890611bbf565b60405180910390fd5b610bc567891fe59a8eb7459060c01b611160565b565b6000610bdd67c7e767c4f09057df60c01b6105c4565b610bf1674e88302169d2f2eb60c01b6105c4565b610c05671dffe09c851a4abb60c01b6105c4565b60007fa4cabcf91d6212ba2873e2f19de6e26ae65fd3280b9eaa6d8bc38c5fba52ec9d9050610c3e67289c6faaf201084560c01b6105c4565b8091505090565b610c5967c6639ab0064d548160c01b6105c4565b610c6d67c611997855eef43060c01b6105c4565b610c8167324ba6588d22767760c01b6105c4565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610d7757610cca67203c07bba306e9cf60c01b6105c4565b610cde676ac6b72de4babb8860c01b6105c4565b610cf267219aadd50854e17060c01b6105c4565b610d0667b80c6816083edb5960c01b6105c4565b808284610d139190611c0e565b610d1d9190611c0e565b3414610d5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5590611cb0565b60405180910390fd5b610d7267e07b2e719d77fb1e60c01b6105c4565b6110bd565b610d8b678642c1bca6834f8160c01b6105c4565b610d9f67b0838c6174cf852960c01b6105c4565b610db36710edacaec263777260c01b6105c4565b610dc7672efc0c26c1906e9d60c01b6105c4565b8082610dd39190611c0e565b3414610e14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0b90611cb0565b60405180910390fd5b610e28671a8ab155dbab8a4060c01b6105c4565b610e3c67f3a783d44aafe64c60c01b6105c4565b610e5067d88d202ecd747bb860c01b6105c4565b60008473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610e8b91906117a5565b602060405180830381865afa158015610ea8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ecc9190611ce5565b9050610ee267604ee2d8011e86b560c01b6105c4565b610ef667be2700b305a039b760c01b6105c4565b8473ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401610f3393929190611d12565b6020604051808303816000875af1158015610f52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7691906118f7565b50610f8b67933f8f1f725d523560c01b6105c4565b610f9f67ccfe04190cf0520460c01b6105c4565b60008573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610fda91906117a5565b602060405180830381865afa158015610ff7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101b9190611ce5565b9050611031672a91b5b8ae8ebabd60c01b6105c4565b611045674aa5d61815df10d160c01b6105c4565b61105967942ae645786b49c360c01b6105c4565b8482826110669190611d49565b146110a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109d90611cb0565b60405180910390fd5b6110ba67c8befcfb7e5b35ef60c01b6105c4565b50505b50505050565b60006110d9672305e7072636904a60c01b6105c4565b6110ed67f43d179193b92cca60c01b6105c4565b61110167a0ccff6e0967613060c01b6105c4565b600061110b610bc7565b9050611121672e039f91dc202a4160c01b6105c4565b61113567a6f8f2b020af0fb860c01b6105c4565b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b50565b6000611179679a33882304e088fd60c01b611160565b61118d673ebfa44d2bd9e44b60c01b611160565b6111a1672ff7fef2f0b4005460c01b611160565b60007fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90506111da6728a2d055fd7f2d6e60c01b611160565b8091505090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611220826111f5565b9050919050565b61123081611215565b811461123b57600080fd5b50565b60008135905061124d81611227565b92915050565b600063ffffffff82169050919050565b61126c81611253565b811461127757600080fd5b50565b60008135905061128981611263565b92915050565b6000819050919050565b6112a28161128f565b81146112ad57600080fd5b50565b6000813590506112bf81611299565b92915050565b600080600080600060a086880312156112e1576112e06111eb565b5b60006112ef8882890161123e565b95505060206113008882890161123e565b94505060406113118882890161127a565b9350506060611322888289016112b0565b9250506080611333888289016112b0565b9150509295509295909350565b60007fffffffffffffffff00000000000000000000000000000000000000000000000082169050919050565b61137581611340565b811461138057600080fd5b50565b6000813590506113928161136c565b92915050565b6000602082840312156113ae576113ad6111eb565b5b60006113bc84828501611383565b91505092915050565b60008115159050919050565b6113da816113c5565b82525050565b60006020820190506113f560008301846113d1565b92915050565b600080600060608486031215611414576114136111eb565b5b60006114228682870161123e565b93505060206114338682870161127a565b9250506040611444868287016112b0565b9150509250925092565b60008060408385031215611465576114646111eb565b5b60006114738582860161123e565b92505060206114848582860161127a565b9150509250929050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6114e182611498565b810181811067ffffffffffffffff82111715611500576114ff6114a9565b5b80604052505050565b60006115136111e1565b905061151f82826114d8565b919050565b600067ffffffffffffffff82111561153f5761153e6114a9565b5b61154882611498565b9050602081019050919050565b82818337600083830152505050565b600061157761157284611524565b611509565b90508281526020810184848401111561159357611592611493565b5b61159e848285611555565b509392505050565b600082601f8301126115bb576115ba61148e565b5b81356115cb848260208601611564565b91505092915050565b60008060008060008060008060006101208a8c0312156115f7576115f66111eb565b5b60006116058c828d0161123e565b99505060208a013567ffffffffffffffff811115611626576116256111f0565b5b6116328c828d016115a6565b98505060406116438c828d0161127a565b97505060606116548c828d0161123e565b96505060806116658c828d016112b0565b95505060a06116768c828d016112b0565b94505060c06116878c828d0161123e565b93505060e06116988c828d0161123e565b9250506101006116aa8c828d016112b0565b9150509295985092959850929598565b6116c38161128f565b82525050565b6000819050919050565b6116dc816116c9565b82525050565b60006060820190506116f760008301866116ba565b61170460208301856116ba565b61171160408301846116d3565b949350505050565b600082825260208201905092915050565b7f436f6e6e6578743a20696e76616c696420616464726573730000000000000000600082015250565b6000611760601883611719565b915061176b8261172a565b602082019050919050565b6000602082019050818103600083015261178f81611753565b9050919050565b61179f81611215565b82525050565b60006020820190506117ba6000830184611796565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156117fa5780820151818401526020810190506117df565b83811115611809576000848401525b50505050565b600061181a826117c0565b61182481856117cb565b93506118348185602086016117dc565b61183d81611498565b840191505092915050565b600060a08201905061185d6000830188611796565b61186a60208301876116ba565b818103604083015261187c818661180f565b905061188b60608301856116ba565b61189860808301846116d3565b9695505050505050565b60006040820190506118b76000830185611796565b6118c460208301846116ba565b9392505050565b6118d4816113c5565b81146118df57600080fd5b50565b6000815190506118f1816118cb565b92915050565b60006020828403121561190d5761190c6111eb565b5b600061191b848285016118e2565b91505092915050565b61192d81611215565b82525050565b600082825260208201905092915050565b600061194f826117c0565b6119598185611933565b93506119698185602086016117dc565b61197281611498565b840191505092915050565b61198681611253565b82525050565b6119958161128f565b82525050565b6119a4816113c5565b82525050565b6000610120830160008301516119c36000860182611924565b50602083015184820360208601526119db8282611944565b91505060408301516119f0604086018261197d565b506060830151611a03606086018261197d565b506080830151611a166080860182611924565b5060a0830151611a2960a0860182611924565b5060c0830151611a3c60c086018261198c565b5060e0830151611a4f60e086018261199b565b50610100830151611a6461010086018261199b565b508091505092915050565b60006080830160008301518482036000860152611a8c82826119aa565b9150506020830151611aa16020860182611924565b506040830151611ab4604086018261198c565b506060830151611ac7606086018261198c565b508091505092915050565b60006020820190508181036000830152611aec8184611a6f565b905092915050565b611afd816116c9565b8114611b0857600080fd5b50565b600081519050611b1a81611af4565b92915050565b600060208284031215611b3657611b356111eb565b5b6000611b4484828501611b0b565b91505092915050565b7f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b6000611ba9602283611719565b9150611bb482611b4d565b604082019050919050565b60006020820190508181036000830152611bd881611b9c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c198261128f565b9150611c248361128f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611c5957611c58611bdf565b5b828201905092915050565b7f436f6e6e6578743a20496e76616c69642076616c756500000000000000000000600082015250565b6000611c9a601683611719565b9150611ca582611c64565b602082019050919050565b60006020820190508181036000830152611cc981611c8d565b9050919050565b600081519050611cdf81611299565b92915050565b600060208284031215611cfb57611cfa6111eb565b5b6000611d0984828501611cd0565b91505092915050565b6000606082019050611d276000830186611796565b611d346020830185611796565b611d4160408301846116ba565b949350505050565b6000611d548261128f565b9150611d5f8361128f565b925082821015611d7257611d71611bdf565b5b82820390509291505056fea164736f6c634300080b000a";

type ConnextFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnextFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConnextFacet__factory extends ContractFactory {
  constructor(...args: ConnextFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConnextFacet> {
    return super.deploy(overrides || {}) as Promise<ConnextFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ConnextFacet {
    return super.attach(address) as ConnextFacet;
  }
  connect(signer: Signer): ConnextFacet__factory {
    return super.connect(signer) as ConnextFacet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnextFacetInterface {
    return new utils.Interface(_abi) as ConnextFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnextFacet {
    return new Contract(address, _abi, signerOrProvider) as ConnextFacet;
  }
}
