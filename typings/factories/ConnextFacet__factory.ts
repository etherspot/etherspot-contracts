/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ConnextFacet, ConnextFacetInterface } from "../ConnextFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "destination",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "relayerFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
    ],
    name: "ConnextEthSwap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "connext",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "domainId",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "weth",
        type: "address",
      },
    ],
    name: "ConnextInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "destination",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "relayerFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
    ],
    name: "ConnextTokenSwap",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__4f0a9270",
        type: "bytes8",
      },
    ],
    name: "c_4f0a9270",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__4f0a9270",
        type: "bytes8",
      },
    ],
    name: "c_false4f0a9270",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__4f0a9270",
        type: "bytes8",
      },
    ],
    name: "c_true4f0a9270",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_destinationUnwrapper",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_slippage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_relayerFee",
        type: "uint256",
      },
    ],
    name: "connextEthTransfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_slippage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_relayerFee",
        type: "uint256",
      },
    ],
    name: "connextTokenTransfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_connext",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_domainId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
    ],
    name: "initConnext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612533806100206000396000f3fe6080604052600436106100555760003560e01c80631e127d9e1461005a5780633205dc691461009757806351b401b9146100c0578063da328d54146100dc578063e59cff6a146100f8578063ff578afd14610121575b600080fd5b34801561006657600080fd5b50610081600480360381019061007c9190611960565b61015e565b60405161008e91906119a8565b60405180910390f35b3480156100a357600080fd5b506100be60048036038101906100b99190611a5d565b610169565b005b6100da60048036038101906100d59190611ae6565b6104d3565b005b6100f660048036038101906100f19190611ae6565b610b2e565b005b34801561010457600080fd5b5061011f600480360381019061011a9190611960565b61116a565b005b34801561012d57600080fd5b5061014860048036038101906101439190611960565b61116d565b60405161015591906119a8565b60405180910390f35b600060019050919050565b61017d67da66d5c76eb6198060c01b61116a565b6101916707107aa74081ad9a60c01b61116a565b6101a56709e536b31d2b284560c01b61116a565b6101ad611174565b6101c16724b3a7fbd5a0555c60c01b61116a565b6101d5673158d971c7fdb0ca60c01b61116a565b6101e96703c9330b53674b1760c01b61116a565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610258576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024f90611bd0565b60405180910390fd5b61026c67fcc5147cdd4ebd8960c01b61116a565b610280674fdb424e77c2592f60c01b61116a565b61029467f9d795c7c5682b1d60c01b61116a565b6102a8671cbbd1c5e3f278ca60c01b61116a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610317576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030e90611bd0565b60405180910390fd5b61032b67016ab0db5906bbb360c01b61116a565b61033f67169c7e53c5b97e3360c01b61116a565b610353679cab345ad0dd8ce860c01b61116a565b600061035d611273565b9050610373672902fe7e7f2d9cda60c01b61116a565b838160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103ca6792d47aeff096fb8f60c01b61116a565b828160000160146101000a81548163ffffffff021916908363ffffffff16021790555061040167dae0b6432f92708c60c01b61116a565b818160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061045867a5bbad863e87472960c01b61116a565b61046c6730c01a8ab946fa6060c01b61116a565b8173ffffffffffffffffffffffffffffffffffffffff168363ffffffff168573ffffffffffffffffffffffffffffffffffffffff167fe23ac138025651e2fb684be9a5c635424d4dac7fc73449494c24c4955e79027860405160405180910390a450505050565b6104e767acf0e9b35b4e65cd60c01b61116a565b6104fb6738c37d6ca422220660c01b61116a565b61050f6755a23b34dbcae5e460c01b61116a565b60006105196112f0565b905061052f675672b2448cdaf2f660c01b61116a565b61054367dd45662776e9485560c01b61116a565b600087905061055c674cbc6907ea07364660c01b61116a565b61057067628a6a1dae6e92c660c01b61116a565b61058467cdd5c254132cf2e360c01b61116a565b600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16036105f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ea90611bd0565b60405180910390fd5b61060767200b5f32b92e177c60c01b61116a565b61061b674f3206500b7d2d5b60c01b61116a565b61062f67d6ea1b1f01245e9160c01b61116a565b61064367da795a7d1d76ed2960c01b61116a565b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16036106b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a990611bd0565b60405180910390fd5b6106c6674bb3f49be13dfadd60c01b61116a565b6106da671a6e4c979fc59d1360c01b61116a565b6106ee6718797eb7b093482c60c01b61116a565b6107026744a98e3e169b2f3460c01b61116a565b61070a61135f565b63ffffffff168563ffffffff1603610757576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074e90611c62565b60405180910390fd5b61076b673ce249b64835bbe560c01b61116a565b61077f67b9f72ba69a763c2760c01b61116a565b610793679fda6d2ebebf2fc360c01b61116a565b6107a7673cc29b0d572e7d7760c01b61116a565b8234146107e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e090611cce565b60405180910390fd5b6107fd673d2b8fad77a6165f60c01b61116a565b61081167ea2297dd4a98c52260c01b61116a565b61082567e468230f90149a5c60c01b61116a565b610839672b6ca90b2121025860c01b61116a565b868173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610875929190611cfd565b602060405180830381865afa158015610892573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b69190611d3b565b10156108f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ee90611dda565b60405180910390fd5b61090b67eeae8774d4737f9b60c01b61116a565b61091f6777f92ef958d33eb060c01b61116a565b6109336724476b17f224827760c01b61116a565b610947676472c6d9ab3589b760c01b61116a565b6109743330898473ffffffffffffffffffffffffffffffffffffffff166113be909392919063ffffffff16565b6109886774bf09dfa548e53660c01b61116a565b61099c6760a91e4e3a8ac2d960c01b61116a565b6109c782888373ffffffffffffffffffffffffffffffffffffffff166114479092919063ffffffff16565b6109db67ed56f35d7f2b828060c01b61116a565b6109ef67e38f566121b8c22660c01b61116a565b60008273ffffffffffffffffffffffffffffffffffffffff16638aac16ba85888a8d338e8c604051806020016040528060008152506040518963ffffffff1660e01b8152600401610a469796959493929190611ea8565b60206040518083038185885af1158015610a64573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a899190611f54565b9050610a9f67db5256f5193ef69260c01b61116a565b610ab367faca73967507dca660c01b61116a565b8873ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168763ffffffff167f1a0290ac7c224ab0140c811403ba545f80e92404b9979b69e52b3f589bc1c1e08b8886604051610b1b93929190611f90565b60405180910390a4505050505050505050565b610b4267c472042bb0a39b6f60c01b61116a565b610b5667e8d23992abac163d60c01b61116a565b610b6a67b48086d5ae77200760c01b61116a565b6000610b746112f0565b9050610b8a67ce9c305cc02b1c1160c01b61116a565b610b9e674c7274a33eb2813c60c01b61116a565b6000610ba8611596565b9050610bbe67bdf25af44a249b6560c01b61116a565b610bd267b444096f935769e960c01b61116a565b610be667bc5e5dc4ce769c2c60c01b61116a565b600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1603610c55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4c90611bd0565b60405180910390fd5b610c69671cc12e0b11e5007760c01b61116a565b610c7d67fa05b4e6612f0dc660c01b61116a565b610c9167a91b4fcfcd68b0e660c01b61116a565b610ca5671bbdb3490f019f5c60c01b61116a565b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1603610d14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0b90611bd0565b60405180910390fd5b610d286771179656948a2b0060c01b61116a565b610d3c67a3e2bdd52726bafd60c01b61116a565b610d5067046edd65ee4f553060c01b61116a565b610d64678c8ce874ae9b9de860c01b61116a565b610d6c61135f565b63ffffffff168563ffffffff1603610db9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db090611c62565b60405180910390fd5b610dcd67aef6da0e6fe9d52160c01b61116a565b610de167740f381fd2151cb260c01b61116a565b610df567346b3c8880b2c3da60c01b61116a565b610e09674ad7b107080662c360c01b61116a565b8287610e159190611ff6565b3414610e56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4d9061209c565b60405180910390fd5b610e6a6789871c2781989c6d60c01b61116a565b610e7e67060d638a4435f2cb60c01b61116a565b610e926708b41563644eea3e60c01b61116a565b610ea66755a072def3c33fb160c01b61116a565b6000819050610ebf673d4cc8668bbb681860c01b61116a565b610ed367508afb80f9f91eff60c01b61116a565b8073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0896040518263ffffffff1660e01b81526004016000604051808303818588803b158015610f1b57600080fd5b505af1158015610f2f573d6000803e3d6000fd5b5050505050610f4867d240007acf4daa6460c01b61116a565b610f5c67e3df34b53866cb7760c01b61116a565b8073ffffffffffffffffffffffffffffffffffffffff1663095ea7b3848a6040518363ffffffff1660e01b8152600401610f979291906120bc565b6020604051808303816000875af1158015610fb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fda9190612111565b5050610ff06737adbf910b3ee50360c01b61116a565b611004672a586681e374b5d660c01b61116a565b600086604051602001611017919061213e565b604051602081830303815290604052905061103c67199e92c28f9b407560c01b61116a565b6110506704c4ce9f5de15da560c01b61116a565b60008373ffffffffffffffffffffffffffffffffffffffff16638aac16ba86898d87338f8d8a6040518963ffffffff1660e01b81526004016110989796959493929190611ea8565b60206040518083038185885af11580156110b6573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906110db9190611f54565b90506110f167a170e2544473341460c01b61116a565b61110567feb2f7a200bc2b9760c01b61116a565b8773ffffffffffffffffffffffffffffffffffffffff168763ffffffff167fe16c7dcc828782adcdd94aaeb1d07c3ae5a6d593a6b851ab5e023f9c9614368734888560405161115693929190611f90565b60405180910390a350505050505050505050565b50565b6000919050565b6111886721b40df6734b4e6460c01b611605565b61119c677276b6d1bbf7b68b60c01b611605565b6111b067f8611dbcb55a1f7860c01b611605565b6111c4676cedf54251a3375160c01b611605565b6111cc611608565b60040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461125d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611254906121cb565b60405180910390fd5b61127167e452355b21bbd41e60c01b611605565b565b60006112886686de270f8eb5ee60c01b61116a565b61129c67e91f6aa427e7a86260c01b61116a565b6112b067f9fa26a73cd597f060c01b61116a565b60007ffa2e9c22c7fe2104814a1d7e2c66c58d10a2d7989d5bcf01173a2564aa59c04d90506112e967b96cba4c6f0b350c60c01b61116a565b8091505090565b600061130667ac00b124db4b589260c01b61116a565b61131a67fe1df3e726aaef2f60c01b61116a565b61132e67ac13fce227ef532760c01b61116a565b611336611273565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006113756799a5fb6e1d2eed7160c01b61116a565b6113896743d580f33e0df2b160c01b61116a565b61139d67e8552e2d8af2b48e60c01b61116a565b6113a5611273565b60000160149054906101000a900463ffffffff16905090565b611441846323b872dd60e01b8585856040516024016113df939291906121eb565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611686565b50505050565b60008114806114d1575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b815260040161148e929190611cfd565b602060405180830381865afa1580156114ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114cf9190611d3b565b145b611510576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150790612294565b60405180910390fd5b6115918363095ea7b360e01b848460405160240161152f9291906120bc565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611686565b505050565b60006115ac672d586a34e5abb5b460c01b61116a565b6115c067260fb297e7aa153460c01b61116a565b6115d46760d293c4377d5b2c60c01b61116a565b6115dc611273565b60010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b50565b600061161e674f9afbb757d80e6360c01b611605565b611632674b823103125da15660c01b611605565b611646674ab715c231c1608d60c01b611605565b60007fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c905061167f67982d9bb86701efa860c01b611605565b8091505090565b60006116e8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661174d9092919063ffffffff16565b905060008151111561174857808060200190518101906117089190612111565b611747576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161173e90612326565b60405180910390fd5b5b505050565b606061175c8484600085611765565b90509392505050565b6060824710156117aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117a1906123b8565b60405180910390fd5b6117b385611879565b6117f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117e990612424565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161181b9190612480565b60006040518083038185875af1925050503d8060008114611858576040519150601f19603f3d011682016040523d82523d6000602084013e61185d565b606091505b509150915061186d82828661189c565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b606083156118ac578290506118fc565b6000835111156118bf5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118f391906124db565b60405180910390fd5b9392505050565b600080fd5b60007fffffffffffffffff00000000000000000000000000000000000000000000000082169050919050565b61193d81611908565b811461194857600080fd5b50565b60008135905061195a81611934565b92915050565b60006020828403121561197657611975611903565b5b60006119848482850161194b565b91505092915050565b60008115159050919050565b6119a28161198d565b82525050565b60006020820190506119bd6000830184611999565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119ee826119c3565b9050919050565b6119fe816119e3565b8114611a0957600080fd5b50565b600081359050611a1b816119f5565b92915050565b600063ffffffff82169050919050565b611a3a81611a21565b8114611a4557600080fd5b50565b600081359050611a5781611a31565b92915050565b600080600060608486031215611a7657611a75611903565b5b6000611a8486828701611a0c565b9350506020611a9586828701611a48565b9250506040611aa686828701611a0c565b9150509250925092565b6000819050919050565b611ac381611ab0565b8114611ace57600080fd5b50565b600081359050611ae081611aba565b92915050565b60008060008060008060c08789031215611b0357611b02611903565b5b6000611b1189828a01611a0c565b9650506020611b2289828a01611ad1565b9550506040611b3389828a01611a0c565b9450506060611b4489828a01611a48565b9350506080611b5589828a01611ad1565b92505060a0611b6689828a01611ad1565b9150509295509295509295565b600082825260208201905092915050565b7f436f6e6e6578743a20696e76616c696420616464726573730000000000000000600082015250565b6000611bba601883611b73565b9150611bc582611b84565b602082019050919050565b60006020820190508181036000830152611be981611bad565b9050919050565b7f436f6e6e6578743a2043616e6e6f742062726964676520746f2073616d65206460008201527f6f6d61696e000000000000000000000000000000000000000000000000000000602082015250565b6000611c4c602583611b73565b9150611c5782611bf0565b604082019050919050565b60006020820190508181036000830152611c7b81611c3f565b9050919050565b7f436f6e6e6578743a2072656c6179657246656520213d206d73672e76616c7565600082015250565b6000611cb8602083611b73565b9150611cc382611c82565b602082019050919050565b60006020820190508181036000830152611ce781611cab565b9050919050565b611cf7816119e3565b82525050565b6000604082019050611d126000830185611cee565b611d1f6020830184611cee565b9392505050565b600081519050611d3581611aba565b92915050565b600060208284031215611d5157611d50611903565b5b6000611d5f84828501611d26565b91505092915050565b7f436f6e6e6578743a2055736572206d75737420617070726f766520616d6f756e60008201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b6000611dc4602183611b73565b9150611dcf82611d68565b604082019050919050565b60006020820190508181036000830152611df381611db7565b9050919050565b611e0381611a21565b82525050565b611e1281611ab0565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611e52578082015181840152602081019050611e37565b60008484015250505050565b6000601f19601f8301169050919050565b6000611e7a82611e18565b611e848185611e23565b9350611e94818560208601611e34565b611e9d81611e5e565b840191505092915050565b600060e082019050611ebd600083018a611dfa565b611eca6020830189611cee565b611ed76040830188611cee565b611ee46060830187611cee565b611ef16080830186611e09565b611efe60a0830185611e09565b81810360c0830152611f108184611e6f565b905098975050505050505050565b6000819050919050565b611f3181611f1e565b8114611f3c57600080fd5b50565b600081519050611f4e81611f28565b92915050565b600060208284031215611f6a57611f69611903565b5b6000611f7884828501611f3f565b91505092915050565b611f8a81611f1e565b82525050565b6000606082019050611fa56000830186611e09565b611fb26020830185611e09565b611fbf6040830184611f81565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061200182611ab0565b915061200c83611ab0565b925082820190508082111561202457612023611fc7565b5b92915050565b7f436f6e6e6578743a20616d6f756e74202b2072656c6179657246656520213d2060008201527f6d73672e76616c75650000000000000000000000000000000000000000000000602082015250565b6000612086602983611b73565b91506120918261202a565b604082019050919050565b600060208201905081810360008301526120b581612079565b9050919050565b60006040820190506120d16000830185611cee565b6120de6020830184611e09565b9392505050565b6120ee8161198d565b81146120f957600080fd5b50565b60008151905061210b816120e5565b92915050565b60006020828403121561212757612126611903565b5b6000612135848285016120fc565b91505092915050565b60006020820190506121536000830184611cee565b92915050565b7f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b60006121b5602283611b73565b91506121c082612159565b604082019050919050565b600060208201905081810360008301526121e4816121a8565b9050919050565b60006060820190506122006000830186611cee565b61220d6020830185611cee565b61221a6040830184611e09565b949350505050565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60008201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000602082015250565b600061227e603683611b73565b915061228982612222565b604082019050919050565b600060208201905081810360008301526122ad81612271565b9050919050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000612310602a83611b73565b915061231b826122b4565b604082019050919050565b6000602082019050818103600083015261233f81612303565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006123a2602683611b73565b91506123ad82612346565b604082019050919050565b600060208201905081810360008301526123d181612395565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b600061240e601d83611b73565b9150612419826123d8565b602082019050919050565b6000602082019050818103600083015261243d81612401565b9050919050565b600081905092915050565b600061245a82611e18565b6124648185612444565b9350612474818560208601611e34565b80840191505092915050565b600061248c828461244f565b915081905092915050565b600081519050919050565b60006124ad82612497565b6124b78185611b73565b93506124c7818560208601611e34565b6124d081611e5e565b840191505092915050565b600060208201905081810360008301526124f581846124a2565b90509291505056fea26469706673582212204da084d29f2b1f49110a7e2136c1f929f1a0ef590b5b88f05fb2d02502daf9f664736f6c63430008110033";

type ConnextFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnextFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConnextFacet__factory extends ContractFactory {
  constructor(...args: ConnextFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConnextFacet> {
    return super.deploy(overrides || {}) as Promise<ConnextFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ConnextFacet {
    return super.attach(address) as ConnextFacet;
  }
  connect(signer: Signer): ConnextFacet__factory {
    return super.connect(signer) as ConnextFacet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnextFacetInterface {
    return new utils.Interface(_abi) as ConnextFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnextFacet {
    return new Contract(address, _abi, signerOrProvider) as ConnextFacet;
  }
}
