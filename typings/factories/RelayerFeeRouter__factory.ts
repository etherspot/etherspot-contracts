/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RelayerFeeRouter,
  RelayerFeeRouterInterface,
} from "../RelayerFeeRouter";

const _abi = [
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "RelayerFeeRouter__onlyConnext_notConnext",
    type: "error",
  },
  {
    inputs: [],
    name: "RelayerFeeRouter__send_claimEmpty",
    type: "error",
  },
  {
    inputs: [],
    name: "RelayerFeeRouter__send_recipientEmpty",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "originAndNonce",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "origin",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "transferIds",
        type: "bytes32[]",
      },
    ],
    name: "Receive",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "transferIds",
        type: "bytes32[]",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "remote",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Send",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "connext",
        type: "address",
      },
    ],
    name: "SetConnext",
    type: "event",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "connext",
    outputs: [
      {
        internalType: "contract IConnextHandler",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_router",
        type: "bytes32",
      },
    ],
    name: "enrollRemoteRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_origin",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_sender",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "handle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_xAppConnectionManager",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "remotes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "_transferIds",
        type: "bytes32[]",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_connext",
        type: "address",
      },
    ],
    name: "setConnext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_xAppConnectionManager",
        type: "address",
      },
    ],
    name: "setXAppConnectionManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "xAppConnectionManager",
    outputs: [
      {
        internalType: "contract XAppConnectionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506124de806100206000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c8063b1f8100d116100b2578063d1851c9211610081578063d7d680a311610066578063d7d680a3146102bc578063de4b0548146102cf578063ffa1ad74146102ef57600080fd5b8063d1851c9214610268578063d232c2201461028657600080fd5b8063b1f8100d14610227578063b49c53a71461023a578063c4d66de81461024d578063c5b350df1461026057600080fd5b80636a42b8f81161010957806383bbb806116100ee57806383bbb806146101d05780638da5cb5b146101f0578063ab2dc3f51461021457600080fd5b80636a42b8f8146101bf578063715018a6146101c857600080fd5b80633339df961461013b5780633cf52ffb1461018557806341bdc8b5146101975780634d6f2013146101ac575b600080fd5b60345461015b9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6002545b60405190815260200161017c565b6101aa6101a5366004611ea6565b610309565b005b6101aa6101ba366004611ea6565b6103a7565b62093a80610189565b6101aa61046d565b6101896101de366004611ed7565b60666020526000908152604090205481565b60005462010000900473ffffffffffffffffffffffffffffffffffffffff1661015b565b6101aa610222366004611f21565b6105bd565b6101aa610235366004611ea6565b61085b565b6101aa61024836600461201b565b61098e565b6101aa61025b366004611ea6565b6109fe565b6101aa610aaf565b60015473ffffffffffffffffffffffffffffffffffffffff1661015b565b6102ac60005462010000900473ffffffffffffffffffffffffffffffffffffffff161590565b604051901515815260200161017c565b6101aa6102ca366004612045565b610b49565b60985461015b9073ffffffffffffffffffffffffffffffffffffffff1681565b6102f7600081565b60405160ff909116815260200161017c565b60005462010000900473ffffffffffffffffffffffffffffffffffffffff163314610360576040517f8d450dd800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b603480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005462010000900473ffffffffffffffffffffffffffffffffffffffff1633146103fe576040517f8d450dd800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b609880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f8ff00ea0f06ea523b8f4b80a53bb86b4967c9909b4e354b47a83371249ad57f390600090a250565b60005462010000900473ffffffffffffffffffffffffffffffffffffffff1633146104c4576040517f8d450dd800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600254600003610500576040517f392cc0fc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b62093a80600254426105129190612107565b11610549576040517f86d4b3f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015473ffffffffffffffffffffffffffffffffffffffff1615610599576040517f23295ef900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001546105bb9073ffffffffffffffffffffffffffffffffffffffff16610d86565b565b6105c633610e31565b610631576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f217265706c69636100000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b63ffffffff84166000908152606660205260409020548490839081146106b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f2172656d6f746520726f757465720000000000000000000000000000000000006044820152606401610628565b60006106e96106c28583610ecc565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000016610ef0565b905060006107187fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316610f25565b905060006107477fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008416610f8e565b6098546040517fd7aada8100000000000000000000000000000000000000000000000000000000815291925073ffffffffffffffffffffffffffffffffffffffff169063d7aada81906107a09085908590600401612159565b600060405180830381600087803b1580156107ba57600080fd5b505af11580156107ce573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff168963ffffffff1661080f8b8b63ffffffff1660209190911b67ffffffff00000000161790565b67ffffffffffffffff167fb29810b17f96b207e4d6c91fd73ec7ab882db28c3a239f2eb6c7c801c43d003b846040516108489190612188565b60405180910390a4505050505050505050565b60005462010000900473ffffffffffffffffffffffffffffffffffffffff1633146108b2576040517f8d450dd800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015473ffffffffffffffffffffffffffffffffffffffff82811691161480156108f1575073ffffffffffffffffffffffffffffffffffffffff811615155b15610928576040517f23780cca00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005473ffffffffffffffffffffffffffffffffffffffff808316620100009092041603610982576040517f945f6e7e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61098b81611095565b50565b60005462010000900473ffffffffffffffffffffffffffffffffffffffff1633146109e5576040517f8d450dd800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b63ffffffff909116600090815260666020526040902055565b6000610a0a6001611108565b90508015610a3f57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610a4882611293565b8015610aab57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b60015473ffffffffffffffffffffffffffffffffffffffff163314610b00576040517f234fe4e200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b62093a8060025442610b129190612107565b11610599576040517fd39c12bb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60985473ffffffffffffffffffffffffffffffffffffffff163314610b9a576040517f14e189b000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000819003610bd5576040517f5aef8ded00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8316610c22576040517ff7afa16f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610c2d8561131c565b90506000610c3c858585611399565b9050603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639fa92f9d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccf919061219b565b73ffffffffffffffffffffffffffffffffffffffff1663fa31de018784846040518463ffffffff1660e01b8152600401610d0b93929190612223565b600060405180830381600087803b158015610d2557600080fd5b505af1158015610d39573d6000803e3d6000fd5b505050507f90d6f02f078dba10aa43c39bf7a3d3bc9629a280b078d473da5486c6531ec641868686868686604051610d7696959493929190612248565b60405180910390a1505050505050565b6000805473ffffffffffffffffffffffffffffffffffffffff838116620100008181027fffffffffffffffffffff0000000000000000000000000000000000000000ffff85161785556002859055600180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b6034546040517f5190bc5300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301526000921690635190bc5390602401602060405180830381865afa158015610ea2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec691906122ea565b92915050565b815160009060208401610ee764ffffffffff851682846113ce565b95945050505050565b6000610ec6610efe83611431565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000166114a8565b6000816001610f58815b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000084169061151d565b50610f867fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000085166001611638565b949350505050565b6060816001610f9c81610f2f565b506000610fce7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000861660156020611642565b905060008167ffffffffffffffff811115610feb57610feb611ef2565b604051908082528060200260200182016040528015611014578160200160208202803683370190505b50905060005b8281101561108b5761106661103060208361230c565b61103b906035612349565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008916906020611672565b82828151811061107857611078612361565b602090810291909101015260010161101a565b5095945050505050565b42600255600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b60008054610100900460ff16156111bf578160ff16600114801561112b5750303b155b6111b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610628565b506000919050565b60005460ff808416911610611256576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610628565b50600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff92909216919091179055600190565b919050565b600061129f6001611108565b905080156112d457600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b603480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8416179055610a48611864565b63ffffffff81166000908152606660205260409020548061128e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f2172656d6f7465000000000000000000000000000000000000000000000000006044820152606401610628565b606060016040516113b591908690859087908290602001612390565b60405160208183030381529060405290505b9392505050565b6000806113db8385612349565b90506040518111156113eb575060005b8060000361141c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000009150506113c7565b5050606092831b9190911790911b1760181b90565b600061143c82611903565b15611482577affffffffffffffffffffffffffffffffffffffffffffffff00000082167b0100000000000000000000000000000000000000000000000000000017610ec6565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000610ec6565b60006114b382611943565b611519576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f56616c696469747920617373657274696f6e206661696c6564000000000000006044820152606401610628565b5090565b60006115298383611980565b61163157600061154861153c8560d81c90565b64ffffffffff166119a3565b915050600061155d8464ffffffffff166119a3565b6040517f5479706520617373657274696f6e206661696c65642e20476f7420307800000060208201527fffffffffffffffffffff0000000000000000000000000000000000000000000060b086811b8216603d8401527f2e20457870656374656420307800000000000000000000000000000000000000604784015283901b16605482015290925060009150605e016040516020818303038152906040529050806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106289190612437565b5090919050565b60006113c7838360145b600061164f82602061244a565b61165a90600861246d565b60ff16611668858585611672565b901c949350505050565b60008160ff16600003611687575060006113c7565b61169f8460181c6bffffffffffffffffffffffff1690565b6bffffffffffffffffffffffff166116ba60ff841685612349565b111561174c576117196116db8560781c6bffffffffffffffffffffffff1690565b6bffffffffffffffffffffffff166117018660181c6bffffffffffffffffffffffff1690565b6bffffffffffffffffffffffff16858560ff16611a8d565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106289190612437565b60208260ff1611156117e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e2033322062797465730000000000006064820152608401610628565b6008820260006117fe8660781c6bffffffffffffffffffffffff1690565b6bffffffffffffffffffffffff16905060007f80000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84011d91909501511695945050505050565b600054610100900460ff166118fb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610628565b6105bb611c1d565b6000601882901c6bffffffffffffffffffffffff16605581108015906113c757506020611931603583612107565b61193b9190612496565b159392505050565b600061194f8260d81c90565b64ffffffffff1664ffffffffff0361196957506000919050565b600061197483611cbd565b60405110199392505050565b60008164ffffffffff166119948460d81c90565b64ffffffffff16149392505050565b600080601f5b600f8160ff161115611a165760006119c282600861246d565b60ff1685901c90506119d381611d05565b61ffff16841793508160ff166010146119ee57601084901b93505b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016119a9565b50600f5b60ff8160ff161015611a87576000611a3382600861246d565b60ff1685901c9050611a4481611d05565b61ffff16831792508160ff16600014611a5f57601083901b92505b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01611a1a565b50915091565b60606000611a9a866119a3565b9150506000611aa8866119a3565b9150506000611ab6866119a3565b9150506000611ac4866119a3565b604080517f54797065644d656d566965772f696e646578202d204f76657272616e2074686560208201527f20766965772e20536c6963652069732061742030780000000000000000000000818301527fffffffffffff000000000000000000000000000000000000000000000000000060d098891b811660558301527f2077697468206c656e6774682030780000000000000000000000000000000000605b830181905297891b8116606a8301527f2e20417474656d7074656420746f20696e646578206174206f6666736574203060708301527f7800000000000000000000000000000000000000000000000000000000000000609083015295881b861660918201526097810196909652951b90921660a684015250507f2e0000000000000000000000000000000000000000000000000000000000000060ac8201528151808203608d01815260ad90910190915295945050505050565b600054610100900460ff16611cb4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610628565b6105bb33610d86565b6000611cd78260181c6bffffffffffffffffffffffff1690565b611cef8360781c6bffffffffffffffffffffffff1690565b016bffffffffffffffffffffffff169050919050565b6000611d1760048360ff16901c611d37565b60ff1661ffff919091161760081b611d2e82611d37565b60ff1617919050565b600060f08083179060ff82169003611d525750603092915050565b8060ff1660f103611d665750603192915050565b8060ff1660f203611d7a5750603292915050565b8060ff1660f303611d8e5750603392915050565b8060ff1660f403611da25750603492915050565b8060ff1660f503611db65750603592915050565b8060ff1660f603611dca5750603692915050565b8060ff1660f703611dde5750603792915050565b8060ff1660f803611df25750603892915050565b8060ff1660f903611e065750603992915050565b8060ff1660fa03611e1a5750606192915050565b8060ff1660fb03611e2e5750606292915050565b8060ff1660fc03611e425750606392915050565b8060ff1660fd03611e565750606492915050565b8060ff1660fe03611e6a5750606592915050565b8060ff1660ff03611e7e5750606692915050565b50919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461098b57600080fd5b600060208284031215611eb857600080fd5b81356113c781611e84565b803563ffffffff8116811461128e57600080fd5b600060208284031215611ee957600080fd5b6113c782611ec3565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060008060808587031215611f3757600080fd5b611f4085611ec3565b9350611f4e60208601611ec3565b925060408501359150606085013567ffffffffffffffff80821115611f7257600080fd5b818701915087601f830112611f8657600080fd5b813581811115611f9857611f98611ef2565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715611fde57611fde611ef2565b816040528281528a6020848701011115611ff757600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561202e57600080fd5b61203783611ec3565b946020939093013593505050565b6000806000806060858703121561205b57600080fd5b61206485611ec3565b9350602085013561207481611e84565b9250604085013567ffffffffffffffff8082111561209157600080fd5b818701915087601f8301126120a557600080fd5b8135818111156120b457600080fd5b8860208260051b85010111156120c957600080fd5b95989497505060200194505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015612119576121196120d8565b500390565b600081518084526020808501945080840160005b8381101561214e57815187529582019590820190600101612132565b509495945050505050565b73ffffffffffffffffffffffffffffffffffffffff83168152604060208201526000610f86604083018461211e565b6020815260006113c7602083018461211e565b6000602082840312156121ad57600080fd5b81516113c781611e84565b6000815180845260005b818110156121de576020818501810151868301820152016121c2565b818111156121f0576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b63ffffffff84168152826020820152606060408201526000610ee760608301846121b8565b63ffffffff8716815273ffffffffffffffffffffffffffffffffffffffff8616602082015260a060408201528360a082015260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8511156122a957600080fd5b8460051b808760c0850137808301905060c081016000815285606085015260c08483030160808501526122dc81866121b8565b9a9950505050505050505050565b6000602082840312156122fc57600080fd5b815180151581146113c757600080fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612344576123446120d8565b500290565b6000821982111561235c5761235c6120d8565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7fff000000000000000000000000000000000000000000000000000000000000008660f81b1681527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008560601b16600182015283601582015260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561241857600080fd5b8260051b80856035850137600092016035019182525095945050505050565b6020815260006113c760208301846121b8565b600060ff821660ff841680821015612464576124646120d8565b90039392505050565b600060ff821660ff84168160ff048111821515161561248e5761248e6120d8565b029392505050565b6000826124cc577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50069056fea164736f6c634300080f000a";

type RelayerFeeRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RelayerFeeRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RelayerFeeRouter__factory extends ContractFactory {
  constructor(...args: RelayerFeeRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RelayerFeeRouter> {
    return super.deploy(overrides || {}) as Promise<RelayerFeeRouter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RelayerFeeRouter {
    return super.attach(address) as RelayerFeeRouter;
  }
  connect(signer: Signer): RelayerFeeRouter__factory {
    return super.connect(signer) as RelayerFeeRouter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RelayerFeeRouterInterface {
    return new utils.Interface(_abi) as RelayerFeeRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RelayerFeeRouter {
    return new Contract(address, _abi, signerOrProvider) as RelayerFeeRouter;
  }
}
