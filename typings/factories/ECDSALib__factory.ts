/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ECDSALib, ECDSALibInterface } from "../ECDSALib";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__02f9a6b3",
        type: "bytes8",
      },
    ],
    name: "c_02f9a6b3",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__02f9a6b3",
        type: "bytes8",
      },
    ],
    name: "c_false02f9a6b3",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__02f9a6b3",
        type: "bytes8",
      },
    ],
    name: "c_true02f9a6b3",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610179610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c80631617e104146100505780631cefbfd8146100af578063a91793dd146100f8575b600080fd5b6100976004803603602081101561006657600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610157565b60405180821515815260200191505060405180910390f35b6100f6600480360360208110156100c557600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610162565b005b61013f6004803603602081101561010e57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610165565b60405180821515815260200191505060405180910390f35b600060019050919050565b50565b600091905056fea164736f6c634300060c000a";

type ECDSALibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ECDSALibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ECDSALib__factory extends ContractFactory {
  constructor(...args: ECDSALibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ECDSALib> {
    return super.deploy(overrides || {}) as Promise<ECDSALib>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ECDSALib {
    return super.attach(address) as ECDSALib;
  }
  connect(signer: Signer): ECDSALib__factory {
    return super.connect(signer) as ECDSALib__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ECDSALibInterface {
    return new utils.Interface(_abi) as ECDSALibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ECDSALib {
    return new Contract(address, _abi, signerOrProvider) as ECDSALib;
  }
}
