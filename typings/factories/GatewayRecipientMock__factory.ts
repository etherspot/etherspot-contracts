/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GatewayRecipientMock,
  GatewayRecipientMockInterface,
} from "../GatewayRecipientMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "gateway_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "Context",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__7fd4d25d",
        type: "bytes8",
      },
    ],
    name: "c_7fd4d25d",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__d5c463c2",
        type: "bytes8",
      },
    ],
    name: "c_d5c463c2",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__7fd4d25d",
        type: "bytes8",
      },
    ],
    name: "c_false7fd4d25d",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__d5c463c2",
        type: "bytes8",
      },
    ],
    name: "c_falsed5c463c2",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__7fd4d25d",
        type: "bytes8",
      },
    ],
    name: "c_true7fd4d25d",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__d5c463c2",
        type: "bytes8",
      },
    ],
    name: "c_trued5c463c2",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "emitContext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610c62380380610c628339818101604052602081101561003357600080fd5b810190808051906020019092919050505061005e6789a8def7746ca9f960c01b6100c160201b60201c565b61007867ca463d24461d380a60c01b6100c460201b60201c565b61009267086aa5254ee8087760c01b6100c460201b60201c565b6100ac67882f5252104ca99f60c01b6100c460201b60201c565b6100bb816100c760201b60201c565b5061013e565b50565b50565b6100e167acc543fa1b541b9760c01b6100c160201b60201c565b6100fb6745b6904116eed90f60c01b6100c160201b60201c565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610b158061014d6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80633ca3acf51161005b5780633ca3acf5146101b257806350aa3dff146102115780636d0e778014610270578063c369d5fe1461027a57610088565b80630c4b1a171461008d5780630dacdff0146100d6578063116191b61461011f57806321a5f5da14610153575b600080fd5b6100d4600480360360208110156100a357600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506102d9565b005b61011d600480360360208110156100ec57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506102dc565b005b6101276102df565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61019a6004803603602081101561016957600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610303565b60405180821515815260200191505060405180910390f35b6101f9600480360360208110156101c857600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505061030e565b60405180821515815260200191505060405180910390f35b6102586004803603602081101561022757600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610319565b60405180821515815260200191505060405180910390f35b610278610320565b005b6102c16004803603602081101561029057600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610411565b60405180821515815260200191505060405180910390f35b50565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060019050919050565b600060019050919050565b6000919050565b61033467f8aac3099b69b10860c01b6102dc565b61034867083f6bd35a1e88ff60c01b6102dc565b61035c67fef1eecadf7047c460c01b6102dc565b7f1b86fe2ccdffbf1a2c71e8eca215369d319e2c66c438a84d666fb2536ffbfb3a610385610418565b61038d610465565b6103956104b2565b604051808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060405180910390a1565b6000919050565b600061042e67ef0c2ccb0eaea3fa60c01b6102d9565b61044267d48283015708d25760c01b6102d9565b61045667f39e2954df5a2db660c01b6102d9565b61046060286105d9565b905090565b600061047b67a276b4e8b680777360c01b6102d9565b61048f67fca2d877ee539c9860c01b6102d9565b6104a36750f09a8716632a5e60c01b6102d9565b6104ad60146105d9565b905090565b3660006104c9678bf4c818768891a660c01b6102d9565b6104dd67f8c48dce87e5ecb360c01b6102d9565b6104f167945344598e24370060c01b6102d9565b36600061050867987c593e6bbafc2460c01b6102d9565b61051c67bfbe8fa50a581ec860c01b6102d9565b61052461076f565b156105755761053d672d1dfef9ea0d089f60c01b6102d9565b6105516726814d1ae5ba4ff760c01b6102d9565b60003660009060286000369050039261056c93929190610ab3565b915091506105a5565b61058967777422fc1a8d871460c01b6102d9565b61059d671c1ea74c71821df960c01b6102d9565b600036915091505b6105b96723e51eae1dae8bb760c01b6102d9565b6105cd679c8ab58cfb7eab7a60c01b6102d9565b81819350935050509091565b60006105ef67772a91b96de17dad60c01b6102d9565b610603670bccad2f0bdd31ff60c01b6102d9565b610617672926a43bd618754960c01b6102d9565b600061062d6732a18237a34b56fc60c01b6102d9565b610641673c6e4f378359208560c01b6102d9565b61064961076f565b15610712576106626738aef6c832f61fa160c01b6102d9565b6106766773de43eb740fd94260c01b6102d9565b61068a671a79731e867b884e60c01b6102d9565b60008360003690500390506106a96780fcc39b774739ce60c01b6102d9565b61070a600036839060148501926106c293929190610ab3565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061094e565b91505061073e565b61072667d791575e9a77c3b360c01b6102d9565b61073a67d5f2dfe665b92a0760c01b6102d9565b3390505b6107526732af8de234d9261260c01b6102d9565b61076667c1233a9a4a37cbe260c01b6102d9565b80915050919050565b600061078567d69a0630f85cccd960c01b6102d9565b6107996761da87153b21fa4e60c01b6102d9565b6107ad671a47b3ddf4ac6dd860c01b6102d9565b60006107c36795a5c08572e155d060c01b6102d9565b6107d767104e9630cce4d6fe60c01b6102d9565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561090a5761083f67ca3b6f3f0b5da39b60c01b6102d9565b61085367fc6ee57264ed379c60c01b6102d9565b61086767a440e18dce17aeab60c01b6102d9565b61087b67192a05873f3db5f260c01b6102d9565b602c600036905010156108d9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610ae76022913960400191505060405180910390fd5b6108ed67da7cfd61ffe88fda60c01b6102d9565b6109016717400c6c53de5f0560c01b6102d9565b6001905061091f565b61091e67390e9d8548c1ed9c60c01b6102d9565b5b61093367e814b23d00c6f48060c01b6102d9565b6109476728fe60e7a7a5712860c01b6102d9565b8091505090565b6000610964673996a0d04c88d9a460c01b610ab0565b6109786783c007718ca1efac60c01b610ab0565b61098c67499c6e4ee1cb642760c01b610ab0565b60006109a26748c82eb6a4e79fb360c01b610ab0565b6109b667feb27027632755a460c01b610ab0565b6109ca67a2cb1447ede72f6660c01b610ab0565b6014835114610a41576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f42797465734c69623a20696e76616c69642064617461206c656e67746800000081525060200191505060405180910390fd5b610a55677c1f66eeec4c6b8b60c01b610ab0565b610a6967cb392aa5dde1d72e60c01b610ab0565b6c010000000000000000000000006020840151049050610a9367177898a349e9545960c01b610ab0565b610aa7675e11b686ccbb0c5f60c01b610ab0565b80915050919050565b50565b60008085851115610ac357600080fd5b83861115610ad057600080fd5b600185028301915084860390509450949250505056fe47617465776179526563697069656e743a20696e76616c6964206d73672e64617461a164736f6c634300060c000a";

type GatewayRecipientMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GatewayRecipientMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GatewayRecipientMock__factory extends ContractFactory {
  constructor(...args: GatewayRecipientMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    gateway_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GatewayRecipientMock> {
    return super.deploy(
      gateway_,
      overrides || {}
    ) as Promise<GatewayRecipientMock>;
  }
  getDeployTransaction(
    gateway_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(gateway_, overrides || {});
  }
  attach(address: string): GatewayRecipientMock {
    return super.attach(address) as GatewayRecipientMock;
  }
  connect(signer: Signer): GatewayRecipientMock__factory {
    return super.connect(signer) as GatewayRecipientMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GatewayRecipientMockInterface {
    return new utils.Interface(_abi) as GatewayRecipientMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GatewayRecipientMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GatewayRecipientMock;
  }
}
