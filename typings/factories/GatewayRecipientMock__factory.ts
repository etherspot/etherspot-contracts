/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GatewayRecipientMock,
  GatewayRecipientMockInterface,
} from "../GatewayRecipientMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "gateway_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "Context",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__7fd4d25d",
        type: "bytes8",
      },
    ],
    name: "c_7fd4d25d",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__d5c463c2",
        type: "bytes8",
      },
    ],
    name: "c_d5c463c2",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__7fd4d25d",
        type: "bytes8",
      },
    ],
    name: "c_false7fd4d25d",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__d5c463c2",
        type: "bytes8",
      },
    ],
    name: "c_falsed5c463c2",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__7fd4d25d",
        type: "bytes8",
      },
    ],
    name: "c_true7fd4d25d",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__d5c463c2",
        type: "bytes8",
      },
    ],
    name: "c_trued5c463c2",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "emitContext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610c62380380610c628339818101604052602081101561003357600080fd5b810190808051906020019092919050505061005e67f3f8abaddc57a31660c01b6100c160201b60201c565b61007867cd208f0a6c7b0c1d60c01b6100c460201b60201c565b61009267a2bebb4bffc13f6160c01b6100c460201b60201c565b6100ac671427ec1a3470813b60c01b6100c460201b60201c565b6100bb816100c760201b60201c565b5061013e565b50565b50565b6100e1679d7ccc1311d911f260c01b6100c160201b60201c565b6100fb675c759c22b9c661dc60c01b6100c160201b60201c565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610b158061014d6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80633ca3acf51161005b5780633ca3acf5146101b257806350aa3dff146102115780636d0e778014610270578063c369d5fe1461027a57610088565b80630c4b1a171461008d5780630dacdff0146100d6578063116191b61461011f57806321a5f5da14610153575b600080fd5b6100d4600480360360208110156100a357600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506102d9565b005b61011d600480360360208110156100ec57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506102dc565b005b6101276102df565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61019a6004803603602081101561016957600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610303565b60405180821515815260200191505060405180910390f35b6101f9600480360360208110156101c857600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505061030e565b60405180821515815260200191505060405180910390f35b6102586004803603602081101561022757600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610319565b60405180821515815260200191505060405180910390f35b610278610320565b005b6102c16004803603602081101561029057600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610411565b60405180821515815260200191505060405180910390f35b50565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060019050919050565b600060019050919050565b6000919050565b610334677867d71d997bbadc60c01b6102dc565b610348673bfb47a8a13e304660c01b6102dc565b61035c67f94e164311d4937260c01b6102dc565b7f1b86fe2ccdffbf1a2c71e8eca215369d319e2c66c438a84d666fb2536ffbfb3a610385610418565b61038d610465565b6103956104b2565b604051808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060405180910390a1565b6000919050565b600061042e671c7ff357d193636160c01b6102d9565b61044267ab8759dadf1f42b260c01b6102d9565b61045667125a6f506ec49d2c60c01b6102d9565b61046060286105d9565b905090565b600061047b67eceaa95f825f3a4260c01b6102d9565b61048f678f7872b50d8894f260c01b6102d9565b6104a3673638c588541bbf8f60c01b6102d9565b6104ad60146105d9565b905090565b3660006104c96718e43306fa522aa660c01b6102d9565b6104dd67b108d0c7652014f560c01b6102d9565b6104f167a099e454661fe74860c01b6102d9565b36600061050867a424950804cefa9260c01b6102d9565b61051c67db9c560597aa40b460c01b6102d9565b61052461076f565b156105755761053d678f8cf15944100f3860c01b6102d9565b610551674b8ab5569e38fcdc60c01b6102d9565b60003660009060286000369050039261056c93929190610ab3565b915091506105a5565b6105896771b44a3955fa20ba60c01b6102d9565b61059d67bc38e241c91d05ba60c01b6102d9565b600036915091505b6105b967dd13a2cc73707e7060c01b6102d9565b6105cd67f6931756dc09165d60c01b6102d9565b81819350935050509091565b60006105ef67f97596c145c2643c60c01b6102d9565b61060367719767a6276b440260c01b6102d9565b61061767ff6cc0c52b772da360c01b6102d9565b600061062d67d55d1ee61f7caad060c01b6102d9565b61064167e00ca364820461b760c01b6102d9565b61064961076f565b15610712576106626752b2296e5485884f60c01b6102d9565b6106766731059657a58d110360c01b6102d9565b61068a67d161cb06738c6bb060c01b6102d9565b60008360003690500390506106a9678376598f1a6671ee60c01b6102d9565b61070a600036839060148501926106c293929190610ab3565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061094e565b91505061073e565b61072667ed1fe281c58f00ab60c01b6102d9565b61073a67c577249a47fbafbc60c01b6102d9565b3390505b61075267d840d7f568e7e8f360c01b6102d9565b610766672f41cc642398b43e60c01b6102d9565b80915050919050565b600061078567b24a756293c07fff60c01b6102d9565b61079967fad27be25666a35560c01b6102d9565b6107ad67d5c957d7e9ed371260c01b6102d9565b60006107c367780739a1dcfdcb2960c01b6102d9565b6107d767c2c61d022ff8fe9c60c01b6102d9565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561090a5761083f67a838fa7fccd80d5f60c01b6102d9565b6108536718d71566f06a2d5960c01b6102d9565b6108676719ef867e8bf1060d60c01b6102d9565b61087b679d0e513a971c0b6160c01b6102d9565b602c600036905010156108d9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610ae76022913960400191505060405180910390fd5b6108ed678edf6ceda73addb260c01b6102d9565b6109016787211d918602887760c01b6102d9565b6001905061091f565b61091e675539c133ed18bde460c01b6102d9565b5b6109336740acee34bffbf2ec60c01b6102d9565b61094767908c3807aad70fcf60c01b6102d9565b8091505090565b60006109646745fe888f961edf9060c01b610ab0565b61097867c128e14c9960586c60c01b610ab0565b61098c679e4addf985cabeb360c01b610ab0565b60006109a267aab182be3934d1bf60c01b610ab0565b6109b667339143ce5b10bc7a60c01b610ab0565b6109ca67e0ac55f3b55d06d860c01b610ab0565b6014835114610a41576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f42797465734c69623a20696e76616c69642064617461206c656e67746800000081525060200191505060405180910390fd5b610a5567eea605de5a7e45e660c01b610ab0565b610a6967df87c6a35e4a5c0d60c01b610ab0565b6c010000000000000000000000006020840151049050610a93670ed0f5a70872476160c01b610ab0565b610aa76746c545de0ca3a1af60c01b610ab0565b80915050919050565b50565b60008085851115610ac357600080fd5b83861115610ad057600080fd5b600185028301915084860390509450949250505056fe47617465776179526563697069656e743a20696e76616c6964206d73672e64617461a164736f6c634300060c000a";

type GatewayRecipientMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GatewayRecipientMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GatewayRecipientMock__factory extends ContractFactory {
  constructor(...args: GatewayRecipientMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    gateway_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GatewayRecipientMock> {
    return super.deploy(
      gateway_,
      overrides || {}
    ) as Promise<GatewayRecipientMock>;
  }
  getDeployTransaction(
    gateway_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(gateway_, overrides || {});
  }
  attach(address: string): GatewayRecipientMock {
    return super.attach(address) as GatewayRecipientMock;
  }
  connect(signer: Signer): GatewayRecipientMock__factory {
    return super.connect(signer) as GatewayRecipientMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GatewayRecipientMockInterface {
    return new utils.Interface(_abi) as GatewayRecipientMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GatewayRecipientMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GatewayRecipientMock;
  }
}
