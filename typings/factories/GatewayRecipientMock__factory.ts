/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GatewayRecipientMock,
  GatewayRecipientMockInterface,
} from "../GatewayRecipientMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "gateway_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "Context",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__d18be0f9",
        type: "bytes8",
      },
    ],
    name: "c_d18be0f9",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__e67bae8c",
        type: "bytes8",
      },
    ],
    name: "c_e67bae8c",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__d18be0f9",
        type: "bytes8",
      },
    ],
    name: "c_falsed18be0f9",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__e67bae8c",
        type: "bytes8",
      },
    ],
    name: "c_falsee67bae8c",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__d18be0f9",
        type: "bytes8",
      },
    ],
    name: "c_trued18be0f9",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__e67bae8c",
        type: "bytes8",
      },
    ],
    name: "c_truee67bae8c",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "emitContext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610c62380380610c628339818101604052602081101561003357600080fd5b810190808051906020019092919050505061005e674f33f857671bcade60c01b6100c160201b60201c565b610078676daff44fec51189560c01b6100c460201b60201c565b6100926765821a2a6b9e96b660c01b6100c460201b60201c565b6100ac677affba52489dc8d160c01b6100c460201b60201c565b6100bb816100c760201b60201c565b5061013e565b50565b50565b6100e1670beab42e12728d3b60c01b6100c160201b60201c565b6100fb675ecbac840a5512ec60c01b6100c160201b60201c565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610b158061014d6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806381d7bced1161005b57806381d7bced146101895780639f106f7e146101e8578063ccf4d3ff14610247578063f0af07211461029057610088565b8063116191b61461008d578063385ee184146100c1578063692b0ad9146101205780636d0e77801461017f575b600080fd5b6100956102d9565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610108600480360360208110156100d757600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506102fd565b60405180821515815260200191505060405180910390f35b6101676004803603602081101561013657600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610304565b60405180821515815260200191505060405180910390f35b61018761030b565b005b6101d06004803603602081101561019f57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506103fc565b60405180821515815260200191505060405180910390f35b61022f600480360360208110156101fe57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610407565b60405180821515815260200191505060405180910390f35b61028e6004803603602081101561025d57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610412565b005b6102d7600480360360208110156102a657600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610415565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000919050565b6000919050565b61031f67b20fd189f077e05860c01b610412565b61033367ec0b194b4a81094460c01b610412565b6103476762838e597a2e18b460c01b610412565b7f1b86fe2ccdffbf1a2c71e8eca215369d319e2c66c438a84d666fb2536ffbfb3a610370610418565b610378610465565b6103806104b2565b604051808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060405180910390a1565b600060019050919050565b600060019050919050565b50565b50565b600061042e677ac614d5268cc8ac60c01b610415565b610442670a6b7ac33c94c4ed60c01b610415565b61045667e7ef433820a2765360c01b610415565b61046060286105d9565b905090565b600061047b67e6b9fb986a1ba5a160c01b610415565b61048f67e5f2b4fde85ab0e060c01b610415565b6104a3675a28d96f6aadd0b960c01b610415565b6104ad60146105d9565b905090565b3660006104c9678cde4d1c98ab793960c01b610415565b6104dd6774d9633c758f89e360c01b610415565b6104f167e6e7a205e7f71da860c01b610415565b3660006105086744d9d65c1c805efa60c01b610415565b61051c6736bb3dc184ff614b60c01b610415565b61052461076f565b156105755761053d6780767e9837f3e3e960c01b610415565b61055167cf3ec7dee0fd7cdd60c01b610415565b60003660009060286000369050039261056c93929190610ab3565b915091506105a5565b610589673c5b301410c0412c60c01b610415565b61059d6746f8f41b74f7388260c01b610415565b600036915091505b6105b9671404f1c53eef9bc560c01b610415565b6105cd67647e75d886adb5ab60c01b610415565b81819350935050509091565b60006105ef6787c8246a4b35d1f160c01b610415565b61060367976a1e8d41064d2460c01b610415565b610617671867d8bf077bb31160c01b610415565b600061062d67bdfeda5454a1273960c01b610415565b610641677709e048711a13c960c01b610415565b61064961076f565b156107125761066267d3c6f6b0bcac9b6e60c01b610415565b610676673b2573735f5d680260c01b610415565b61068a675089eb0622c78a2260c01b610415565b60008360003690500390506106a9674bc94a8e9a6ee57960c01b610415565b61070a600036839060148501926106c293929190610ab3565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061094e565b91505061073e565b610726677e45e81af2ec2edc60c01b610415565b61073a67391e31dbfdfb407e60c01b610415565b3390505b61075267c4042e2c7c2c999760c01b610415565b61076667fc44c5cccf2cd16760c01b610415565b80915050919050565b60006107856714ec9ba31585b6f760c01b610415565b6107996764d00f8ee4cbc0f460c01b610415565b6107ad6728aef4b71ffef7e260c01b610415565b60006107c3677b6cf6392b8d09d960c01b610415565b6107d767da655f124163f4bc60c01b610415565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561090a5761083f678c4556fd14dc507160c01b610415565b610853674811af4455ee520960c01b610415565b61086767ae36e4b52033411860c01b610415565b61087b67ffe63a27679b309260c01b610415565b602c600036905010156108d9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610ae76022913960400191505060405180910390fd5b6108ed67d1762b0b1ca636f360c01b610415565b6109016769c465f7e405b9f660c01b610415565b6001905061091f565b61091e6710f40798097af22060c01b610415565b5b610933671855328cbdf7411660c01b610415565b610947670e4f1457e534f9ac60c01b610415565b8091505090565b6000610964670df8d76b8cabf76a60c01b610ab0565b61097867e180fcce9e2bf4c560c01b610ab0565b61098c670dcb70abe8e8bb0b60c01b610ab0565b60006109a267c9f13cc22eb780e060c01b610ab0565b6109b667c60f8d891ff21de960c01b610ab0565b6109ca6782bb9e679e55c73460c01b610ab0565b6014835114610a41576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f42797465734c69623a20696e76616c69642064617461206c656e67746800000081525060200191505060405180910390fd5b610a55679ea304b1b6348ade60c01b610ab0565b610a6967a0049b4768bf518260c01b610ab0565b6c010000000000000000000000006020840151049050610a93671f4dc55703cfba1860c01b610ab0565b610aa767afb63a07e82275e260c01b610ab0565b80915050919050565b50565b60008085851115610ac357600080fd5b83861115610ad057600080fd5b600185028301915084860390509450949250505056fe47617465776179526563697069656e743a20696e76616c6964206d73672e64617461a164736f6c634300060c000a";

type GatewayRecipientMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GatewayRecipientMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GatewayRecipientMock__factory extends ContractFactory {
  constructor(...args: GatewayRecipientMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    gateway_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GatewayRecipientMock> {
    return super.deploy(
      gateway_,
      overrides || {}
    ) as Promise<GatewayRecipientMock>;
  }
  getDeployTransaction(
    gateway_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(gateway_, overrides || {});
  }
  attach(address: string): GatewayRecipientMock {
    return super.attach(address) as GatewayRecipientMock;
  }
  connect(signer: Signer): GatewayRecipientMock__factory {
    return super.connect(signer) as GatewayRecipientMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GatewayRecipientMockInterface {
    return new utils.Interface(_abi) as GatewayRecipientMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GatewayRecipientMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GatewayRecipientMock;
  }
}
