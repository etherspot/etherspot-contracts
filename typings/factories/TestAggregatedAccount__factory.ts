/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestAggregatedAccount,
  TestAggregatedAccountInterface,
} from "../TestAggregatedAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "anEntryPoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "anAggregator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IEntryPoint",
        name: "entryPoint",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "EtherspotInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "addDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "dest",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "func",
        type: "bytes[]",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAggregator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawDepositTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60e06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff168152503480156200004457600080fd5b5060405162002adf38038062002adf83398181016040528101906200006a91906200018b565b818073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050508073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250505050620001d2565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200010e82620000e1565b9050919050565b6000620001228262000101565b9050919050565b620001348162000115565b81146200014057600080fd5b50565b600081519050620001548162000129565b92915050565b620001658162000101565b81146200017157600080fd5b50565b60008151905062000185816200015a565b92915050565b60008060408385031215620001a557620001a4620000dc565b5b6000620001b58582860162000143565b9250506020620001c88582860162000174565b9150509250929050565b60805160a05160c0516128ac62000233600039600081816104b5015281816106640152610bf20152600081816109d7015261132a0152600081816104d9015281816105680152818161078a0152818161081901526108c901526128ac6000f3fe6080604052600436106100ec5760003560e01c80634f1ef2861161008a578063b0d691fe11610059578063b0d691fe146102ad578063b61d27f6146102d8578063c399ec8814610301578063c4d66de81461032c576100f3565b80634f1ef2861461021057806352d1902d1461022c5780638da5cb5b14610257578063affed0e014610282576100f3565b80633659cfe6116100c65780633659cfe6146101895780633ad59dbc146101b25780634a58db19146101dd5780634d44560d146101e7576100f3565b80630825d1fc146100f857806318dfb3c714610135578063245a7bfc1461015e576100f3565b366100f357005b600080fd5b34801561010457600080fd5b5061011f600480360381019061011a919061175d565b610355565b60405161012c91906117ef565b60405180910390f35b34801561014157600080fd5b5061015c600480360381019061015791906118c5565b6103a1565b005b34801561016a57600080fd5b506101736104b3565b6040516101809190611955565b60405180910390f35b34801561019557600080fd5b506101b060048036038101906101ab9190611970565b6104d7565b005b3480156101be57600080fd5b506101c7610660565b6040516101d49190611955565b60405180910390f35b6101e5610688565b005b3480156101f357600080fd5b5061020e600480360381019061020991906119db565b610708565b005b61022a60048036038101906102259190611b5c565b610788565b005b34801561023857600080fd5b506102416108c5565b60405161024e9190611bc7565b60405180910390f35b34801561026357600080fd5b5061026c61097e565b6040516102799190611955565b60405180910390f35b34801561028e57600080fd5b506102976109a4565b6040516102a491906117ef565b60405180910390f35b3480156102b957600080fd5b506102c26109d3565b6040516102cf9190611c41565b60405180910390f35b3480156102e457600080fd5b506102ff60048036038101906102fa9190611cb2565b6109fb565b005b34801561030d57600080fd5b50610316610a58565b60405161032391906117ef565b60405180910390f35b34801561033857600080fd5b50610353600480360381019061034e9190611970565b610ae0565b005b600061035f610b77565b61036a858585610bee565b9050600085806040019061037e9190611d35565b905014156103905761038f85610c89565b5b61039982610d37565b949350505050565b6103a9610dd3565b8181905084849050146103f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e890611e1b565b60405180910390fd5b60005b848490508110156104ac5761049985858381811061041557610414611e3b565b5b905060200201602081019061042a9190611970565b600085858581811061043f5761043e611e3b565b5b90506020028101906104519190611d35565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610ea2565b80806104a490611e99565b9150506103f4565b5050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161415610566576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055d90611f54565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166105a5610f26565b73ffffffffffffffffffffffffffffffffffffffff16146105fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f290611fe6565b60405180910390fd5b61060481610f7d565b61065d81600067ffffffffffffffff81111561062357610622611a31565b5b6040519080825280601f01601f1916602001820160405280156106555781602001600182028036833780820191505090505b506000610f88565b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60006106926109d3565b73ffffffffffffffffffffffffffffffffffffffff16346040516106b590612037565b60006040518083038185875af1925050503d80600081146106f2576040519150601f19603f3d011682016040523d82523d6000602084013e6106f7565b606091505b505090508061070557600080fd5b50565b6107106110f6565b6107186109d3565b73ffffffffffffffffffffffffffffffffffffffff1663205c287883836040518363ffffffff1660e01b815260040161075292919061205b565b600060405180830381600087803b15801561076c57600080fd5b505af1158015610780573d6000803e3d6000fd5b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161415610817576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080e90611f54565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610856610f26565b73ffffffffffffffffffffffffffffffffffffffff16146108ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a390611fe6565b60405180910390fd5b6108b582610f7d565b6108c182826001610f88565b5050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610955576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094c906120f6565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060029054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff16905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b610a03610dd3565b610a52848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610ea2565b50505050565b6000610a626109d3565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a9a9190611955565b602060405180830381865afa158015610ab7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610adb919061212b565b905090565b6000610aec60016111be565b90508015610b10576001600060016101000a81548160ff0219169083151502179055505b610b1a60006112ae565b8015610b735760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051610b6a91906121a0565b60405180910390a15b5050565b610b7f6109d3565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be39061222d565b60405180910390fd5b565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610c7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7590612299565b60405180910390fd5b600090509392505050565b80602001356000600281819054906101000a90046bffffffffffffffffffffffff1680929190610cb8906122d1565b91906101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055506bffffffffffffffffffffffff1614610d34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2b90612352565b60405180910390fd5b50565b60008114610dd05760003373ffffffffffffffffffffffffffffffffffffffff16827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90604051610d8790612037565b600060405180830381858888f193505050503d8060008114610dc5576040519150601f19603f3d011682016040523d82523d6000602084013e610dca565b606091505b50509050505b50565b610ddb6109d3565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610e615750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610ea0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e97906123e4565b60405180910390fd5b565b6000808473ffffffffffffffffffffffffffffffffffffffff168484604051610ecb9190612473565b60006040518083038185875af1925050503d8060008114610f08576040519150601f19603f3d011682016040523d82523d6000602084013e610f0d565b606091505b509150915081610f1f57805160208201fd5b5050505050565b6000610f547f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61138e565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610f856110f6565b50565b610fb47f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd914360001b611398565b60000160009054906101000a900460ff1615610fd857610fd3836113a2565b6110f1565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561104057506040513d601f19601f8201168201806040525081019061103d919061249f565b60015b61107f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110769061253e565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b81146110e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110db906125d0565b60405180910390fd5b506110f083838361145b565b5b505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061117d57503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6111bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b39061263c565b60405180910390fd5b565b60008060019054906101000a900460ff16156112355760018260ff161480156111ed57506111eb30611487565b155b61122c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611223906126ce565b60405180910390fd5b600090506112a9565b8160ff1660008054906101000a900460ff1660ff161061128a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611281906126ce565b60405180910390fd5b816000806101000a81548160ff021916908360ff160217905550600190505b919050565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167fc053dd35e22ddb3ae5f46f48289137bbba99fdd1068c0f7d3069bb62dab393fd60405160405180910390a350565b6000819050919050565b6000819050919050565b6113ab81611487565b6113ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e190612760565b60405180910390fd5b806114177f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61138e565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611464836114aa565b6000825111806114715750805b156114825761148083836114f9565b505b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6114b3816113a2565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b606061151e838360405180606001604052806027815260200161287960279139611526565b905092915050565b606061153184611487565b611570576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611567906127f2565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516115989190612473565b600060405180830381855af49150503d80600081146115d3576040519150601f19603f3d011682016040523d82523d6000602084013e6115d8565b606091505b50915091506115e88282866115f3565b925050509392505050565b6060831561160357829050611653565b6000835111156116165782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164a9190612856565b60405180910390fd5b9392505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000610160828403121561168a5761168961166e565b5b81905092915050565b6000819050919050565b6116a681611693565b81146116b157600080fd5b50565b6000813590506116c38161169d565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116f4826116c9565b9050919050565b611704816116e9565b811461170f57600080fd5b50565b600081359050611721816116fb565b92915050565b6000819050919050565b61173a81611727565b811461174557600080fd5b50565b60008135905061175781611731565b92915050565b6000806000806080858703121561177757611776611664565b5b600085013567ffffffffffffffff81111561179557611794611669565b5b6117a187828801611673565b94505060206117b2878288016116b4565b93505060406117c387828801611712565b92505060606117d487828801611748565b91505092959194509250565b6117e981611727565b82525050565b600060208201905061180460008301846117e0565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261182f5761182e61180a565b5b8235905067ffffffffffffffff81111561184c5761184b61180f565b5b60208301915083602082028301111561186857611867611814565b5b9250929050565b60008083601f8401126118855761188461180a565b5b8235905067ffffffffffffffff8111156118a2576118a161180f565b5b6020830191508360208202830111156118be576118bd611814565b5b9250929050565b600080600080604085870312156118df576118de611664565b5b600085013567ffffffffffffffff8111156118fd576118fc611669565b5b61190987828801611819565b9450945050602085013567ffffffffffffffff81111561192c5761192b611669565b5b6119388782880161186f565b925092505092959194509250565b61194f816116e9565b82525050565b600060208201905061196a6000830184611946565b92915050565b60006020828403121561198657611985611664565b5b600061199484828501611712565b91505092915050565b60006119a8826116c9565b9050919050565b6119b88161199d565b81146119c357600080fd5b50565b6000813590506119d5816119af565b92915050565b600080604083850312156119f2576119f1611664565b5b6000611a00858286016119c6565b9250506020611a1185828601611748565b9150509250929050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611a6982611a20565b810181811067ffffffffffffffff82111715611a8857611a87611a31565b5b80604052505050565b6000611a9b61165a565b9050611aa78282611a60565b919050565b600067ffffffffffffffff821115611ac757611ac6611a31565b5b611ad082611a20565b9050602081019050919050565b82818337600083830152505050565b6000611aff611afa84611aac565b611a91565b905082815260208101848484011115611b1b57611b1a611a1b565b5b611b26848285611add565b509392505050565b600082601f830112611b4357611b4261180a565b5b8135611b53848260208601611aec565b91505092915050565b60008060408385031215611b7357611b72611664565b5b6000611b8185828601611712565b925050602083013567ffffffffffffffff811115611ba257611ba1611669565b5b611bae85828601611b2e565b9150509250929050565b611bc181611693565b82525050565b6000602082019050611bdc6000830184611bb8565b92915050565b6000819050919050565b6000611c07611c02611bfd846116c9565b611be2565b6116c9565b9050919050565b6000611c1982611bec565b9050919050565b6000611c2b82611c0e565b9050919050565b611c3b81611c20565b82525050565b6000602082019050611c566000830184611c32565b92915050565b60008083601f840112611c7257611c7161180a565b5b8235905067ffffffffffffffff811115611c8f57611c8e61180f565b5b602083019150836001820283011115611cab57611caa611814565b5b9250929050565b60008060008060608587031215611ccc57611ccb611664565b5b6000611cda87828801611712565b9450506020611ceb87828801611748565b935050604085013567ffffffffffffffff811115611d0c57611d0b611669565b5b611d1887828801611c5c565b925092505092959194509250565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112611d5257611d51611d26565b5b80840192508235915067ffffffffffffffff821115611d7457611d73611d2b565b5b602083019250600182023603831315611d9057611d8f611d30565b5b509250929050565b600082825260208201905092915050565b7f457468657273706f744163636f756e743a3a206578656375746542617463682060008201527f2d2077726f6e67206172726179206c656e677468730000000000000000000000602082015250565b6000611e05603583611d98565b9150611e1082611da9565b604082019050919050565b60006020820190508181036000830152611e3481611df8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611ea482611727565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611ed757611ed6611e6a565b5b600182019050919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f64656c656761746563616c6c0000000000000000000000000000000000000000602082015250565b6000611f3e602c83611d98565b9150611f4982611ee2565b604082019050919050565b60006020820190508181036000830152611f6d81611f31565b9050919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f6163746976652070726f78790000000000000000000000000000000000000000602082015250565b6000611fd0602c83611d98565b9150611fdb82611f74565b604082019050919050565b60006020820190508181036000830152611fff81611fc3565b9050919050565b600081905092915050565b50565b6000612021600083612006565b915061202c82612011565b600082019050919050565b600061204282612014565b9150819050919050565b6120558161199d565b82525050565b6000604082019050612070600083018561204c565b61207d60208301846117e0565b9392505050565b7f555550535570677261646561626c653a206d757374206e6f742062652063616c60008201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000602082015250565b60006120e0603883611d98565b91506120eb82612084565b604082019050919050565b6000602082019050818103600083015261210f816120d3565b9050919050565b60008151905061212581611731565b92915050565b60006020828403121561214157612140611664565b5b600061214f84828501612116565b91505092915050565b6000819050919050565b600060ff82169050919050565b600061218a61218561218084612158565b611be2565b612162565b9050919050565b61219a8161216f565b82525050565b60006020820190506121b56000830184612191565b92915050565b7f457468657273706f744163636f756e743a204e6f742066726f6d20456e74727960008201527f506f696e74000000000000000000000000000000000000000000000000000000602082015250565b6000612217602583611d98565b9150612222826121bb565b604082019050919050565b600060208201905081810360008301526122468161220a565b9050919050565b7f77726f6e672061676772656761746f7200000000000000000000000000000000600082015250565b6000612283601083611d98565b915061228e8261224d565b602082019050919050565b600060208201905081810360008301526122b281612276565b9050919050565b60006bffffffffffffffffffffffff82169050919050565b60006122dc826122b9565b91506bffffffffffffffffffffffff8214156122fb576122fa611e6a565b5b600182019050919050565b7f457468657273706f744163636f756e743a3a20496e76616c6964206e6f6e6365600082015250565b600061233c602083611d98565b915061234782612306565b602082019050919050565b6000602082019050818103600083015261236b8161232f565b9050919050565b7f457468657273706f744163636f756e743a3a204e6f74204f776e6572206f722060008201527f456e747279506f696e7400000000000000000000000000000000000000000000602082015250565b60006123ce602a83611d98565b91506123d982612372565b604082019050919050565b600060208201905081810360008301526123fd816123c1565b9050919050565b600081519050919050565b60005b8381101561242d578082015181840152602081019050612412565b8381111561243c576000848401525b50505050565b600061244d82612404565b6124578185612006565b935061246781856020860161240f565b80840191505092915050565b600061247f8284612442565b915081905092915050565b6000815190506124998161169d565b92915050565b6000602082840312156124b5576124b4611664565b5b60006124c38482850161248a565b91505092915050565b7f45524331393637557067726164653a206e657720696d706c656d656e7461746960008201527f6f6e206973206e6f742055555053000000000000000000000000000000000000602082015250565b6000612528602e83611d98565b9150612533826124cc565b604082019050919050565b600060208201905081810360008301526125578161251b565b9050919050565b7f45524331393637557067726164653a20756e737570706f727465642070726f7860008201527f6961626c65555549440000000000000000000000000000000000000000000000602082015250565b60006125ba602983611d98565b91506125c58261255e565b604082019050919050565b600060208201905081810360008301526125e9816125ad565b9050919050565b7f457468657273706f744163636f756e743a3a204f6e6c79206f776e6572000000600082015250565b6000612626601d83611d98565b9150612631826125f0565b602082019050919050565b6000602082019050818103600083015261265581612619565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b60006126b8602e83611d98565b91506126c38261265c565b604082019050919050565b600060208201905081810360008301526126e7816126ab565b9050919050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b600061274a602d83611d98565b9150612755826126ee565b604082019050919050565b600060208201905081810360008301526127798161273d565b9050919050565b7f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b60006127dc602683611d98565b91506127e782612780565b604082019050919050565b6000602082019050818103600083015261280b816127cf565b9050919050565b600081519050919050565b600061282882612812565b6128328185611d98565b935061284281856020860161240f565b61284b81611a20565b840191505092915050565b60006020820190508181036000830152612870818461281d565b90509291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c634300080c000a";

type TestAggregatedAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestAggregatedAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestAggregatedAccount__factory extends ContractFactory {
  constructor(...args: TestAggregatedAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    anEntryPoint: string,
    anAggregator: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestAggregatedAccount> {
    return super.deploy(
      anEntryPoint,
      anAggregator,
      overrides || {}
    ) as Promise<TestAggregatedAccount>;
  }
  getDeployTransaction(
    anEntryPoint: string,
    anAggregator: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      anEntryPoint,
      anAggregator,
      overrides || {}
    );
  }
  attach(address: string): TestAggregatedAccount {
    return super.attach(address) as TestAggregatedAccount;
  }
  connect(signer: Signer): TestAggregatedAccount__factory {
    return super.connect(signer) as TestAggregatedAccount__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestAggregatedAccountInterface {
    return new utils.Interface(_abi) as TestAggregatedAccountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestAggregatedAccount {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestAggregatedAccount;
  }
}
