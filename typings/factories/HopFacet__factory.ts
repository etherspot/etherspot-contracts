/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { HopFacet, HopFacetInterface } from "../HopFacet";

const _abi = [
  {
    inputs: [],
    name: "CannotBridgeToSameNetwork",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeValueWithERC",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTransferToNullAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAValidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAnERC20Token",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chainLayerId",
        type: "uint256",
      },
    ],
    name: "HopInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_destination",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_bridge",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_ammWrapper",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_bonderFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amountOutMin",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_destinationAmountOutMin",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_destinationDeadline",
        type: "uint256",
      },
    ],
    name: "HopTokenSwap",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__9296fc39",
        type: "bytes8",
      },
    ],
    name: "c_9296fc39",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__99127806",
        type: "bytes8",
      },
    ],
    name: "c_99127806",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__9296fc39",
        type: "bytes8",
      },
    ],
    name: "c_false9296fc39",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__99127806",
        type: "bytes8",
      },
    ],
    name: "c_false99127806",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__9296fc39",
        type: "bytes8",
      },
    ],
    name: "c_true9296fc39",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__99127806",
        type: "bytes8",
      },
    ],
    name: "c_true99127806",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "bridge",
            type: "address",
          },
          {
            internalType: "address",
            name: "ammWrapper",
            type: "address",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bonderFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationAmountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationDeadline",
            type: "uint256",
          },
        ],
        internalType: "struct HopFacet.HopData",
        name: "_hopData",
        type: "tuple",
      },
    ],
    name: "hopTokenTransfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainLayerId",
        type: "uint256",
      },
    ],
    name: "initHop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061252d806100206000396000f3fe60806040526004361061007b5760003560e01c80635254f5a91161004e5780635254f5a91461014c5780639d2b482d14610168578063ac0d2b13146101a5578063fbdfb907146101e25761007b565b806314917f991461008057806314fe06e2146100a957806324fd21a3146100d25780634a6f22c41461010f575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190611cda565b61020b565b005b3480156100b557600080fd5b506100d060048036038101906100cb9190611cda565b61020e565b005b3480156100de57600080fd5b506100f960048036038101906100f49190611cda565b610211565b604051610106919061200d565b60405180910390f35b34801561011b57600080fd5b5061013660048036038101906101319190611cda565b61021c565b604051610143919061200d565b60405180910390f35b61016660048036038101906101619190611d03565b610227565b005b34801561017457600080fd5b5061018f600480360381019061018a9190611cda565b61093b565b60405161019c919061200d565b60405180910390f35b3480156101b157600080fd5b506101cc60048036038101906101c79190611cda565b610942565b6040516101d9919061200d565b60405180910390f35b3480156101ee57600080fd5b5061020960048036038101906102049190611d2d565b610949565b005b50565b50565b600060019050919050565b600060019050919050565b61023b67661bb951cdf53d8960c01b61020e565b61024f6770f43b674d4e55d060c01b61020b565b61026367fdb58b8d5e8c5bd260c01b61020b565b61027767f88563faceb9065260c01b61020b565b6000610281610a4a565b905061029767f5511ed184b06f9d60c01b61020b565b6102ab675fe6356e9bb02e7e60c01b61020b565b6001816000015414156102fe576102cc67c2bf72a01148a95560c01b61020b565b6040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103126759328cc6ac1a5b8460c01b61020b565b610326676585023ebf8de8b060c01b61020b565b600181600001819055506103446794e629fc71d8c79e60c01b61020b565b61035867f7c4c5ed2ed29b8760c01b61020e565b61036c672c8916768aa11a0d60c01b61020e565b61038067c0a65b1e3e76c5f160c01b61020e565b61039366682286c57c645760c01b61020e565b6103b38260400160208101906103a99190611c88565b8360a00135610ac8565b6103c7675aa064e00b20e53260c01b61020e565b6103db676629fd295d85650e60c01b61020e565b60006103f1672af44cf5d351024c60c01b61020e565b6104056753fbdf5eb662728e60c01b61020e565b600161040f610b42565b141561045757610429673bb93a90f35cab4360c01b61020e565b61043d67eeb9315c311e0c4a60c01b61020e565b8260000160208101906104509190611c88565b9050610495565b61046b67dae42f06ddcbf88760c01b61020e565b61047f67c33298c7d476a93160c01b61020e565b8260200160208101906104929190611c88565b90505b6104a96780516103bbb46bff60c01b61020e565b6104bd67495a4110dd564c7960c01b61020e565b82608001356104ca610b91565b141561052a576104e4672ad2e94f535bb7c360c01b61020e565b6104f867a071858ad800078d60c01b61020e565b6040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61053e6771fbd3624530aca960c01b61020e565b610552677a27ef6a0f081e7460c01b61020e565b6105666751f57ad3e8af0ae660c01b61020e565b61058783604001602081019061057c9190611c88565b828560a00135610c17565b61059b6732bd3d5fb005932360c01b61020e565b6105af679ee94c753e40a9bd60c01b61020e565b60006105cc8460400160208101906105c79190611c88565b610eef565b80156105e857506105e7671c6cdb2e561b1b7a60c01b610211565b5b806106035750610602673aae476a62e89c5660c01b61093b565b5b61060e576000610614565b8360a001355b905061062a6705ffa9b8053bd55060c01b61020e565b61063e674c1bf98b0497add460c01b61020e565b6001610648610b42565b141561072c57610662675102be4bdc4b236560c01b61020e565b6106766792dcf2d8fc419e0b60c01b61020e565b61068a67c03078e49b8a444360c01b61020e565b8173ffffffffffffffffffffffffffffffffffffffff1663deace8f58286608001358760600160208101906106bf9190611c88565b8860a001358961012001358a61014001356000806040518963ffffffff1660e01b81526004016106f597969594939291906120ea565b6000604051808303818588803b15801561070e57600080fd5b505af1158015610722573d6000803e3d6000fd5b5050505050610814565b61074067fdf9a48dd9fc437a60c01b61020e565b61075467a7dee6e3ed91651860c01b61020e565b61076867f86051a336f1b40760c01b61020e565b8173ffffffffffffffffffffffffffffffffffffffff1663eea0d7b282866080013587606001602081019061079d9190611c88565b8860a001358960c001358a60e001358b61010001358c61012001358d61014001356040518a63ffffffff1660e01b81526004016107e1989796959493929190612159565b6000604051808303818588803b1580156107fa57600080fd5b505af115801561080e573d6000803e3d6000fd5b50505050505b61082867743931de60bec1cb60c01b61020e565b61083c670e27e12512b10ba560c01b61020e565b83604001602081019061084f9190611c88565b73ffffffffffffffffffffffffffffffffffffffff168460600160208101906108789190611c88565b73ffffffffffffffffffffffffffffffffffffffff1685608001357f35ac5f1aa56e86e7f2e01562289e5bd298773763192f6433fde30f05932381738760000160208101906108c79190611c88565b8860200160208101906108da9190611c88565b8960a001358a60c001358b60e001358c61010001358d61012001358e610140013560405161090f989796959493929190611f66565b60405180910390a4505061092d67441391ce80e99b6c60c01b61020b565b600081600001819055505050565b6000919050565b6000919050565b61095d67c5488db08bf3aa7e60c01b61020e565b61097167d7ab695f9ebcf25360c01b61020e565b61098567b16491a2c8df993a60c01b61020e565b61098d610f64565b6109a167239b563e050639e260c01b61020e565b6109b56751706ccc83c3e5bd60c01b61020e565b60006109bf611063565b90506109d5671994d64fd24a342e60c01b61020e565b8181600001819055506109f267495839473eebbf2060c01b61020e565b610a0667436eee75c6aa5af960c01b61020e565b7f09b9d2d59be87e537ec1f2f9325f524d04c29f20e2c60ce0c3c6435102c7882a610a2f610b91565b83604051610a3e9291906121d7565b60405180910390a15050565b6000610a6067fa11c344c1ec53a860c01b61020b565b610a74670fd7b7008acdbf5460c01b61020b565b610a88679fbd6d57c5d665d460c01b61020b565b60007fc59b5acc5a6673a6c49ca2de898f87adbd9fdfdff36f689476b1c9e0c50964b49050610ac167a9235c9a8268ed9060c01b61020b565b8091505090565b610adc6784e2b4191aab0e7160c01b6110e1565b610af067712f6b66126e0b6560c01b6110e1565b610b0467e5482082d9cb542560c01b6110e1565b610b3e8282600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146110e4565b5050565b6000610b586714c0c344270ea6ab60c01b61020e565b610b6c67a6bc01b0a9fd9f3460c01b61020e565b610b80673887afe91e7c57b060c01b61020e565b610b88611063565b60000154905090565b6000610ba7675f090b7904c6545560c01b61020e565b610bbb676dc269d1fb2d3c6560c01b61020e565b610bcf6705c0ac5722f1f16a60c01b61020e565b6000610be5673fd71ef25da613d360c01b61020e565b469050610bfc67e61d6ccc0a6fabcc60c01b61020e565b610c106717c21480dae85d1f60c01b61020e565b8091505090565b610c2b679ca08e8b0dc7164560c01b6110e1565b610c3f677404bbe72845116960c01b6110e1565b610c536753004255cfb9f81160c01b6110e1565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610cb557610c9c67bccf623436530fb560c01b6110e1565b610cb0672f1ccbe7cc38641160c01b6110e1565b610eea565b610cc9671d77c326e3bb51a560c01b6110e1565b610cdd677d550d58d944335060c01b6110e1565b610cf16726446e7a1db47a7260c01b6110e1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d6c57610d3a67480cbdcd365f7cb860c01b6110e1565b6040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d806750e20f5aa90611eb60c01b6110e1565b610d9467df7812970f50c3b160c01b6110e1565b610da867e21ae98e185ebeb360c01b6110e1565b60008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401610de5929190611f06565b60206040518083038186803b158015610dfd57600080fd5b505afa158015610e11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e359190611d56565b9050610e4b67de3d312e2c7294dc60c01b6110e1565b610e5f674e70391417d4424060c01b6110e1565b81811015610ed357610e7b675743a1c484c15d3e60c01b6110e1565b610e8f67bfb9af13a56e47bd60c01b6110e1565b610ea367995d48b5586277dc60c01b6110e1565b610ece84847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611410565b610ee8565b610ee767065587006cca868060c01b6110e1565b5b505b505050565b6000610f0567def6e9860ad508e960c01b6110e1565b610f19673a030cae1d937ded60c01b6110e1565b610f2d6766a8e87620041ca260c01b6110e1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b610f786721b40df6734b4e6460c01b61156e565b610f8c677276b6d1bbf7b68b60c01b61156e565b610fa067f8611dbcb55a1f7860c01b61156e565b610fb4676cedf54251a3375160c01b61156e565b610fbc611571565b60040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461104d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110449061204a565b60405180910390fd5b61106167e452355b21bbd41e60c01b61156e565b565b600061107967049762d47eccc99560c01b61020e565b61108d677485aacd7ed494d760c01b61020e565b6110a1670dbb34693527921760c01b61020e565b60007f82ac262a0ca73826b2defa6066a5cbdaefe5f87d412e3568bfc9bec85eaa985790506110da67969465f63fd91b0960c01b61020e565b8091505090565b50565b6110f86739add2da1b0c35d560c01b6110e1565b61110c675c085b526ab8c57b60c01b6110e1565b61112067b3d2dd058c49644760c01b6110e1565b600082141561116f5761113d6705a8046c2df4f5c660c01b6110e1565b6040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611183678ef4e2c97a2bc62860c01b6110e1565b61119767cc697fa1840ca09660c01b6110e1565b6111ab6762088306b7db0d9360c01b6110e1565b8015611253576111c56796660f8106bc366160c01b6110e1565b6111d967fea9b8b23a82a46c60c01b6110e1565b6111ed671ab9f4b32ff9077960c01b6110e1565b81341461123a5761120867de026f7fec4a202a60c01b6110e1565b6040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61124e67deea53e0c61f3eb460c01b6110e1565b61140b565b6112676744732fb2539afe0860c01b6110e1565b61127b6745b5917460c8548c60c01b6110e1565b61128f67b61cda590281d4c760c01b6110e1565b600034146112dc576112ab670406a51ac2aeb89760c01b6110e1565b6040517e3f45b500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6112f06771a45bb6142330f460c01b6110e1565b611304676aed5fceffb1a5b160c01b6110e1565b611318671d42f77a5125292a60c01b6110e1565b6000611323846115ef565b9050611339675f2f73f1308f917760c01b6110e1565b61134d67e372a3dad5ac62de60c01b6110e1565b6113598433308661172f565b61136d67102e84bf56110f4360c01b6110e1565b61138167de23d6438fcaff2e60c01b6110e1565b828161138c866115ef565b6113969190612232565b146113f5576113af67b59535ced511891360c01b6110e1565b6113c367b891075f773c113a60c01b6110e1565b6040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61140967ab2bee94dc1c87d160c01b6110e1565b505b505050565b60008114806114a9575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401611457929190611f06565b60206040518083038186803b15801561146f57600080fd5b505afa158015611483573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a79190611d56565b145b6114e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114df906120ca565b60405180910390fd5b6115698363095ea7b360e01b8484604051602401611507929190611fe4565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506118eb565b505050565b50565b6000611587674f9afbb757d80e6360c01b61156e565b61159b674b823103125da15660c01b61156e565b6115af674ab715c231c1608d60c01b61156e565b60007fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90506115e867982d9bb86701efa860c01b61156e565b8091505090565b600061160567bb6d3fbf241bf67660c01b6110e1565b611619677ba8e1dcf768e44260c01b6110e1565b61162d674fd0fe73cee512ad60c01b6110e1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16148015611679575061167867f6a472cb1776bcb560c01b6119b2565b5b80611694575061169367d904c8f1fbab9d1f60c01b6119bd565b5b611726578173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016116d19190611eeb565b60206040518083038186803b1580156116e957600080fd5b505afa1580156116fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117219190611d56565b611728565b475b9050919050565b61174367ef583e2039c405c960c01b6110e1565b61175767ace174e366a9f4fc60c01b6110e1565b61176b671bb3b9242bb58a1f60c01b6110e1565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156117e6576117b467434f07c0e3d2754a60c01b6110e1565b6040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6117fa679391395d4ba7d68d60c01b6110e1565b61180e671a151b621bcceb6460c01b6110e1565b611822671d62177db93f304360c01b6110e1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561189d5761186b67bfa6da5dd21dbe1f60c01b6110e1565b6040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6118b167971e37aa923e816660c01b6110e1565b6118c5675dd2e235ffab1cbb60c01b6110e1565b6118d9670980a3febde5381660c01b6110e1565b6118e5848484846119c4565b50505050565b600061194d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611a4d9092919063ffffffff16565b90506000815111156119ad578080602001905181019061196d9190611cb1565b6119ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119a3906120aa565b60405180910390fd5b5b505050565b600060019050919050565b6000919050565b611a47846323b872dd60e01b8585856040516024016119e593929190611f2f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506118eb565b50505050565b6060611a5c8484600085611a65565b90509392505050565b606082471015611aaa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aa19061206a565b60405180910390fd5b611ab385611b79565b611af2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ae99061208a565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611b1b9190611ed4565b60006040518083038185875af1925050503d8060008114611b58576040519150601f19603f3d011682016040523d82523d6000602084013e611b5d565b606091505b5091509150611b6d828286611b9c565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315611bac57829050611bfc565b600083511115611bbf5782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bf39190612028565b60405180910390fd5b9392505050565b600081359050611c12816124c4565b92915050565b600081519050611c27816124db565b92915050565b600081359050611c3c816124f2565b92915050565b60006101608284031215611c5557600080fd5b81905092915050565b600081359050611c6d81612509565b92915050565b600081519050611c8281612509565b92915050565b600060208284031215611c9a57600080fd5b6000611ca884828501611c03565b91505092915050565b600060208284031215611cc357600080fd5b6000611cd184828501611c18565b91505092915050565b600060208284031215611cec57600080fd5b6000611cfa84828501611c2d565b91505092915050565b60006101608284031215611d1657600080fd5b6000611d2484828501611c42565b91505092915050565b600060208284031215611d3f57600080fd5b6000611d4d84828501611c5e565b91505092915050565b600060208284031215611d6857600080fd5b6000611d7684828501611c73565b91505092915050565b611d8881612266565b82525050565b611d9781612278565b82525050565b6000611da882612200565b611db28185612216565b9350611dc28185602086016122ec565b80840191505092915050565b611dd7816122da565b82525050565b6000611de88261220b565b611df28185612221565b9350611e028185602086016122ec565b611e0b8161234e565b840191505092915050565b6000611e23602283612221565b9150611e2e8261235f565b604082019050919050565b6000611e46602683612221565b9150611e51826123ae565b604082019050919050565b6000611e69601d83612221565b9150611e74826123fd565b602082019050919050565b6000611e8c602a83612221565b9150611e9782612426565b604082019050919050565b6000611eaf603683612221565b9150611eba82612475565b604082019050919050565b611ece816122d0565b82525050565b6000611ee08284611d9d565b915081905092915050565b6000602082019050611f006000830184611d7f565b92915050565b6000604082019050611f1b6000830185611d7f565b611f286020830184611d7f565b9392505050565b6000606082019050611f446000830186611d7f565b611f516020830185611d7f565b611f5e6040830184611ec5565b949350505050565b600061010082019050611f7c600083018b611d7f565b611f89602083018a611d7f565b611f966040830189611ec5565b611fa36060830188611ec5565b611fb06080830187611ec5565b611fbd60a0830186611ec5565b611fca60c0830185611ec5565b611fd760e0830184611ec5565b9998505050505050505050565b6000604082019050611ff96000830185611d7f565b6120066020830184611ec5565b9392505050565b60006020820190506120226000830184611d8e565b92915050565b600060208201905081810360008301526120428184611ddd565b905092915050565b6000602082019050818103600083015261206381611e16565b9050919050565b6000602082019050818103600083015261208381611e39565b9050919050565b600060208201905081810360008301526120a381611e5c565b9050919050565b600060208201905081810360008301526120c381611e7f565b9050919050565b600060208201905081810360008301526120e381611ea2565b9050919050565b600060e0820190506120ff600083018a611ec5565b61210c6020830189611d7f565b6121196040830188611ec5565b6121266060830187611ec5565b6121336080830186611ec5565b61214060a0830185611d7f565b61214d60c0830184611dce565b98975050505050505050565b60006101008201905061216f600083018b611ec5565b61217c602083018a611d7f565b6121896040830189611ec5565b6121966060830188611ec5565b6121a36080830187611ec5565b6121b060a0830186611ec5565b6121bd60c0830185611ec5565b6121ca60e0830184611ec5565b9998505050505050505050565b60006040820190506121ec6000830185611ec5565b6121f96020830184611ec5565b9392505050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061223d826122d0565b9150612248836122d0565b92508282101561225b5761225a61231f565b5b828203905092915050565b6000612271826122b0565b9050919050565b60008115159050919050565b60007fffffffffffffffff00000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006122e5826122d0565b9050919050565b60005b8381101561230a5780820151818401526020810190506122ef565b83811115612319576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60008201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000602082015250565b6124cd81612266565b81146124d857600080fd5b50565b6124e481612278565b81146124ef57600080fd5b50565b6124fb81612284565b811461250657600080fd5b50565b612512816122d0565b811461251d57600080fd5b5056fea164736f6c6343000804000a";

type HopFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HopFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HopFacet__factory extends ContractFactory {
  constructor(...args: HopFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<HopFacet> {
    return super.deploy(overrides || {}) as Promise<HopFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): HopFacet {
    return super.attach(address) as HopFacet;
  }
  connect(signer: Signer): HopFacet__factory {
    return super.connect(signer) as HopFacet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HopFacetInterface {
    return new utils.Interface(_abi) as HopFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HopFacet {
    return new Contract(address, _abi, signerOrProvider) as HopFacet;
  }
}
