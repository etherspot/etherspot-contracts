/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Contract,
  ContractFactory,
  PayableOverrides,
} from "@ethersproject/contracts";

import type { Account } from "../Account";

export class Account__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: PayableOverrides): Promise<Account> {
    return super.deploy(overrides || {}) as Promise<Account>;
  }
  getDeployTransaction(overrides?: PayableOverrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Account {
    return super.attach(address) as Account;
  }
  connect(signer: Signer): Account__factory {
    return super.connect(signer) as Account__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Account {
    return new Contract(address, _abi, signerOrProvider) as Account;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0x25e5e58c",
        type: "bytes32",
      },
    ],
    name: "c_0x25e5e58c",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0x596a049b",
        type: "bytes32",
      },
    ],
    name: "c_0x596a049b",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeTransaction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526100367f8ae1830ab3e719a43c3d62b4f9124d95e425f4bce2339de8d17828beea69690460001b61011160201b60201c565b6100687fc3986801cce60a125337d39f7aeddf785aab57ef854a080d5bf7bb088886022360001b61011160201b60201c565b61009a7f70d99b25349b019c0f4b6627aecfa9b2ea6aa7f30178b71766adfe1686d9429560001b61011160201b60201c565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061010c7fa9d1d90408ba4b3d23f508dd984797fab322fc66f8d51fe4eee2e0117e4739f560001b61011460201b60201c565b610117565b50565b50565b61077a806101266000396000f3fe6080604052600436106100435760003560e01c80633f579f421461004f578063eec6455f14610178578063f77c4791146101b3578063fa1aba70146101f45761004a565b3661004a57005b600080fd5b34801561005b57600080fd5b506100fd6004803603606081101561007257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156100b957600080fd5b8201836020820111156100cb57600080fd5b803590602001918460018302840111640100000000831117156100ed57600080fd5b909192939192939050505061022f565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013d578082015181840152602081019050610122565b50505050905090810190601f16801561016a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561018457600080fd5b506101b16004803603602081101561019b57600080fd5b8101908080359060200190929190505050610717565b005b3480156101bf57600080fd5b506101c861071a565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561020057600080fd5b5061022d6004803603602081101561021757600080fd5b810190808035906020019092919050505061073e565b005b606061025d7fbbf62d234af27dc796c576ba31ca240226a17eca2ae2ca8ac04cff72fe91f78b60001b610717565b6102897fef39b114ee2d21b1d5fb6311605752dedde62b006e5265a169eb713d548259ff60001b610717565b6102b57f54563e1536af202e16bb32b01016b1d39b427c0048e46eec9012e0338d5ee05760001b610717565b6102e17f3327984a56f7fc9f56ed5aed265b1795a175e4956a4941f7c8b788c85f6c9c7360001b610717565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610385576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610742602c913960400191505060405180910390fd5b6103b17f3bccca882aee2c143871938cf7637765ffbd108026d6683c9c1407e2399db19a60001b610717565b6103dd7f0db185a29507b78b1578de8ebf950c235c945abd32510b7ab8dcd13f25ec13a260001b610717565b6104097fb820627837bba9db16081d61b44eb7ff416e7ef67412a1c644f96282edf0068e60001b61073e565b6104357f3207910f16c291e947ec2ac67163b483e15e3e92ad4be08ac3bca7637558fff060001b61073e565b6104617f6341a9206bbdcd26c3d12107c23642a3465d7047651bbc856fdafffa68fda8a060001b61073e565b606061048f7f50df5098e7db4dd830cc94500c93872a736b58de77275ac37577be9e36378b1460001b61073e565b6104bb7fc538cd74b4df51514ad22607287ed8fed51ada8d703ee1cce639ea1c497b7e8460001b61073e565b60006104e97f3affa9671f5a0ba7e0d23b68aadca1918b75d376ebc7d0a01e65311dad78640460001b61073e565b6105157f13c601e33c454a1544be56c31264f19924c287d58ce5737dd1b13e78ac726a8260001b61073e565b8673ffffffffffffffffffffffffffffffffffffffff1686868660405180838380828437808301925050509250505060006040518083038185875af1925050503d8060008114610581576040519150601f19603f3d011682016040523d82523d6000602084013e610586565b606091505b5080935081925050506105bb7f823007dd29460c6f750a0ee62b6b38556492c06eef6acba1ac0e397e41e222f360001b61073e565b6105e77fb0619bc8226e0bf633d0de945339c31785c76b59c7bb19c30b76ff5e738b4cad60001b61073e565b6106137f83592e5de1ff2a140ec0d036b4106025ccf4cbe0e77747d136613f3224529e2f60001b61073e565b80610686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4163636f756e743a207472616e73616374696f6e20726576657274656400000081525060200191505060405180910390fd5b6106b27f5a369f80afe3872df5a14106df42760c654e2c67a382845a97cce98b50c8223660001b61073e565b6106de7f656dc07b96523a14af6f5ba2c298f9ae7f5812fd0107e2258ff8ef1fd176b31b60001b61073e565b61070a7f0f48b43e2e13b3cda4f725aed4a47f54b8a64388351e9879d6e04b31e760c14060001b61073e565b8192505050949350505050565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5056fe436f6e74726f6c6c65643a206d73672e73656e646572206973206e6f742074686520636f6e74726f6c6c6572a164736f6c634300060c000a";
