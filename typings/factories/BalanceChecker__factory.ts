/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { BalanceChecker } from "../BalanceChecker";

export class BalanceChecker__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<BalanceChecker> {
    return super.deploy(overrides || {}) as Promise<BalanceChecker>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BalanceChecker {
    return super.attach(address) as BalanceChecker;
  }
  connect(signer: Signer): BalanceChecker__factory {
    return super.connect(signer) as BalanceChecker__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BalanceChecker {
    return new Contract(address, _abi, signerOrProvider) as BalanceChecker;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "getBalances",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610505806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063ef5bfc3714610030575b600080fd5b6100f26004803603604081101561004657600080fd5b81019060208101813564010000000081111561006157600080fd5b82018360208201111561007357600080fd5b8035906020019184602083028401116401000000008311171561009557600080fd5b9193909290916020810190356401000000008111156100b357600080fd5b8201836020820111156100c557600080fd5b803590602001918460208302840111640100000000831117156100e757600080fd5b509092509050610142565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561012e578181015183820152602001610116565b505050509050019250505060405180910390f35b60608061014f85846102a4565b67ffffffffffffffff8111801561016557600080fd5b5060405190808252806020026020018201604052801561018f578160200160208202803683370190505b50905060005b8581101561029a5760005b848110156102915760006101be6101b787856102a4565b8390610306565b905060008787848181106101ce57fe5b905060200201356001600160a01b03166001600160a01b0316146102495761022c8989858181106101fb57fe5b905060200201356001600160a01b031688888581811061021757fe5b905060200201356001600160a01b0316610360565b84828151811061023857fe5b602002602001018181525050610288565b88888481811061025557fe5b905060200201356001600160a01b03166001600160a01b03163184828151811061027b57fe5b6020026020010181815250505b506001016101a0565b50600101610195565b5095945050505050565b6000826102b357506000610300565b828202828482816102c057fe5b04146102fd5760405162461bcd60e51b81526004018080602001828103825260248152602001806104d56024913960400191505060405180910390fd5b90505b92915050565b6000828201838110156102fd576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174684c69623a206164646974696f6e206f766572666c6f770000604482015290519081900360640190fd5b600080823b80156104cc57604080516001600160a01b0387811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b17815292518251600094928916939282918083835b602083106103df5780518252601f1990920191602091820191016103c0565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d806000811461043f576040519150601f19603f3d011682016040523d82523d6000602084013e610444565b606091505b5050905080156104ca57846001600160a01b03166370a08231876040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561049b57600080fd5b505afa1580156104af573d6000803e3d6000fd5b505050506040513d60208110156104c557600080fd5b505192505b505b50939250505056fe536166654d6174684c69623a206d756c7469706c69636174696f6e206f766572666c6f77a164736f6c634300060c000a";
