/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AccountImplementationV1Mock,
  AccountImplementationV1MockInterface,
} from "../AccountImplementationV1Mock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "registry_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "initializer",
        type: "address",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__098c0657",
        type: "bytes8",
      },
    ],
    name: "c_098c0657",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__28344ffb",
        type: "bytes8",
      },
    ],
    name: "c_28344ffb",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__2860b96a",
        type: "bytes8",
      },
    ],
    name: "c_2860b96a",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__3fd0a446",
        type: "bytes8",
      },
    ],
    name: "c_3fd0a446",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__098c0657",
        type: "bytes8",
      },
    ],
    name: "c_false098c0657",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__28344ffb",
        type: "bytes8",
      },
    ],
    name: "c_false28344ffb",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__2860b96a",
        type: "bytes8",
      },
    ],
    name: "c_false2860b96a",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__3fd0a446",
        type: "bytes8",
      },
    ],
    name: "c_false3fd0a446",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__098c0657",
        type: "bytes8",
      },
    ],
    name: "c_true098c0657",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__28344ffb",
        type: "bytes8",
      },
    ],
    name: "c_true28344ffb",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__2860b96a",
        type: "bytes8",
      },
    ],
    name: "c_true2860b96a",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__3fd0a446",
        type: "bytes8",
      },
    ],
    name: "c_true3fd0a446",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "interfaceHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "canImplementInterfaceForAddress",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registry_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "messageHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "tokensReceived",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620016b4380380620016b4833981810160405260208110156200003757600080fd5b81019080805190602001909291905050506200006467bcc9be562f8a4b0a60c01b6200015c60201b60201c565b6200008067579ae7209daca85260c01b6200015c60201b60201c565b326000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000dc6729f26e2a831f76bd60c01b6200015f60201b60201c565b620000f8671839dd99ec0e261160c01b6200016260201b60201c565b620001146786d4d79b1474ba0960c01b6200016260201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000165565b50565b50565b50565b61153f80620001756000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c806344f9c9ec116100b8578063b8919b571161007c578063b8919b5714610876578063c4543305146108d5578063c4d66de814610934578063d84fa10c14610978578063e49ef2a8146109d7578063f23a6e6114610a3657610136565b806344f9c9ec146106f25780635a8f0675146107515780637b103999146107b0578063a42ea708146107e4578063b851f6f91461082d57610136565b806320c13b0b116100ff57806320c13b0b146104c7578063221523e5146105c8578063249cb3fa14610627578063392e53cd146106895780633e260b13146106a957610136565b806223de291461013b5780630effa61f14610273578063150b7a02146102d25780631626ba7e146103c85780631ac0e7171461047e575b600080fd5b610271600480360360c081101561015157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156101d857600080fd5b8201836020820111156101ea57600080fd5b8035906020019184600183028401116401000000008311171561020c57600080fd5b90919293919293908035906020019064010000000081111561022d57600080fd5b82018360208201111561023f57600080fd5b8035906020019184600183028401116401000000008311171561026157600080fd5b9091929391929390505050610b36565b005b6102ba6004803603602081101561028957600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610b54565b60405180821515815260200191505060405180910390f35b610393600480360360808110156102e857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561034f57600080fd5b82018360208201111561036157600080fd5b8035906020019184600183028401116401000000008311171561038357600080fd5b9091929391929390505050610b5f565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b610449600480360360408110156103de57600080fd5b81019080803590602001909291908035906020019064010000000081111561040557600080fd5b82018360208201111561041757600080fd5b8035906020019184600183028401116401000000008311171561043957600080fd5b9091929391929390505050610bb0565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b6104c56004803603602081101561049457600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610d87565b005b610593600480360360408110156104dd57600080fd5b81019080803590602001906401000000008111156104fa57600080fd5b82018360208201111561050c57600080fd5b8035906020019184600183028401116401000000008311171561052e57600080fd5b90919293919293908035906020019064010000000081111561054f57600080fd5b82018360208201111561056157600080fd5b8035906020019184600183028401116401000000008311171561058357600080fd5b9091929391929390505050610d8a565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b61060f600480360360208110156105de57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610f8e565b60405180821515815260200191505060405180910390f35b6106736004803603604081101561063d57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f95565b6040518082815260200191505060405180910390f35b61069161113f565b60405180821515815260200191505060405180910390f35b6106f0600480360360208110156106bf57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506111d2565b005b6107396004803603602081101561070857600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506111d5565b60405180821515815260200191505060405180910390f35b6107986004803603602081101561076757600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506111e0565b60405180821515815260200191505060405180910390f35b6107b86111eb565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61082b600480360360208110156107fa57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050611211565b005b6108746004803603602081101561084357600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050611214565b005b6108bd6004803603602081101561088c57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050611217565b60405180821515815260200191505060405180910390f35b61091c600480360360208110156108eb57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505061121e565b60405180821515815260200191505060405180910390f35b6109766004803603602081101561094a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611229565b005b6109bf6004803603602081101561098e57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506114a3565b60405180821515815260200191505060405180910390f35b610a1e600480360360208110156109ed57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506114aa565b60405180821515815260200191505060405180910390f35b610b01600480360360a0811015610a4c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190640100000000811115610abd57600080fd5b820183602082011115610acf57600080fd5b80359060200191846001830284011164010000000083111715610af157600080fd5b90919293919293905050506114b1565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b610b4a67ce47c0f946eadb1860c01b611214565b5050505050505050565b600060019050919050565b6000610b7567b827fecf1e33001460c01b611214565b610b8967b3558d27713bcbc360c01b611214565b610b9d67ca5809ab03b36cc360c01b611214565b63150b7a0260e01b905095945050505050565b6000610bc667d15cb231db01bd9560c01b611214565b610bda67cf444c026e53d2b560c01b611214565b610bee67feb865187e703ce360c01b611214565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e1e382ce308686866040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff168152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b158015610cb357600080fd5b505afa158015610cc7573d6000803e3d6000fd5b505050506040513d6020811015610cdd57600080fd5b81019080805190602001909291905050508015610d0a5750610d0967dcb61cbea4e09a8a60c01b610b54565b5b80610d255750610d2467597b2a0b23f7987b60c01b611217565b5b610d365763ffffffff60e01b610d7e565b60405160200180807f697356616c69645369676e617475726528627974657333322c62797465732900815250601f019050604051602081830303815290604052805190602001205b90509392505050565b50565b6000610da0679d53a108f4152ee460c01b611214565b610db4678f46380630213e2760c01b611214565b610dc8670444693b6dda2f5360c01b611214565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663124e9eb330878787876040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff16815260200180602001806020018381038352878782818152602001925080828437600081840152601f19601f8201169050808301925050508381038252858582818152602001925080828437600081840152601f19601f82011690508083019250505097505050505050505060206040518083038186803b158015610eb957600080fd5b505afa158015610ecd573d6000803e3d6000fd5b505050506040513d6020811015610ee357600080fd5b81019080805190602001909291905050508015610f105750610f0f67597e334f5a972f1e60c01b610b54565b5b80610f2b5750610f2a67624be475bd07a4c360c01b611217565b5b610f3c5763ffffffff60e01b610f84565b60405160200180807f697356616c69645369676e61747572652862797465732c627974657329000000815250601d019050604051602081830303815290604052805190602001205b9050949350505050565b6000919050565b6000610fab674fa492bc3d866f9660c01b611214565b610fbf67f11658511bdad90960c01b611214565b610fd367aea7b4d1358b312860c01b611214565b6000610fe967c7d74f3aaa7aa17a60c01b611214565b610ffd670b029f119a0e101260c01b611214565b60405160200180807f455243373737546f6b656e73526563697069656e7400000000000000000000008152506015019050604051602081830303815290604052805190602001208414801561107d57503073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b156110f85761109667159f49977ceb711e60c01b611214565b6110aa67a1697c883c2b4d5f60c01b611214565b60405160200180807f455243313832305f4143434550545f4d41474943000000000000000000000000815250601401905060405160208183030381529060405280519060200120905061110d565b61110c6740bc089d08a45f7660c01b611214565b5b611121675edb1ebe087f56d760c01b611214565b61113567b6341297d7ddf48460c01b611214565b8091505092915050565b600061115567e29fe2f351ca6b2760c01b6111d2565b611169676f5dd3f08b97747760c01b6111d2565b61117d673a9488d62818322a60c01b6111d2565b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905090565b50565b600060019050919050565b600060019050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b50565b50565b6000919050565b600060019050919050565b61123d678fa2e2799025577f60c01b611214565b61125167d2ba19feb39e0b7f60c01b6111d2565b611265670c5ad53cdb9edd1560c01b6111d2565b61127967b6b588d2ebb9ae6960c01b6111d2565b61128d67c4ec9a90a885875260c01b6111d2565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614611331576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180611504602f913960400191505060405180910390fd5b61134567c3785ba1534db95460c01b6111d2565b61135967e4202927591248ef60c01b6111d2565b60008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506113ae67531cfa2817fbdc8660c01b6111d2565b6113c2670fe7483554c7d7f060c01b611214565b6113d6671ba251afbdd08eb960c01b611214565b6113ea67e4b4698cdfd724ee60c01b611214565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061143f6701520f419008b58e60c01b6111d2565b6114536775364c04848b013b60c01b6111d2565b7f908408e307fc569b417f6cbec5d5a06f44a0a505ac0479b47d421a4b2fd6a1e632604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000919050565b6000919050565b60006114c76773b65ea4d003e8c060c01b611214565b6114db67efee7b06625db93660c01b611214565b6114ef6733114e923245121260c01b611214565b63f23a6e6160e01b9050969550505050505056fe496e697469616c697a61626c653a2074782e6f726967696e206973206e6f742074686520696e697469616c697a6572a164736f6c634300060c000a";

type AccountImplementationV1MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccountImplementationV1MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccountImplementationV1Mock__factory extends ContractFactory {
  constructor(...args: AccountImplementationV1MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    registry_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AccountImplementationV1Mock> {
    return super.deploy(
      registry_,
      overrides || {}
    ) as Promise<AccountImplementationV1Mock>;
  }
  getDeployTransaction(
    registry_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(registry_, overrides || {});
  }
  attach(address: string): AccountImplementationV1Mock {
    return super.attach(address) as AccountImplementationV1Mock;
  }
  connect(signer: Signer): AccountImplementationV1Mock__factory {
    return super.connect(signer) as AccountImplementationV1Mock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountImplementationV1MockInterface {
    return new utils.Interface(_abi) as AccountImplementationV1MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccountImplementationV1Mock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AccountImplementationV1Mock;
  }
}
