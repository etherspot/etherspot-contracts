/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GuardedMock, GuardedMockInterface } from "../GuardedMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "guardians_",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "guardian",
        type: "address",
      },
    ],
    name: "GuardianAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "guardian",
        type: "address",
      },
    ],
    name: "GuardianRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guardian",
        type: "address",
      },
    ],
    name: "addGuardian",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__0ffe16b4",
        type: "bytes8",
      },
    ],
    name: "c_0ffe16b4",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__9fb0db2e",
        type: "bytes8",
      },
    ],
    name: "c_9fb0db2e",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__0ffe16b4",
        type: "bytes8",
      },
    ],
    name: "c_false0ffe16b4",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__9fb0db2e",
        type: "bytes8",
      },
    ],
    name: "c_false9fb0db2e",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__0ffe16b4",
        type: "bytes8",
      },
    ],
    name: "c_true0ffe16b4",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__9fb0db2e",
        type: "bytes8",
      },
    ],
    name: "c_true9fb0db2e",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guardian",
        type: "address",
      },
    ],
    name: "isGuardian",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guardian",
        type: "address",
      },
    ],
    name: "removeGuardian",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "messageHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verifyGuardianSignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200196538038062001965833981810160405260208110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660208202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019060200280838360005b83811015620000c6578082015181840152602081019050620000a9565b50505050905001604052505050620000ef67cac0dc68f7cb855960c01b6200015b60201b60201c565b6200010b67752756120f8c590860c01b6200015e60201b60201c565b620001276774872df4c87f30a960c01b6200015e60201b60201c565b62000143678f1099fa498637b160c01b6200015e60201b60201c565b62000154816200016160201b60201c565b50620006b3565b50565b50565b6200017d67ea6659a67554377560c01b6200015b60201b60201c565b62000199673f57bc1d84bc70c560c01b6200015b60201b60201c565b620001b5671844b355b66a453760c01b6200015b60201b60201c565b6000815114156200022b57620001dc6787d11e8f796f3ebc60c01b6200015b60201b60201c565b620001f8670e9dd83a3af8e95860c01b6200015b60201b60201c565b62000214672ea5c88aefc1785060c01b6200015b60201b60201c565b62000225326200033a60201b60201c565b62000337565b6200024767bb31dc4d5f5f4ac860c01b6200015b60201b60201c565b62000263679bee217b20e2207b60c01b6200015b60201b60201c565b6200027f675b9ad81f6086459160c01b6200015b60201b60201c565b600081519050620002a167324e7178768e62a760c01b6200015b60201b60201c565b620002bd6770fc86bc922e649160c01b6200015b60201b60201c565b60005b818110156200033457620002e56720b064839ce17c0c60c01b6200015b60201b60201c565b6200030167be025102fa8957b060c01b6200015b60201b60201c565b620003268382815181106200031257fe5b60200260200101516200033a60201b60201c565b8080600101915050620002c0565b50505b50565b620003566787c6ba160fdcbcc960c01b6200015b60201b60201c565b62000372670af3052235812df860c01b6200015b60201b60201c565b6200038e676abd6987875e59dd60c01b6200015b60201b60201c565b620003aa67e10dc39bcbaabf2f60c01b6200015b60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200044e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f477561726465643a2063616e6e6f74206164642030783020677561726469616e81525060200191505060405180910390fd5b6200046a6716396074aa13c44c60c01b6200015b60201b60201c565b620004866715ced25ada1990da60c01b6200015b60201b60201c565b620004a26792ed078530acc19160c01b6200015b60201b60201c565b620004be67200e0e06d2f3ae3e60c01b6200015b60201b60201c565b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156200057e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f477561726465643a20677561726469616e20616c72656164792065786973747381525060200191505060405180910390fd5b6200059a67d731f063ae4f6b1160c01b6200015b60201b60201c565b620005b66782528510c123ffea60c01b6200015b60201b60201c565b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620006296733e2d1a69fe92b2f60c01b6200015b60201b60201c565b6200064567fcfdd6789abca2ce60c01b6200015b60201b60201c565b7fbc3292102fa77e083913064b282926717cdfaede4d35f553d66366c0a3da755a3282604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b6112a280620006c36000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80637f182d74116100665780637f182d7414610232578063a4db4b6b14610291578063a526d83b146102f0578063c1cad69e14610334578063d0f710d6146103935761009e565b80630c68ba21146100a357806315588bcd146100fd5780635405622e146101465780635fd4b9371461018f57806371404156146101ee575b600080fd5b6100e5600480360360208110156100b957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061042c565b60405180821515815260200191505060405180910390f35b6101446004803603602081101561011357600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506104bd565b005b61018d6004803603602081101561015c57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506104c0565b005b6101d6600480360360208110156101a557600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506104c3565b60405180821515815260200191505060405180910390f35b6102306004803603602081101561020457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104ce565b005b6102796004803603602081101561024857600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610924565b60405180821515815260200191505060405180910390f35b6102d8600480360360208110156102a757600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505061092b565b60405180821515815260200191505060405180910390f35b6103326004803603602081101561030657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610936565b005b61037b6004803603602081101561034a57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610abf565b60405180821515815260200191505060405180910390f35b610414600480360360408110156103a957600080fd5b8101908080359060200190929190803590602001906401000000008111156103d057600080fd5b8201836020820111156103e257600080fd5b8035906020019184600183028401116401000000008311171561040457600080fd5b9091929391929390505050610ac6565b60405180821515815260200191505060405180910390f35b6000610442677440efdd3ec50f3960c01b6104c0565b61045667be7fafe5532c86cd60c01b6104c0565b61046a67ad3a056851daffa960c01b6104c0565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b50565b50565b600060019050919050565b6104e267f9644ff5e35fcd5560c01b6104c0565b6104f6673140390e5e09720560c01b6104c0565b61050a679a930a1e29b657f960c01b6104c0565b61051e6713d0baae263dfefa60c01b6104c0565b6105326738eceab2adca511260c01b6104c0565b6000803273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166105d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806112706026913960400191505060405180910390fd5b6105e767ca80fb733a0cf30e60c01b6104c0565b6105fb67595eae6a0eab3fd360c01b6104c0565b61060f6784de5589af77308860c01b6104c0565b61062367a7bc68185a734e0e60c01b6104c0565b610637676dd563da51888dfa60c01b6104c0565b61064b673ebb9819b4252d2d60c01b6104c0565b61065f6753782ccab7c6c9bc60c01b6104c0565b8073ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff161415610701576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f477561726465643a2063616e6e6f742072656d6f76652073656c66000000000081525060200191505060405180910390fd5b6107156727a162bfc3f5a9e460c01b6104c0565b6107296710353db3bff3c4b160c01b6104c0565b61073d67672993dda327b98560c01b6104c0565b610751677ac342f4f0a6362a60c01b6104c0565b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661080f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f477561726465643a20677561726469616e20646f65736e27742065786973740081525060200191505060405180910390fd5b61082367ebaa7d6908ea52ea60c01b6104c0565b6108376702e2ed9df6733c7f60c01b6104c0565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506108a267f54cd4685571295c60c01b6104c0565b6108b6676f0cfcbd11656ced60c01b6104c0565b7fee943cdb81826d5909c559c6b1ae6908fcaf2dbc16c4b730346736b486283e8b3282604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b6000919050565b600060019050919050565b61094a67d094de4125d4cc4560c01b6104c0565b61095e673140390e5e09720560c01b6104c0565b610972679a930a1e29b657f960c01b6104c0565b6109866713d0baae263dfefa60c01b6104c0565b61099a6738eceab2adca511260c01b6104c0565b6000803273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610a3b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806112706026913960400191505060405180910390fd5b610a4f67ca80fb733a0cf30e60c01b6104c0565b610a6367595eae6a0eab3fd360c01b6104c0565b610a77676bc4fc420671443160c01b6104c0565b610a8b67ddb3300d52f8183f60c01b6104c0565b610a9f6780bf12055928522f60c01b6104c0565b610ab3672dbcb5811d66550160c01b6104c0565b610abc81610b5b565b50565b6000919050565b6000610adc67e06ee7e2292f91d760c01b6104c0565b610af0674f36bceb0078b8c660c01b6104c0565b610b0467eacf6133da2848ce60c01b6104c0565b610b528484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610e72565b90509392505050565b610b6f6787c6ba160fdcbcc960c01b6104c0565b610b83670af3052235812df860c01b6104c0565b610b97676abd6987875e59dd60c01b6104c0565b610bab67e10dc39bcbaabf2f60c01b6104c0565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c4e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f477561726465643a2063616e6e6f74206164642030783020677561726469616e81525060200191505060405180910390fd5b610c626716396074aa13c44c60c01b6104c0565b610c766715ced25ada1990da60c01b6104c0565b610c8a6792ed078530acc19160c01b6104c0565b610c9e67200e0e06d2f3ae3e60c01b6104c0565b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610d5d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f477561726465643a20677561726469616e20616c72656164792065786973747381525060200191505060405180910390fd5b610d7167d731f063ae4f6b1160c01b6104c0565b610d856782528510c123ffea60c01b6104c0565b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610df06733e2d1a69fe92b2f60c01b6104c0565b610e0467fcfdd6789abca2ce60c01b6104c0565b7fbc3292102fa77e083913064b282926717cdfaede4d35f553d66366c0a3da755a3282604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b6000610e8867c413be33cede683c60c01b6104c0565b610e9c67aab9e66231391cdd60c01b6104c0565b610eb067c5aa5b73c63f34ca60c01b6104c0565b6000610ec58385610f4490919063ffffffff16565b9050610edb67cc71125efbe5c81560c01b6104c0565b610eef67716e9880163b9ce860c01b6104c0565b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b6000610f5a67a7d1b72465578cb660c01b611261565b610f6e6766b1ecb2b7a10d5b60c01b611261565b610f82679d3ace2dfb9870a460c01b611261565b6000610f98670d54dc48819ca7d660c01b611261565b610fac6739799aef7a5b8a9860c01b611261565b60418351141561121a57610fca67f5894b14d45360cb60c01b611261565b610fde67121e6bf9d969d4c660c01b611261565b610ff2675a79672778abc9ff60c01b611261565b6000611008676793c86a9af5dbba60c01b611261565b61101c67090369452f75790a60c01b611261565b60006110326778fd61ee19efbc5960c01b611261565b61104667fdd839914abecb7e60c01b611261565b600061105c67e4e7fec31e292cff60c01b611261565b6020860151925060408601519150606086015160001a90506110886733522a9152422c9960c01b611261565b61109c6781737d4a582627e660c01b611261565b601b8160ff1610156110db576110bc67ba99160947ce2a7860c01b611261565b6110d067bda5d012d6789ab760c01b611261565b601b810190506110f0565b6110ef67151d688c2807546860c01b611261565b5b6111046719fdb35078ee4f3c60c01b611261565b611118676f017cd3596d56dc60c01b611261565b601b8160ff1614801561113b575061113a67b15ac16fa8be67c560c01b611264565b5b806111655750601c8160ff16148015611164575061116367092bc9c83cdc070260c01b611264565b5b5b156111fd5761117e67d110be92a8ae591e60c01b611261565b611192674c97edc98e34cf4560c01b611261565b60018782858560405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156111ec573d6000803e3d6000fd5b505050602060405103519350611212565b6112116744918d4e3d03bb9c60c01b611261565b5b50505061122f565b61122e674d8a5e0ff772c62460c01b611261565b5b61124367a0ef2082f192617760c01b611261565b61125767ad98f58f1b4ee68d60c01b611261565b8091505092915050565b50565b60006001905091905056fe477561726465643a2074782e6f726967696e206973206e6f742074686520677561726469616ea164736f6c634300060c000a";

type GuardedMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GuardedMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GuardedMock__factory extends ContractFactory {
  constructor(...args: GuardedMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    guardians_: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GuardedMock> {
    return super.deploy(guardians_, overrides || {}) as Promise<GuardedMock>;
  }
  getDeployTransaction(
    guardians_: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(guardians_, overrides || {});
  }
  attach(address: string): GuardedMock {
    return super.attach(address) as GuardedMock;
  }
  connect(signer: Signer): GuardedMock__factory {
    return super.connect(signer) as GuardedMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GuardedMockInterface {
    return new utils.Interface(_abi) as GuardedMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GuardedMock {
    return new Contract(address, _abi, signerOrProvider) as GuardedMock;
  }
}
