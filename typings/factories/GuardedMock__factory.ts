/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GuardedMock, GuardedMockInterface } from "../GuardedMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "guardians_",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "guardian",
        type: "address",
      },
    ],
    name: "GuardianAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "guardian",
        type: "address",
      },
    ],
    name: "GuardianRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guardian",
        type: "address",
      },
    ],
    name: "addGuardian",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__0ffe16b4",
        type: "bytes8",
      },
    ],
    name: "c_0ffe16b4",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__9fb0db2e",
        type: "bytes8",
      },
    ],
    name: "c_9fb0db2e",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__0ffe16b4",
        type: "bytes8",
      },
    ],
    name: "c_false0ffe16b4",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__9fb0db2e",
        type: "bytes8",
      },
    ],
    name: "c_false9fb0db2e",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__0ffe16b4",
        type: "bytes8",
      },
    ],
    name: "c_true0ffe16b4",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__9fb0db2e",
        type: "bytes8",
      },
    ],
    name: "c_true9fb0db2e",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guardian",
        type: "address",
      },
    ],
    name: "isGuardian",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guardian",
        type: "address",
      },
    ],
    name: "removeGuardian",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "messageHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verifyGuardianSignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200196438038062001964833981810160405260208110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660208202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019060200280838360005b83811015620000c6578082015181840152602081019050620000a9565b50505050905001604052505050620000ef67e4182926f2998e2e60c01b6200015b60201b60201c565b6200010b67fbe3b30ed3df440960c01b6200015e60201b60201c565b62000127671580c797239431b560c01b6200015e60201b60201c565b6200014367372905d345330b6760c01b6200015e60201b60201c565b62000154816200016160201b60201c565b50620006b3565b50565b50565b6200017d678da7ec38a2ce7b5460c01b6200015b60201b60201c565b620001996735e17b9212dd5aa560c01b6200015b60201b60201c565b620001b567aee748f088e665ff60c01b6200015b60201b60201c565b6000815114156200022b57620001dc67f1b977514e06d6ec60c01b6200015b60201b60201c565b620001f867246d9b20f61a2c7060c01b6200015b60201b60201c565b6200021467b0140aff1a51a88460c01b6200015b60201b60201c565b62000225326200033a60201b60201c565b62000337565b62000247673bbca7f2af47981f60c01b6200015b60201b60201c565b62000263677ce04423f50d9aa560c01b6200015b60201b60201c565b6200027f674f94a445d27b292360c01b6200015b60201b60201c565b600081519050620002a167b464ad0e2dfc622d60c01b6200015b60201b60201c565b620002bd675259874965568d7360c01b6200015b60201b60201c565b60005b818110156200033457620002e56787c98506eba6e7f460c01b6200015b60201b60201c565b62000301674ca430d71f82feb760c01b6200015b60201b60201c565b620003268382815181106200031257fe5b60200260200101516200033a60201b60201c565b8080600101915050620002c0565b50505b50565b6200035667f65b93de862ebbb760c01b6200015b60201b60201c565b6200037267aa647d61fc6ef91160c01b6200015b60201b60201c565b6200038e67ad9a5a517ee3870f60c01b6200015b60201b60201c565b620003aa6756b48614f1a13b7760c01b6200015b60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200044e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f477561726465643a2063616e6e6f74206164642030783020677561726469616e81525060200191505060405180910390fd5b6200046a6702e33590863478fd60c01b6200015b60201b60201c565b6200048667ddc1872f8ab92daf60c01b6200015b60201b60201c565b620004a2673abc31a91fe568fb60c01b6200015b60201b60201c565b620004be67a10033962d34182960c01b6200015b60201b60201c565b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156200057e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f477561726465643a20677561726469616e20616c72656164792065786973747381525060200191505060405180910390fd5b6200059a67077620d6fcfbfb7560c01b6200015b60201b60201c565b620005b667e85030ecd37db18d60c01b6200015b60201b60201c565b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506200062967aabb31e67d7c312160c01b6200015b60201b60201c565b6200064567fd2bdd152b51cb5c60c01b6200015b60201b60201c565b7fbc3292102fa77e083913064b282926717cdfaede4d35f553d66366c0a3da755a3282604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b6112a180620006c36000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80637f182d74116100665780637f182d7414610232578063a4db4b6b14610291578063a526d83b146102f0578063c1cad69e14610334578063d0f710d6146103935761009e565b80630c68ba21146100a357806315588bcd146100fd5780635405622e146101465780635fd4b9371461018f57806371404156146101ee575b600080fd5b6100e5600480360360208110156100b957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061042c565b60405180821515815260200191505060405180910390f35b6101446004803603602081101561011357600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506104bd565b005b61018d6004803603602081101561015c57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506104c0565b005b6101d6600480360360208110156101a557600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506104c3565b60405180821515815260200191505060405180910390f35b6102306004803603602081101561020457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104ce565b005b6102796004803603602081101561024857600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610924565b60405180821515815260200191505060405180910390f35b6102d8600480360360208110156102a757600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505061092b565b60405180821515815260200191505060405180910390f35b6103326004803603602081101561030657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610936565b005b61037b6004803603602081101561034a57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610abf565b60405180821515815260200191505060405180910390f35b610414600480360360408110156103a957600080fd5b8101908080359060200190929190803590602001906401000000008111156103d057600080fd5b8201836020820111156103e257600080fd5b8035906020019184600183028401116401000000008311171561040457600080fd5b9091929391929390505050610ac6565b60405180821515815260200191505060405180910390f35b600061044267a9a1f991398c14f060c01b6104c0565b61045667c57bae75bdea93e560c01b6104c0565b61046a6773d8acd1ac33ece460c01b6104c0565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b50565b50565b600060019050919050565b6104e267e053295a377bc81560c01b6104c0565b6104f667d2c29ef13b805ccb60c01b6104c0565b61050a67623eca7ba38e838260c01b6104c0565b61051e6723fb90b9db18499560c01b6104c0565b61053267d3ce94283a69a5e360c01b6104c0565b6000803273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166105d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061126f6026913960400191505060405180910390fd5b6105e767c9850be77c9514e060c01b6104c0565b6105fb6785b6ada70a70c80f60c01b6104c0565b61060f6744c683030aa42fc760c01b6104c0565b6106236749cdfb9afb49042160c01b6104c0565b61063767d14515cec6df5eaf60c01b6104c0565b61064b67fae595354cb0f0ee60c01b6104c0565b61065f6713dec1df48d41b3c60c01b6104c0565b8073ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff161415610701576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f477561726465643a2063616e6e6f742072656d6f76652073656c66000000000081525060200191505060405180910390fd5b61071567a9c036c94cd54edc60c01b6104c0565b6107296763f6695639916c6e60c01b6104c0565b61073d67b0a79d5adabc3b5b60c01b6104c0565b61075167b600d829ed1153c060c01b6104c0565b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661080f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f477561726465643a20677561726469616e20646f65736e27742065786973740081525060200191505060405180910390fd5b610823674029e73f004e4ecc60c01b6104c0565b610837672ed33cd7b187417b60c01b6104c0565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506108a26749938a384c2ceb6860c01b6104c0565b6108b6674d20265a5c483ab460c01b6104c0565b7fee943cdb81826d5909c559c6b1ae6908fcaf2dbc16c4b730346736b486283e8b3282604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b6000919050565b600060019050919050565b61094a67676e9566cc8e513560c01b6104c0565b61095e67d2c29ef13b805ccb60c01b6104c0565b61097267623eca7ba38e838260c01b6104c0565b6109866723fb90b9db18499560c01b6104c0565b61099a67d3ce94283a69a5e360c01b6104c0565b6000803273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610a3b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061126f6026913960400191505060405180910390fd5b610a4f67c9850be77c9514e060c01b6104c0565b610a636785b6ada70a70c80f60c01b6104c0565b610a77674e23c8ed74539bb760c01b6104c0565b610a8b67959eff609d24b8da60c01b6104c0565b610a9f671687f63f7d071f0a60c01b6104c0565b610ab367125f211dc364ece160c01b6104c0565b610abc81610b5b565b50565b6000919050565b6000610adc67a793ccf70eef8a0560c01b6104c0565b610af0676aa7f30eac16e53860c01b6104c0565b610b04674a73c9ff6ac4de1e60c01b6104c0565b610b528484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610e72565b90509392505050565b610b6f67f65b93de862ebbb760c01b6104c0565b610b8367aa647d61fc6ef91160c01b6104c0565b610b9767ad9a5a517ee3870f60c01b6104c0565b610bab6756b48614f1a13b7760c01b6104c0565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c4e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f477561726465643a2063616e6e6f74206164642030783020677561726469616e81525060200191505060405180910390fd5b610c626702e33590863478fd60c01b6104c0565b610c7667ddc1872f8ab92daf60c01b6104c0565b610c8a673abc31a91fe568fb60c01b6104c0565b610c9e67a10033962d34182960c01b6104c0565b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610d5d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f477561726465643a20677561726469616e20616c72656164792065786973747381525060200191505060405180910390fd5b610d7167077620d6fcfbfb7560c01b6104c0565b610d8567e85030ecd37db18d60c01b6104c0565b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610df067aabb31e67d7c312160c01b6104c0565b610e0467fd2bdd152b51cb5c60c01b6104c0565b7fbc3292102fa77e083913064b282926717cdfaede4d35f553d66366c0a3da755a3282604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b6000610e88674a9a42792ffe0a1d60c01b6104c0565b610e9c67526179c808a7370c60c01b6104c0565b610eb0677dd49387f02ed72e60c01b6104c0565b6000610ec58385610f4490919063ffffffff16565b9050610edb679314107d128b1f0260c01b6104c0565b610eef671c43e63cea00f45a60c01b6104c0565b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b6000610f5a67e710cfd691944ecc60c01b611260565b610f6e670294e6bd98a0f62d60c01b611260565b610f82672ab65f4f031e9def60c01b611260565b6000610f9867c6d253441a2ce96960c01b611260565b610fac67d507789c27b9728c60c01b611260565b60418351141561121957610fca67c2aeb0e1af675d5460c01b611260565b610fde67132cb9b7d0d6e6fb60c01b611260565b610ff26733531d442010362560c01b611260565b600061100867fad8c7fceb31964660c01b611260565b61101c67efaa9aab96f45ecf60c01b611260565b600061103267a62978cc94671abb60c01b611260565b6110466760b909685737ef6860c01b611260565b600061105c678e8a4f44537e79e560c01b611260565b6020860151925060408601519150606086015160001a905061108867284a83339c1f2f7260c01b611260565b61109c6737f23b19123b98a560c01b611260565b601b8160ff1610156110db576110bc6740c617d25322a1e960c01b611260565b6110d067f2fa807318960d7060c01b611260565b601b810190506110f0565b6110ef67bf9557648bed897660c01b611260565b5b61110467d900a81b8b38110a60c01b611260565b61111867c7a42d5f693bb07560c01b611260565b601b8160ff1614801561113b575061113a67c15d680a0d1bdf9b60c01b611263565b5b806111655750601c8160ff161480156111645750611163672aeb3fb673e7536760c01b611263565b5b5b156111fc5761117e675c8ff17285f13d9760c01b611260565b61119166751e47d6c1350a60c01b611260565b60018782858560405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156111eb573d6000803e3d6000fd5b505050602060405103519350611211565b611210673685a6bcd969a27360c01b611260565b5b50505061122e565b61122d67b007f12c841b69c460c01b611260565b5b6112426708a35a687b2ffbcd60c01b611260565b611256675e1719d1223e5f0a60c01b611260565b8091505092915050565b50565b60006001905091905056fe477561726465643a2074782e6f726967696e206973206e6f742074686520677561726469616ea164736f6c634300060c000a";

type GuardedMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GuardedMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GuardedMock__factory extends ContractFactory {
  constructor(...args: GuardedMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    guardians_: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GuardedMock> {
    return super.deploy(guardians_, overrides || {}) as Promise<GuardedMock>;
  }
  getDeployTransaction(
    guardians_: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(guardians_, overrides || {});
  }
  attach(address: string): GuardedMock {
    return super.attach(address) as GuardedMock;
  }
  connect(signer: Signer): GuardedMock__factory {
    return super.connect(signer) as GuardedMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GuardedMockInterface {
    return new utils.Interface(_abi) as GuardedMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GuardedMock {
    return new Contract(address, _abi, signerOrProvider) as GuardedMock;
  }
}
