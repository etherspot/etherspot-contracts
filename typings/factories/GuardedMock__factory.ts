/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GuardedMock, GuardedMockInterface } from "../GuardedMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "guardians_",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "guardian",
        type: "address",
      },
    ],
    name: "GuardianAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "guardian",
        type: "address",
      },
    ],
    name: "GuardianRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guardian",
        type: "address",
      },
    ],
    name: "addGuardian",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__0ffe16b4",
        type: "bytes8",
      },
    ],
    name: "c_0ffe16b4",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__9fb0db2e",
        type: "bytes8",
      },
    ],
    name: "c_9fb0db2e",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__0ffe16b4",
        type: "bytes8",
      },
    ],
    name: "c_false0ffe16b4",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__9fb0db2e",
        type: "bytes8",
      },
    ],
    name: "c_false9fb0db2e",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__0ffe16b4",
        type: "bytes8",
      },
    ],
    name: "c_true0ffe16b4",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__9fb0db2e",
        type: "bytes8",
      },
    ],
    name: "c_true9fb0db2e",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guardian",
        type: "address",
      },
    ],
    name: "isGuardian",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guardian",
        type: "address",
      },
    ],
    name: "removeGuardian",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "messageHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verifyGuardianSignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200196538038062001965833981810160405260208110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660208202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019060200280838360005b83811015620000c6578082015181840152602081019050620000a9565b50505050905001604052505050620000ef67413656f24fa6186560c01b6200015b60201b60201c565b6200010b6787617704701f333060c01b6200015e60201b60201c565b6200012767ed9e3a31996788d160c01b6200015e60201b60201c565b6200014367971f2fbe95d4995c60c01b6200015e60201b60201c565b62000154816200016160201b60201c565b50620006b3565b50565b50565b6200017d67382b15100f1ea6e160c01b6200015b60201b60201c565b6200019967bc01750d57db35d060c01b6200015b60201b60201c565b620001b567e50faf3ab907f62c60c01b6200015b60201b60201c565b6000815114156200022b57620001dc677ef664711d6a7db260c01b6200015b60201b60201c565b620001f86758b5d7b8e62671d960c01b6200015b60201b60201c565b62000214678cc441a589d12f3660c01b6200015b60201b60201c565b62000225326200033a60201b60201c565b62000337565b6200024767b5eaa5217834394c60c01b6200015b60201b60201c565b6200026367e1b8c0b401a26d9b60c01b6200015b60201b60201c565b6200027f6753d9b2baeb60c5ae60c01b6200015b60201b60201c565b600081519050620002a167ac94bd2d4c55fae960c01b6200015b60201b60201c565b620002bd675e26d50e743751d260c01b6200015b60201b60201c565b60005b818110156200033457620002e567294278db644c36ac60c01b6200015b60201b60201c565b6200030167a81590e94526336860c01b6200015b60201b60201c565b620003268382815181106200031257fe5b60200260200101516200033a60201b60201c565b8080600101915050620002c0565b50505b50565b6200035667bddd7115df1af29a60c01b6200015b60201b60201c565b620003726701589f7184316ad060c01b6200015b60201b60201c565b6200038e6749aec7233e10dc1c60c01b6200015b60201b60201c565b620003aa672afcf6fb9885dea660c01b6200015b60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200044e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f477561726465643a2063616e6e6f74206164642030783020677561726469616e81525060200191505060405180910390fd5b6200046a67ad8ef681321284d460c01b6200015b60201b60201c565b6200048667c072d78627d5e68760c01b6200015b60201b60201c565b620004a2672e6f6d5be899e1b060c01b6200015b60201b60201c565b620004be67608d488e1a35327760c01b6200015b60201b60201c565b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156200057e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f477561726465643a20677561726469616e20616c72656164792065786973747381525060200191505060405180910390fd5b6200059a6778d9ddea333c93e160c01b6200015b60201b60201c565b620005b6673e811494da954c4160c01b6200015b60201b60201c565b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555062000629671acb4adf2a964aa160c01b6200015b60201b60201c565b6200064567ff72d8ebc11c766260c01b6200015b60201b60201c565b7fbc3292102fa77e083913064b282926717cdfaede4d35f553d66366c0a3da755a3282604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b6112a280620006c36000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80637f182d74116100665780637f182d7414610232578063a4db4b6b14610291578063a526d83b146102f0578063c1cad69e14610334578063d0f710d6146103935761009e565b80630c68ba21146100a357806315588bcd146100fd5780635405622e146101465780635fd4b9371461018f57806371404156146101ee575b600080fd5b6100e5600480360360208110156100b957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061042c565b60405180821515815260200191505060405180910390f35b6101446004803603602081101561011357600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506104bd565b005b61018d6004803603602081101561015c57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506104c0565b005b6101d6600480360360208110156101a557600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506104c3565b60405180821515815260200191505060405180910390f35b6102306004803603602081101561020457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104ce565b005b6102796004803603602081101561024857600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610924565b60405180821515815260200191505060405180910390f35b6102d8600480360360208110156102a757600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505061092b565b60405180821515815260200191505060405180910390f35b6103326004803603602081101561030657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610936565b005b61037b6004803603602081101561034a57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610abf565b60405180821515815260200191505060405180910390f35b610414600480360360408110156103a957600080fd5b8101908080359060200190929190803590602001906401000000008111156103d057600080fd5b8201836020820111156103e257600080fd5b8035906020019184600183028401116401000000008311171561040457600080fd5b9091929391929390505050610ac6565b60405180821515815260200191505060405180910390f35b60006104426784ecf3118404f04560c01b6104c0565b61045667d4e99ee3a1201eec60c01b6104c0565b61046a67e4ba0959715ee5ac60c01b6104c0565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b50565b50565b600060019050919050565b6104e2670caedbfd5abebf6160c01b6104c0565b6104f66742b0c1323c75dfb360c01b6104c0565b61050a679cd513b6eebced7560c01b6104c0565b61051e67eeeaf063f577770960c01b6104c0565b61053267c60da70fe303492e60c01b6104c0565b6000803273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166105d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806112706026913960400191505060405180910390fd5b6105e76794e8bc79e466100760c01b6104c0565b6105fb67bc04c894f3eba0c560c01b6104c0565b61060f678b1796894f3ae9de60c01b6104c0565b61062367b72db77a2e7745ba60c01b6104c0565b61063767b1f370819c2c0df760c01b6104c0565b61064b6748422319f9b5a9c160c01b6104c0565b61065f67e3d81842942258fa60c01b6104c0565b8073ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff161415610701576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f477561726465643a2063616e6e6f742072656d6f76652073656c66000000000081525060200191505060405180910390fd5b61071567e46f534505dcf68e60c01b6104c0565b61072967be3d1fc91d078bfa60c01b6104c0565b61073d67bda141bb88f7425160c01b6104c0565b61075167e9f4bbcb8bfedf3760c01b6104c0565b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661080f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f477561726465643a20677561726469616e20646f65736e27742065786973740081525060200191505060405180910390fd5b610823679d258db795e0520660c01b6104c0565b61083767b784b66d9c6c30c760c01b6104c0565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506108a267d3f8eee07042ad8560c01b6104c0565b6108b66755080d54614d095f60c01b6104c0565b7fee943cdb81826d5909c559c6b1ae6908fcaf2dbc16c4b730346736b486283e8b3282604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b6000919050565b600060019050919050565b61094a67dd930b6f9f95b76c60c01b6104c0565b61095e6742b0c1323c75dfb360c01b6104c0565b610972679cd513b6eebced7560c01b6104c0565b61098667eeeaf063f577770960c01b6104c0565b61099a67c60da70fe303492e60c01b6104c0565b6000803273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610a3b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806112706026913960400191505060405180910390fd5b610a4f6794e8bc79e466100760c01b6104c0565b610a6367bc04c894f3eba0c560c01b6104c0565b610a77670acb98e525a2992e60c01b6104c0565b610a8b6702f83effb0603b2160c01b6104c0565b610a9f67cabbadae4ca9cb1560c01b6104c0565b610ab3676a8aed084b7a4f8a60c01b6104c0565b610abc81610b5b565b50565b6000919050565b6000610adc67c2603dd5511b499960c01b6104c0565b610af06764f96218f3a402c560c01b6104c0565b610b04679f7a32802dba8b6e60c01b6104c0565b610b528484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610e72565b90509392505050565b610b6f67bddd7115df1af29a60c01b6104c0565b610b836701589f7184316ad060c01b6104c0565b610b976749aec7233e10dc1c60c01b6104c0565b610bab672afcf6fb9885dea660c01b6104c0565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c4e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f477561726465643a2063616e6e6f74206164642030783020677561726469616e81525060200191505060405180910390fd5b610c6267ad8ef681321284d460c01b6104c0565b610c7667c072d78627d5e68760c01b6104c0565b610c8a672e6f6d5be899e1b060c01b6104c0565b610c9e67608d488e1a35327760c01b6104c0565b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610d5d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f477561726465643a20677561726469616e20616c72656164792065786973747381525060200191505060405180910390fd5b610d716778d9ddea333c93e160c01b6104c0565b610d85673e811494da954c4160c01b6104c0565b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610df0671acb4adf2a964aa160c01b6104c0565b610e0467ff72d8ebc11c766260c01b6104c0565b7fbc3292102fa77e083913064b282926717cdfaede4d35f553d66366c0a3da755a3282604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b6000610e8867a8025e080327595360c01b6104c0565b610e9c67527ef727f456fc6060c01b6104c0565b610eb067f6f0991f4f07cce960c01b6104c0565b6000610ec58385610f4490919063ffffffff16565b9050610edb67662ff5a5d873edfe60c01b6104c0565b610eef67efbf0f200fbb2edf60c01b6104c0565b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b6000610f5a676de89ac9109535f060c01b611261565b610f6e6738f07d032b69a0cc60c01b611261565b610f82679a56bd737f9ec1c160c01b611261565b6000610f986765ff8d1c809ca6df60c01b611261565b610fac67b385de3f7dcc346760c01b611261565b60418351141561121a57610fca67166e15f83f23170a60c01b611261565b610fde67cd2d9c240be0a33460c01b611261565b610ff2671b08267e2ace419660c01b611261565b6000611008676bf79a26a2eb360d60c01b611261565b61101c67f6aaa0b497d5b8c960c01b611261565b600061103267e3bb8ebb94b2557260c01b611261565b6110466761e42a107c3e2f3560c01b611261565b600061105c67629bbeea2d8dae6c60c01b611261565b6020860151925060408601519150606086015160001a905061108867c96eccbfec13453b60c01b611261565b61109c670614339e5785cdba60c01b611261565b601b8160ff1610156110db576110bc67c25e4db51759311e60c01b611261565b6110d06794a576c495e47bde60c01b611261565b601b810190506110f0565b6110ef67b3c223547babc39660c01b611261565b5b611104676b258761bdd66fe460c01b611261565b6111186744f25d0fe4c8b73f60c01b611261565b601b8160ff1614801561113b575061113a6787b517281dd8e34760c01b611264565b5b806111655750601c8160ff16148015611164575061116367faa29d490ca62b7160c01b611264565b5b5b156111fd5761117e67a5480a7163bbe5f160c01b611261565b61119267aee28416a483519060c01b611261565b60018782858560405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156111ec573d6000803e3d6000fd5b505050602060405103519350611212565b611211672ad4d87bf39029de60c01b611261565b5b50505061122f565b61122e675c61079943debe0c60c01b611261565b5b6112436787ceeaaf3f2a20f460c01b611261565b61125767d9e6bd7b8159092260c01b611261565b8091505092915050565b50565b60006001905091905056fe477561726465643a2074782e6f726967696e206973206e6f742074686520677561726469616ea164736f6c634300060c000a";

type GuardedMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GuardedMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GuardedMock__factory extends ContractFactory {
  constructor(...args: GuardedMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    guardians_: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GuardedMock> {
    return super.deploy(guardians_, overrides || {}) as Promise<GuardedMock>;
  }
  getDeployTransaction(
    guardians_: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(guardians_, overrides || {});
  }
  attach(address: string): GuardedMock {
    return super.attach(address) as GuardedMock;
  }
  connect(signer: Signer): GuardedMock__factory {
    return super.connect(signer) as GuardedMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GuardedMockInterface {
    return new utils.Interface(_abi) as GuardedMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GuardedMock {
    return new Contract(address, _abi, signerOrProvider) as GuardedMock;
  }
}
