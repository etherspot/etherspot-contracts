/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GuardedMock, GuardedMockInterface } from "../GuardedMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "guardians_",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "guardian",
        type: "address",
      },
    ],
    name: "GuardianAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "guardian",
        type: "address",
      },
    ],
    name: "GuardianRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guardian",
        type: "address",
      },
    ],
    name: "addGuardian",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__0ffe16b4",
        type: "bytes8",
      },
    ],
    name: "c_0ffe16b4",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__9fb0db2e",
        type: "bytes8",
      },
    ],
    name: "c_9fb0db2e",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__0ffe16b4",
        type: "bytes8",
      },
    ],
    name: "c_false0ffe16b4",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__9fb0db2e",
        type: "bytes8",
      },
    ],
    name: "c_false9fb0db2e",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__0ffe16b4",
        type: "bytes8",
      },
    ],
    name: "c_true0ffe16b4",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__9fb0db2e",
        type: "bytes8",
      },
    ],
    name: "c_true9fb0db2e",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guardian",
        type: "address",
      },
    ],
    name: "isGuardian",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guardian",
        type: "address",
      },
    ],
    name: "removeGuardian",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "messageHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verifyGuardianSignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200196338038062001963833981810160405260208110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660208202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019060200280838360005b83811015620000c6578082015181840152602081019050620000a9565b50505050905001604052505050620000ef676ed90a7f5cb15c7560c01b6200015b60201b60201c565b6200010b67424eb5b364cfc86860c01b6200015e60201b60201c565b62000127671bb95f9bacc8b14b60c01b6200015e60201b60201c565b6200014367f3f35d5497ad8f8860c01b6200015e60201b60201c565b62000154816200016160201b60201c565b50620006b2565b50565b50565b6200017d672da1cbb2c8b712bf60c01b6200015b60201b60201c565b6200019967a22c42eaa986a7b160c01b6200015b60201b60201c565b620001b567161aa01e34b61d0a60c01b6200015b60201b60201c565b6000815114156200022b57620001dc67c00dbd5b52865bb760c01b6200015b60201b60201c565b620001f8678a5faf951795361260c01b6200015b60201b60201c565b620002146745413064a2aacfc660c01b6200015b60201b60201c565b62000225326200033a60201b60201c565b62000337565b6200024767d4fad28aec7c156d60c01b6200015b60201b60201c565b6200026367a88c23ab9e9dede660c01b6200015b60201b60201c565b6200027f675a0d1bd87812f63460c01b6200015b60201b60201c565b600081519050620002a167a97ff88e96ad9c4460c01b6200015b60201b60201c565b620002bd672ebda776213b4a1860c01b6200015b60201b60201c565b60005b818110156200033457620002e567197b6470f65d698160c01b6200015b60201b60201c565b62000301678e0c2e8e0183d04a60c01b6200015b60201b60201c565b620003268382815181106200031257fe5b60200260200101516200033a60201b60201c565b8080600101915050620002c0565b50505b50565b620003566715e658c0f6e292b160c01b6200015b60201b60201c565b62000372672c431971dc3f178360c01b6200015b60201b60201c565b6200038e67ea35c52bf51c28f760c01b6200015b60201b60201c565b620003aa676c0120f97757204260c01b6200015b60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200044e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f477561726465643a2063616e6e6f74206164642030783020677561726469616e81525060200191505060405180910390fd5b6200046a6768a59374672fe76a60c01b6200015b60201b60201c565b62000486676aacc0e4664894f760c01b6200015b60201b60201c565b620004a267eacfbaa68e55918960c01b6200015b60201b60201c565b620004be67b14b9b00bd32573160c01b6200015b60201b60201c565b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156200057e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f477561726465643a20677561726469616e20616c72656164792065786973747381525060200191505060405180910390fd5b6200059a67b43b7e075756508e60c01b6200015b60201b60201c565b620005b5663a0e15b185871360c01b6200015b60201b60201c565b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620006286719a12fa44495bf1260c01b6200015b60201b60201c565b62000644676a185bb7ec86ed3260c01b6200015b60201b60201c565b7fbc3292102fa77e083913064b282926717cdfaede4d35f553d66366c0a3da755a3282604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b6112a180620006c26000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80637f182d74116100665780637f182d7414610232578063a4db4b6b14610291578063a526d83b146102f0578063c1cad69e14610334578063d0f710d6146103935761009e565b80630c68ba21146100a357806315588bcd146100fd5780635405622e146101465780635fd4b9371461018f57806371404156146101ee575b600080fd5b6100e5600480360360208110156100b957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061042c565b60405180821515815260200191505060405180910390f35b6101446004803603602081101561011357600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506104bd565b005b61018d6004803603602081101561015c57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506104c0565b005b6101d6600480360360208110156101a557600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506104c3565b60405180821515815260200191505060405180910390f35b6102306004803603602081101561020457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104ce565b005b6102796004803603602081101561024857600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610924565b60405180821515815260200191505060405180910390f35b6102d8600480360360208110156102a757600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505061092b565b60405180821515815260200191505060405180910390f35b6103326004803603602081101561030657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610936565b005b61037b6004803603602081101561034a57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610abf565b60405180821515815260200191505060405180910390f35b610414600480360360408110156103a957600080fd5b8101908080359060200190929190803590602001906401000000008111156103d057600080fd5b8201836020820111156103e257600080fd5b8035906020019184600183028401116401000000008311171561040457600080fd5b9091929391929390505050610ac6565b60405180821515815260200191505060405180910390f35b600061044267d9e99bddfebda2f060c01b6104c0565b610456676401fd9fc2105e0160c01b6104c0565b61046a6733760aa820b07e2a60c01b6104c0565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b50565b50565b600060019050919050565b6104e267f772222a3366273960c01b6104c0565b6104f6677e48a4752a028e1460c01b6104c0565b61050a6754e2f8cd8fda0cfe60c01b6104c0565b61051e671b1abbc8110e006760c01b6104c0565b610532677621c15edc08840a60c01b6104c0565b6000803273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166105d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061126f6026913960400191505060405180910390fd5b6105e7671978b446280e03b660c01b6104c0565b6105fb67bc99b99e8c2c7a2260c01b6104c0565b61060f67afd0aa94ba119c4e60c01b6104c0565b610623670fe65c577fbdf81160c01b6104c0565b61063767e175d6b24c96a59a60c01b6104c0565b61064b67514f675749914bc160c01b6104c0565b61065f67fed39a5b1d24bceb60c01b6104c0565b8073ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff161415610701576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f477561726465643a2063616e6e6f742072656d6f76652073656c66000000000081525060200191505060405180910390fd5b61071567325d0391dd900ca560c01b6104c0565b61072967f494ac4bc126e05760c01b6104c0565b61073d67a8a2f5acd805e41c60c01b6104c0565b610751679f1149f801dce85b60c01b6104c0565b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661080f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f477561726465643a20677561726469616e20646f65736e27742065786973740081525060200191505060405180910390fd5b61082367e767f88c374b22f760c01b6104c0565b610837679a8eb2ad91b01fb960c01b6104c0565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506108a2675f52f4e3c8e1709960c01b6104c0565b6108b667b8b235546176405e60c01b6104c0565b7fee943cdb81826d5909c559c6b1ae6908fcaf2dbc16c4b730346736b486283e8b3282604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b6000919050565b600060019050919050565b61094a67b59862a5cb01d1d860c01b6104c0565b61095e677e48a4752a028e1460c01b6104c0565b6109726754e2f8cd8fda0cfe60c01b6104c0565b610986671b1abbc8110e006760c01b6104c0565b61099a677621c15edc08840a60c01b6104c0565b6000803273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610a3b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061126f6026913960400191505060405180910390fd5b610a4f671978b446280e03b660c01b6104c0565b610a6367bc99b99e8c2c7a2260c01b6104c0565b610a7767e0409d61ef95483b60c01b6104c0565b610a8b67acb2c628a7cbdba860c01b6104c0565b610a9f677f6b80ac4f415fbe60c01b6104c0565b610ab367c7dcdfc4bd89af4960c01b6104c0565b610abc81610b5b565b50565b6000919050565b6000610adc6746d5f36e497b280d60c01b6104c0565b610af0677077a4665ef04d8360c01b6104c0565b610b046788288bf71f1972a760c01b6104c0565b610b528484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610e71565b90509392505050565b610b6f6715e658c0f6e292b160c01b6104c0565b610b83672c431971dc3f178360c01b6104c0565b610b9767ea35c52bf51c28f760c01b6104c0565b610bab676c0120f97757204260c01b6104c0565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c4e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f477561726465643a2063616e6e6f74206164642030783020677561726469616e81525060200191505060405180910390fd5b610c626768a59374672fe76a60c01b6104c0565b610c76676aacc0e4664894f760c01b6104c0565b610c8a67eacfbaa68e55918960c01b6104c0565b610c9e67b14b9b00bd32573160c01b6104c0565b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610d5d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f477561726465643a20677561726469616e20616c72656164792065786973747381525060200191505060405180910390fd5b610d7167b43b7e075756508e60c01b6104c0565b610d84663a0e15b185871360c01b6104c0565b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610def6719a12fa44495bf1260c01b6104c0565b610e03676a185bb7ec86ed3260c01b6104c0565b7fbc3292102fa77e083913064b282926717cdfaede4d35f553d66366c0a3da755a3282604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b6000610e8767bec4827058d1d27d60c01b6104c0565b610e9b672f274b74d16058ba60c01b6104c0565b610eaf670dd4bedb64e2a2d160c01b6104c0565b6000610ec48385610f4390919063ffffffff16565b9050610eda6748284973b654d0c360c01b6104c0565b610eee67af16bd1d5a57497b60c01b6104c0565b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b6000610f5967610b12321a07a31960c01b611260565b610f6d670f66a519ee9137b960c01b611260565b610f8167140d9f9935e2385360c01b611260565b6000610f97670bfea895a9f81bec60c01b611260565b610fab67a8c715ec3b9d89c160c01b611260565b60418351141561121957610fc967101129654a82afeb60c01b611260565b610fdd67a44405322c11578a60c01b611260565b610ff1673ae09945b2f5082360c01b611260565b600061100767900a30e48d0fc7bd60c01b611260565b61101b677d193483635abe1860c01b611260565b600061103167f24e14d594e9077960c01b611260565b61104567a847d7edacf7e00c60c01b611260565b600061105b670bcc457b0963bc0f60c01b611260565b6020860151925060408601519150606086015160001a90506110876730650d5e99574f3560c01b611260565b61109b675197804ca644c8a460c01b611260565b601b8160ff1610156110da576110bb6781206cb7a1d9cec760c01b611260565b6110cf679d0aaefe9954d7fb60c01b611260565b601b810190506110ef565b6110ee67091b6422f681fe5560c01b611260565b5b611103677849785c6ede9b0e60c01b611260565b6111176732075f7517db825b60c01b611260565b601b8160ff1614801561113a575061113967638a38da6bf5bb4360c01b611263565b5b806111645750601c8160ff161480156111635750611162671d94865be2a4ed5560c01b611263565b5b5b156111fc5761117d67657d88528f4e396b60c01b611260565b611191675469679748b05cfe60c01b611260565b60018782858560405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156111eb573d6000803e3d6000fd5b505050602060405103519350611211565b61121067539b701a1f57136860c01b611260565b5b50505061122e565b61122d67f3927173995ed52360c01b611260565b5b61124267303f1b174284648060c01b611260565b61125667c60031985823124160c01b611260565b8091505092915050565b50565b60006001905091905056fe477561726465643a2074782e6f726967696e206973206e6f742074686520677561726469616ea164736f6c634300060c000a";

type GuardedMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GuardedMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GuardedMock__factory extends ContractFactory {
  constructor(...args: GuardedMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    guardians_: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GuardedMock> {
    return super.deploy(guardians_, overrides || {}) as Promise<GuardedMock>;
  }
  getDeployTransaction(
    guardians_: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(guardians_, overrides || {});
  }
  attach(address: string): GuardedMock {
    return super.attach(address) as GuardedMock;
  }
  connect(signer: Signer): GuardedMock__factory {
    return super.connect(signer) as GuardedMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GuardedMockInterface {
    return new utils.Interface(_abi) as GuardedMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GuardedMock {
    return new Contract(address, _abi, signerOrProvider) as GuardedMock;
  }
}
