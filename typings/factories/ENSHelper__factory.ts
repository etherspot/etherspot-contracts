/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ENSHelper, ENSHelperInterface } from "../ENSHelper";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "initializer",
        type: "address",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__c0828b70",
        type: "bytes8",
      },
    ],
    name: "c_c0828b70",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__ddc59594",
        type: "bytes8",
      },
    ],
    name: "c_ddc59594",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__c0828b70",
        type: "bytes8",
      },
    ],
    name: "c_falsec0828b70",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__ddc59594",
        type: "bytes8",
      },
    ],
    name: "c_falseddc59594",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__c0828b70",
        type: "bytes8",
      },
    ],
    name: "c_truec0828b70",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__ddc59594",
        type: "bytes8",
      },
    ],
    name: "c_trueddc59594",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "nodes",
        type: "bytes32[]",
      },
    ],
    name: "getAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "nodes",
        type: "bytes32[]",
      },
    ],
    name: "getNames",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ENSRegistry",
        name: "registry_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract ENSRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002b67a79944efae3efdb160c01b6100a460201b60201c565b610045676842a75f5077f4b960c01b6100a460201b60201c565b326000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061009f6787b9a0672f0a809f60c01b6100a760201b60201c565b6100aa565b50565b50565b611576806100b96000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063392e53cd11610071578063392e53cd1461017657806377c14656146101945780637b103999146101c4578063c2ed35f9146101e2578063c4d66de814610212578063dc6008e21461022e576100a9565b80631262ed1c146100ae57806318121646146100de5780631a671dff146100fa5780632e6afd6e1461011657806338bc01b514610146575b600080fd5b6100c860048036038101906100c39190610f7d565b61025e565b6040516100d59190611258565b60405180910390f35b6100f860048036038101906100f39190610f7d565b610269565b005b610114600480360381019061010f9190610f7d565b61026c565b005b610130600480360381019061012b9190610f7d565b61026f565b60405161013d9190611258565b60405180910390f35b610160600480360381019061015b9190610f3c565b610276565b60405161016d9190611214565b60405180910390f35b61017e610416565b60405161018b9190611258565b60405180910390f35b6101ae60048036038101906101a99190610f7d565b6104a9565b6040516101bb9190611258565b60405180910390f35b6101cc6104b4565b6040516101d9919061128e565b60405180910390f35b6101fc60048036038101906101f79190610f7d565b6104da565b6040516102099190611258565b60405180910390f35b61022c60048036038101906102279190610fa6565b6104e1565b005b61024860048036038101906102439190610f3c565b61072f565b6040516102559190611236565b60405180910390f35b600060019050919050565b50565b50565b6000919050565b606061028c677c3df8a8d7a8b8a360c01b61026c565b6102a067da76c4accfd9f50660c01b61026c565b6102b467db0c9c85d1a5149760c01b61026c565b6000825190506102ce67d1fe21aec12cf33660c01b61026c565b6102e267916ba7cf9cd4400260c01b61026c565b60608167ffffffffffffffff811180156102fb57600080fd5b5060405190808252806020026020018201604052801561032a5781602001602082028036833780820191505090505b50905061034167c5677c838059c77a60c01b61026c565b610355672e741fe834b4664960c01b61026c565b60005b828110156103e3576103746770f08f5e63bec55f60c01b61026c565b61039085828151811061038357fe5b60200260200101516108a5565b82828151811061039c57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508080600101915050610358565b506103f86794477654679c248460c01b61026c565b61040c67c5635e4376e7b3a360c01b61026c565b8092505050919050565b600061042c675611340c75798f9d60c01b610269565b610440672f64a7e0e1844bee60c01b610269565b610454677c1a6d31ef190d7560c01b610269565b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905090565b600060019050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000919050565b6104f56778d67c43e891337160c01b61026c565b610509672d06730e86d3c85660c01b610269565b61051d67d597201330834cbf60c01b610269565b610531675505e0a48812ca6460c01b610269565b61054567c60476dd5e6a171060c01b610269565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16146105d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ca906112a9565b60405180910390fd5b6105e767a668ad6df6cee05760c01b610269565b6105fb6767fae2475bebd9d260c01b610269565b60008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506106506750e66fb25893dbc160c01b610269565b6106646740fad7c4e6ee854860c01b61026c565b610678673df89b2f1512a4b260c01b61026c565b61068c679e108de699b9cad760c01b61026c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506106e1673bff2d399a469bf760c01b610269565b6106f5679efe014cf6ff001660c01b610269565b7f908408e307fc569b417f6cbec5d5a06f44a0a505ac0479b47d421a4b2fd6a1e63260405161072491906111f9565b60405180910390a150565b6060610745679a728985f3d3223060c01b61026c565b6107596723bdacb465b6dcfe60c01b61026c565b61076d672ef68e3fb5128e4260c01b61026c565b600082519050610787674495f4ba1cdc9e8260c01b61026c565b61079b679f0f6921b72f16b260c01b61026c565b60608167ffffffffffffffff811180156107b457600080fd5b506040519080825280602002602001820160405280156107e857816020015b60608152602001906001900390816107d35790505b5090506107ff679368db432ef477a160c01b61026c565b610813670285190ab5688a6760c01b61026c565b60005b8281101561087257610832678c94da021d78fdf960c01b61026c565b61084e85828151811061084157fe5b6020026020010151610b44565b82828151811061085a57fe5b60200260200101819052508080600101915050610816565b5061088767b5efebe28a038e4860c01b61026c565b61089b679d0a07979faa1fd360c01b61026c565b8092505050919050565b60006108bb6787bda6c72376e6dd60c01b61026c565b6108cf67433ae47e5ac9bc4c60c01b61026c565b6108e367f301c1e33df142dc60c01b61026c565b60006108f967069f423bddd8032060c01b61026c565b61090d6706b44ed5fe8ead8160c01b61026c565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630178b8bf856040518263ffffffff1660e01b815260040161096a9190611273565b60206040518083038186803b15801561098257600080fd5b505afa158015610996573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ba9190610f13565b90506109d0674369c14a2e31900c60c01b61026c565b6109e46775cd1a947b440e6260c01b61026c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610afd57610a2c67844b0a4a43db1c2c60c01b61026c565b610a40670a480a08461ca9c560c01b61026c565b610a5467550720b657c4242960c01b61026c565b8073ffffffffffffffffffffffffffffffffffffffff16633b3b57de856040518263ffffffff1660e01b8152600401610a8d9190611273565b60206040518083038186803b158015610aa557600080fd5b505afa925050508015610ad657506040513d601f19601f82011682018060405250810190610ad39190610f13565b60015b610adf57610af8565b610af367f3a51ee8c8f5f3eb60c01b61026c565b809250505b610b12565b610b11674710c4115d0ef13760c01b61026c565b5b610b266784cbc71e1b69d73f60c01b61026c565b610b3a67caf6a2e428c8be2f60c01b61026c565b8192505050919050565b6060610b5a67f52a52c0758ac95160c01b61026c565b610b6e670987e523e3248e1560c01b61026c565b610b8267bb7f5281b047d78860c01b61026c565b6060610b9867dd4ed7a38791ad2660c01b61026c565b610bac6717fc9d596917154760c01b61026c565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630178b8bf856040518263ffffffff1660e01b8152600401610c099190611273565b60206040518083038186803b158015610c2157600080fd5b505afa158015610c35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c599190610f13565b9050610c6f671456dfffadb37bac60c01b61026c565b610c8367735419e60267b7e060c01b61026c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610da157610ccb67c950f697ed3f1f6f60c01b61026c565b610cdf67f6013e69a95fba2060c01b61026c565b610cf36706600ffbd6e9ed5260c01b61026c565b8073ffffffffffffffffffffffffffffffffffffffff1663691f3431856040518263ffffffff1660e01b8152600401610d2c9190611273565b60006040518083038186803b158015610d4457600080fd5b505afa925050508015610d7a57506040513d6000823e3d601f19601f82011682018060405250810190610d779190610fcf565b60015b610d8357610d9c565b610d9767e3cfa8b00e441fe660c01b61026c565b809250505b610db6565b610db567ef664ef4dd046d5c60c01b61026c565b5b610dca67f283ed7253a3c54d60c01b61026c565b610dde6767005533b68ccf2b60c01b61026c565b8192505050919050565b600081519050610df78161150d565b92915050565b600082601f830112610e0e57600080fd5b8135610e21610e1c826112f6565b6112c9565b91508181835260208401935060208101905083856020840282011115610e4657600080fd5b60005b83811015610e765781610e5c8882610e80565b845260208401935060208301925050600181019050610e49565b5050505092915050565b600081359050610e8f81611524565b92915050565b600081359050610ea48161153b565b92915050565b600081359050610eb981611552565b92915050565b600082601f830112610ed057600080fd5b8151610ee3610ede8261131e565b6112c9565b91508082526020830160208301858383011115610eff57600080fd5b610f0a8382846114c9565b50505092915050565b600060208284031215610f2557600080fd5b6000610f3384828501610de8565b91505092915050565b600060208284031215610f4e57600080fd5b600082013567ffffffffffffffff811115610f6857600080fd5b610f7484828501610dfd565b91505092915050565b600060208284031215610f8f57600080fd5b6000610f9d84828501610e95565b91505092915050565b600060208284031215610fb857600080fd5b6000610fc684828501610eaa565b91505092915050565b600060208284031215610fe157600080fd5b600082015167ffffffffffffffff811115610ffb57600080fd5b61100784828501610ebf565b91505092915050565b600061101c838361104b565b60208301905092915050565b6000611034838361115a565b905092915050565b6110458161146f565b82525050565b611054816113e9565b82525050565b60006110658261136a565b61106f81856113a5565b935061107a8361134a565b8060005b838110156110ab5781516110928882611010565b975061109d8361138b565b92505060018101905061107e565b5085935050505092915050565b60006110c382611375565b6110cd81856113b6565b9350836020820285016110df8561135a565b8060005b8581101561111b57848403895281516110fc8582611028565b945061110783611398565b925060208a019950506001810190506110e3565b50829750879550505050505092915050565b611136816113fb565b82525050565b61114581611407565b82525050565b61115481611481565b82525050565b600061116582611380565b61116f81856113c7565b935061117f8185602086016114c9565b611188816114fc565b840191505092915050565b60006111a0602f836113d8565b91507f496e697469616c697a61626c653a2074782e6f726967696e206973206e6f742060008301527f74686520696e697469616c697a657200000000000000000000000000000000006020830152604082019050919050565b600060208201905061120e600083018461103c565b92915050565b6000602082019050818103600083015261122e818461105a565b905092915050565b6000602082019050818103600083015261125081846110b8565b905092915050565b600060208201905061126d600083018461112d565b92915050565b6000602082019050611288600083018461113c565b92915050565b60006020820190506112a3600083018461114b565b92915050565b600060208201905081810360008301526112c281611193565b9050919050565b6000604051905081810181811067ffffffffffffffff821117156112ec57600080fd5b8060405250919050565b600067ffffffffffffffff82111561130d57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561133557600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006113f48261144f565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffffffffffff00000000000000000000000000000000000000000000000082169050919050565b6000611448826113e9565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061147a826114a5565b9050919050565b600061148c82611493565b9050919050565b600061149e8261144f565b9050919050565b60006114b0826114b7565b9050919050565b60006114c28261144f565b9050919050565b60005b838110156114e75780820151818401526020810190506114cc565b838111156114f6576000848401525b50505050565b6000601f19601f8301169050919050565b611516816113e9565b811461152157600080fd5b50565b61152d81611407565b811461153857600080fd5b50565b61154481611411565b811461154f57600080fd5b50565b61155b8161143d565b811461156657600080fd5b5056fea164736f6c634300060c000a";

type ENSHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ENSHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ENSHelper__factory extends ContractFactory {
  constructor(...args: ENSHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ENSHelper> {
    return super.deploy(overrides || {}) as Promise<ENSHelper>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ENSHelper {
    return super.attach(address) as ENSHelper;
  }
  connect(signer: Signer): ENSHelper__factory {
    return super.connect(signer) as ENSHelper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ENSHelperInterface {
    return new utils.Interface(_abi) as ENSHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ENSHelper {
    return new Contract(address, _abi, signerOrProvider) as ENSHelper;
  }
}
