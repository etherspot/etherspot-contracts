/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DeBridgeFacet, DeBridgeFacetInterface } from "../DeBridgeFacet";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAmount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "SentAssets",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "UpdatedDeBridgeGate",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_chainIdTo",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "deBridgeCrossChainSend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deBridgeGate",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newGate",
        type: "address",
      },
    ],
    name: "updateGateAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040527343de2d77bf8027e25dbd179b491e8d64f38398aa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006557600080fd5b5061008261007761008760201b60201c565b61008f60201b60201c565b610153565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61101d806101626000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063715018a6146100675780638da5cb5b14610071578063b670e8181461008f578063be386995146100ab578063ca777fbf146100c7578063f2fde38b146100e5575b600080fd5b61006f610101565b005b610079610189565b6040516100869190610c1d565b60405180910390f35b6100a960048036038101906100a49190610985565b6101b2565b005b6100c560048036038101906100c091906109b2565b61030f565b005b6100cf6105d8565b6040516100dc9190610c1d565b60405180910390f35b6100ff60048036038101906100fa9190610985565b6105fe565b005b6101096106f6565b73ffffffffffffffffffffffffffffffffffffffff16610127610189565b73ffffffffffffffffffffffffffffffffffffffff161461017d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017490610d32565b60405180910390fd5b61018760006106fe565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101ba6106f6565b73ffffffffffffffffffffffffffffffffffffffff166101d8610189565b73ffffffffffffffffffffffffffffffffffffffff161461022e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022590610d32565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610295576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507e9e2f7ae19588c1e8d44447b068866fa8c5905e51f5c1975c78914fd26d4ee8816040516103049190610c1d565b60405180910390a150565b60008311610349576040517f1f2a200500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103b0576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518363ffffffff1660e01b815260040161040d929190610c38565b602060405180830381600087803b15801561042757600080fd5b505af115801561043b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045f9190610a19565b50600061054c63be29747660e01b868686866040516020016104819190610beb565b6040516020818303038152906040526000806040516024016104a896959493929190610c61565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166107c290919063ffffffff16565b90508473ffffffffffffffffffffffffffffffffffffffff1661056d6106f6565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f9d623063e7b19520c3b7a42aa8afe83b52a9eee729882763d05b0bbb4169d65a876040516105c99190610d72565b60405180910390a45050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106066106f6565b73ffffffffffffffffffffffffffffffffffffffff16610624610189565b73ffffffffffffffffffffffffffffffffffffffff161461067a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067190610d32565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e190610d12565b60405180910390fd5b6106f3816106fe565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60606107e78383604051806060016040528060278152602001610fea602791396107ef565b905092915050565b60606107fa846108bc565b610839576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083090610d52565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516108619190610c06565b600060405180830381855af49150503d806000811461089c576040519150601f19603f3d011682016040523d82523d6000602084013e6108a1565b606091505b50915091506108b18282866108df565b925050509392505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b606083156108ef5782905061093f565b6000835111156109025782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109369190610cf0565b60405180910390fd5b9392505050565b60008135905061095581610fa4565b92915050565b60008151905061096a81610fbb565b92915050565b60008135905061097f81610fd2565b92915050565b60006020828403121561099b5761099a610e8e565b5b60006109a984828501610946565b91505092915050565b600080600080608085870312156109cc576109cb610e8e565b5b60006109da87828801610946565b94505060206109eb87828801610970565b93505060406109fc87828801610970565b9250506060610a0d87828801610946565b91505092959194509250565b600060208284031215610a2f57610a2e610e8e565b5b6000610a3d8482850161095b565b91505092915050565b610a4f81610dd0565b82525050565b610a66610a6182610dd0565b610e6a565b82525050565b610a7581610de2565b82525050565b6000610a8682610d8d565b610a908185610da3565b9350610aa0818560208601610e37565b610aa981610e93565b840191505092915050565b6000610abf82610d8d565b610ac98185610db4565b9350610ad9818560208601610e37565b80840191505092915050565b610aee81610e25565b82525050565b6000610aff82610d98565b610b098185610dbf565b9350610b19818560208601610e37565b610b2281610e93565b840191505092915050565b6000610b3a602683610dbf565b9150610b4582610eb1565b604082019050919050565b6000610b5d600283610dbf565b9150610b6882610f00565b602082019050919050565b6000610b80602083610dbf565b9150610b8b82610f29565b602082019050919050565b6000610ba3602683610dbf565b9150610bae82610f52565b604082019050919050565b6000610bc6600083610dbf565b9150610bd182610fa1565b600082019050919050565b610be581610e0e565b82525050565b6000610bf78284610a55565b60148201915081905092915050565b6000610c128284610ab4565b915081905092915050565b6000602082019050610c326000830184610a46565b92915050565b6000604082019050610c4d6000830185610a46565b610c5a6020830184610bdc565b9392505050565b600061010082019050610c776000830189610a46565b610c846020830188610bdc565b610c916040830187610bdc565b8181036060830152610ca38186610a7b565b90508181036080830152610cb681610bb9565b9050610cc560a0830185610a6c565b610cd260c0830184610ae5565b81810360e0830152610ce381610b50565b9050979650505050505050565b60006020820190508181036000830152610d0a8184610af4565b905092915050565b60006020820190508181036000830152610d2b81610b2d565b9050919050565b60006020820190508181036000830152610d4b81610b73565b9050919050565b60006020820190508181036000830152610d6b81610b96565b9050919050565b6000602082019050610d876000830184610bdc565b92915050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000610ddb82610dee565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000610e3082610e18565b9050919050565b60005b83811015610e55578082015181840152602081019050610e3a565b83811115610e64576000848401525b50505050565b6000610e7582610e7c565b9050919050565b6000610e8782610ea4565b9050919050565b600080fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f3078000000000000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b50565b610fad81610dd0565b8114610fb857600080fd5b50565b610fc481610de2565b8114610fcf57600080fd5b50565b610fdb81610e0e565b8114610fe657600080fd5b5056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c6343000807000a";

type DeBridgeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeBridgeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DeBridgeFacet__factory extends ContractFactory {
  constructor(...args: DeBridgeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DeBridgeFacet> {
    return super.deploy(overrides || {}) as Promise<DeBridgeFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DeBridgeFacet {
    return super.attach(address) as DeBridgeFacet;
  }
  connect(signer: Signer): DeBridgeFacet__factory {
    return super.connect(signer) as DeBridgeFacet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeBridgeFacetInterface {
    return new utils.Interface(_abi) as DeBridgeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DeBridgeFacet {
    return new Contract(address, _abi, signerOrProvider) as DeBridgeFacet;
  }
}
