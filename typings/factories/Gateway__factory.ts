/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Gateway } from "../Gateway";

export class Gateway__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Gateway> {
    return super.deploy(overrides || {}) as Promise<Gateway>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Gateway {
    return super.attach(address) as Gateway;
  }
  connect(signer: Signer): Gateway__factory {
    return super.connect(signer) as Gateway__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Gateway {
    return new Contract(address, _abi, signerOrProvider) as Gateway;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "batch",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "succeeded",
        type: "bool",
      },
    ],
    name: "BatchDelegated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "accountOwnerRegistry",
    outputs: [
      {
        internalType: "contract AccountOwnerRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
      {
        internalType: "bytes",
        name: "senderSignature",
        type: "bytes",
      },
    ],
    name: "delegateBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
      {
        internalType: "bytes",
        name: "senderSignature",
        type: "bytes",
      },
    ],
    name: "delegateBatchWithGasPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "batches",
        type: "bytes[]",
      },
      {
        internalType: "bool",
        name: "revertOnFailure",
        type: "bool",
      },
    ],
    name: "delegateBatches",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getAccountNextNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "bytes[]",
            name: "data",
            type: "bytes[]",
          },
        ],
        internalType: "struct Gateway.DelegatedBatch",
        name: "delegatedBatch",
        type: "tuple",
      },
    ],
    name: "hashDelegatedBatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "bytes[]",
            name: "data",
            type: "bytes[]",
          },
          {
            internalType: "uint256",
            name: "gasPrice",
            type: "uint256",
          },
        ],
        internalType: "struct Gateway.DelegatedBatchWithGasPrice",
        name: "delegatedBatch",
        type: "tuple",
      },
    ],
    name: "hashDelegatedBatchWithGasPrice",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract AccountOwnerRegistry",
        name: "accountOwnerRegistry_",
        type: "address",
      },
      {
        internalType: "contract PersonalAccountRegistry",
        name: "personalAccountRegistry_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "typedDataDomainNameHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "typedDataDomainVersionHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "typedDataDomainSalt",
        type: "bytes32",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "personalAccountRegistry",
    outputs: [
      {
        internalType: "contract PersonalAccountRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "sendBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "sendBatchFromAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "typedDataDomainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b0319163217905561166a806100326000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806387d313131161008c578063b5021b1611610066578063b5021b161461019b578063bd106a02146101ae578063e372b55f146101b6578063f92c5f7c146101be576100cf565b806387d3131314610160578063984bd28f146101755780639f25562614610188576100cf565b8063231badaf146100d4578063235f8a44146100e9578063392e53cd146101125780635afaa7bb146101275780636d482cfb1461013a578063867519c61461014d575b600080fd5b6100e76100e2366004610dc7565b6101d1565b005b6100fc6100f7366004610f85565b610261565b604051610109919061121e565b60405180910390f35b61011a610288565b6040516101099190611213565b6100e7610135366004610ec9565b610298565b6100fc61014836600461102a565b6103f0565b6100e761015b366004610d54565b61040c565b610168610418565b60405161010991906112b4565b6100e7610183366004610f35565b610427565b6100e7610196366004610e68565b6104c4565b6100e76101a9366004610dc7565b6104d4565b6100fc610520565b610168610526565b6100fc6101cc366004610d38565b610535565b6001600160a01b03851660009081526004602052604090205484116102115760405162461bcd60e51b815260040161020890611385565b60405180910390fd5b60006102308261022a610225888888610559565b61068c565b906106dc565b6001600160a01b0387166000908152600460205260409020869055905061025986828686610781565b505050505050565b60006102826102258360000151846020015185604001518660600151610a47565b92915050565b6000546001600160a01b03161590565b60008251116102b95760405162461bcd60e51b81526004016102089061141c565b6000805b83518110156103cd576000306001600160a01b03168583815181106102de57fe5b60200260200101516040516102f3919061112b565b6000604051808303816000865af19150503d8060008114610330576040519150601f19603f3d011682016040523d82523d6000602084013e610335565b606091505b505090508315610361578061035c5760405162461bcd60e51b81526004016102089061134e565b610376565b80801561036c575082155b1561037657600192505b7f361c14722cc344132c73396113f7164232448b09c544a149f09048648b43d872338684815181106103a457fe5b6020026020010151836040516103bc939291906111af565b60405180910390a1506001016102bd565b50806103eb5760405162461bcd60e51b815260040161020890611589565b505050565b6000610282610225836000015184602001518560400151610559565b6103eb83338484610781565b6003546001600160a01b031681565b6000546001600160a01b031632146104515760405162461bcd60e51b8152600401610208906112ff565b600080546001600160a01b03199081169091556002805482166001600160a01b038881169190911790915560038054909216908616179055610494838383610b7d565b6040517f5daa87a0e9463431830481fd4b6e3403442dfb9a12b9c07597e9f61d50b633c890600090a15050505050565b6104d033338484610781565b5050565b6001600160a01b038516600090815260046020526040902054841161050b5760405162461bcd60e51b815260040161020890611385565b60006102308261022a6102258888883a610a47565b60015481565b6002546001600160a01b031681565b6001600160a01b038116600090815260046020526040812054610282906001610bdb565b60006060825167ffffffffffffffff8111801561057557600080fd5b5060405190808252806020026020018201604052801561059f578160200160208202803683370190505b50905060005b83518110156105e8578381815181106105ba57fe5b6020026020010151805190602001208282815181106105d557fe5b60209081029190910101526001016105a5565b507f4dc0a39234edc20669002d7daeb6a39b3af6a6a56073618b70893384c405c849858560405160200161061c91906110c2565b60405160208183030381529060405280519060200120836040516020016106439190611101565b6040516020818303038152906040528051906020012060405160200161066c9493929190611258565b604051602081830303815290604052805190602001209150509392505050565b600060405180604001604052806002815260200161190160f01b815250600154836040516020016106bf93929190611188565b604051602081830303815290604052805190602001209050919050565b805160009081906041141561077a5760208301516040840151606085015160001a601b81101561070a57601b015b8060ff16601b148061071f57508060ff16601c145b1561077657600187828585604051600081526020016040526040516107479493929190611296565b6020604051602081039080840390855afa158015610769573d6000803e3d6000fd5b5050506020604051035193505b5050505b9392505050565b6001600160a01b0384166107a75760405162461bcd60e51b8152600401610208906113d7565b60008251116107c85760405162461bcd60e51b815260040161020890611554565b81518151146107e95760405162461bcd60e51b8152600401610208906114aa565b826001600160a01b0316846001600160a01b0316146109285760035460405163bb890d3f60e01b81526001600160a01b039091169063bb890d3f9061083490879087906004016111f9565b60206040518083038186803b15801561084c57600080fd5b505afa158015610860573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108849190610f19565b8061090c575060025460405163bb890d3f60e01b81526001600160a01b039091169063bb890d3f906108bc90879087906004016111f9565b60206040518083038186803b1580156108d457600080fd5b505afa1580156108e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090c9190610f19565b6109285760405162461bcd60e51b815260040161020890611462565b6000805b82518110156102595760006001600160a01b031684828151811061094c57fe5b60200260200101516001600160a01b0316141561097b5760405162461bcd60e51b8152600401610208906112c8565b83818151811061098757fe5b60200260200101516001600160a01b03168382815181106109a457fe5b602002602001015187876040516020016109c093929190611147565b60408051601f19818403018152908290526109da9161112b565b6000604051808303816000865af19150503d8060008114610a17576040519150601f19603f3d011682016040523d82523d6000602084013e610a1c565b606091505b50508092505081610a3f5760405162461bcd60e51b8152600401610208906114da565b60010161092c565b60006060835167ffffffffffffffff81118015610a6357600080fd5b50604051908082528060200260200182016040528015610a8d578160200160208202803683370190505b50905060005b8451811015610ad657848181518110610aa857fe5b602002602001015180519060200120828281518110610ac357fe5b6020908102919091010152600101610a93565b507f75a27a7ebaa6d94f2ad4eecbc98a424b9a0516c245c680308385c79d2ad6af2a8686604051602001610b0a91906110c2565b6040516020818303038152906040528051906020012083604051602001610b319190611101565b6040516020818303038152906040528051906020012086604051602001610b5c959493929190611273565b60405160208183030381529060405280519060200120915050949350505050565b6040514690610bba907fd87cd6ef79d4e2b95e15ce8abf732db51ec771f1ca2edccf22a46c729ac564729086908690859030908890602001611227565b60408051601f19818403018152919052805160209091012060015550505050565b60008282018381101561077a5760405162461bcd60e51b81526004016102089061151d565b600082601f830112610c10578081fd5b8135610c23610c1e826115e7565b6115c0565b818152915060208083019084810181840286018201871015610c4457600080fd5b60005b84811015610c6c578135610c5a81611637565b84529282019290820190600101610c47565b505050505092915050565b600082601f830112610c87578081fd5b8135610c95610c1e826115e7565b818152915060208083019084810160005b84811015610c6c57610cbd888484358a0101610ccf565b84529282019290820190600101610ca6565b600082601f830112610cdf578081fd5b813567ffffffffffffffff811115610cf5578182fd5b610d08601f8201601f19166020016115c0565b9150808252836020828501011115610d1f57600080fd5b8060208401602084013760009082016020015292915050565b600060208284031215610d49578081fd5b813561077a81611637565b600080600060608486031215610d68578182fd5b8335610d7381611637565b9250602084013567ffffffffffffffff80821115610d8f578384fd5b610d9b87838801610c00565b93506040860135915080821115610db0578283fd5b50610dbd86828701610c77565b9150509250925092565b600080600080600060a08688031215610dde578081fd5b8535610de981611637565b945060208601359350604086013567ffffffffffffffff80821115610e0c578283fd5b610e1889838a01610c00565b94506060880135915080821115610e2d578283fd5b610e3989838a01610c77565b93506080880135915080821115610e4e578283fd5b50610e5b88828901610ccf565b9150509295509295909350565b60008060408385031215610e7a578182fd5b823567ffffffffffffffff80821115610e91578384fd5b610e9d86838701610c00565b93506020850135915080821115610eb2578283fd5b50610ebf85828601610c77565b9150509250929050565b60008060408385031215610edb578182fd5b823567ffffffffffffffff811115610ef1578283fd5b610efd85828601610c77565b9250506020830135610f0e8161164f565b809150509250929050565b600060208284031215610f2a578081fd5b815161077a8161164f565b600080600080600060a08688031215610f4c578081fd5b8535610f5781611637565b94506020860135610f6781611637565b94979496505050506040830135926060810135926080909101359150565b600060208284031215610f96578081fd5b813567ffffffffffffffff80821115610fad578283fd5b9083019060808286031215610fc0578283fd5b610fca60806115c0565b82358152602083013582811115610fdf578485fd5b610feb87828601610c00565b602083015250604083013582811115611002578485fd5b61100e87828601610c77565b6040830152506060830135606082015280935050505092915050565b60006020828403121561103b578081fd5b813567ffffffffffffffff80821115611052578283fd5b9083019060608286031215611065578283fd5b61106f60606115c0565b82358152602083013582811115611084578485fd5b61109087828601610c00565b6020830152506040830135828111156110a7578485fd5b6110b387828601610c77565b60408301525095945050505050565b815160009082906020808601845b838110156110f55781516001600160a01b0316855293820193908201906001016110d0565b50929695505050505050565b815160009082906020808601845b838110156110f55781518552938201939082019060010161110f565b6000825161113d818460208701611607565b9190910192915050565b60008451611159818460208901611607565b6bffffffffffffffffffffffff19606095861b8116919093019081529290931b16601482015260280192915050565b6000845161119a818460208901611607565b91909101928352506020820152604001919050565b600060018060a01b03851682526060602083015283518060608401526111dc816080850160208801611607565b921515604083015250601f91909101601f19160160800192915050565b6001600160a01b0392831681529116602082015260400190565b901515815260200190565b90815260200190565b9586526020860194909452604085019290925260608401526001600160a01b0316608083015260a082015260c00190565b93845260208401929092526040830152606082015260800190565b948552602085019390935260408401919091526060830152608082015260a00190565b93845260ff9290921660208401526040830152606082015260800190565b6001600160a01b0391909116815260200190565b6020808252601b908201527f476174657761793a2063616e6e6f742073656e6420746f203078300000000000604082015260600190565b6020808252602f908201527f496e697469616c697a61626c653a2074782e6f726967696e206973206e6f742060408201526e3a34329034b734ba34b0b634bd32b960891b606082015260800190565b60208082526017908201527f476174657761793a206261746368207265766572746564000000000000000000604082015260600190565b60208082526032908201527f476174657761793a206e6f6e6365206973206c6f776572207468616e2063757260408201527172656e74206163636f756e74206e6f6e636560701b606082015260800190565b60208082526025908201527f476174657761793a2063616e6e6f742073656e642066726f6d2030783020616360408201526418dbdd5b9d60da1b606082015260800190565b60208082526026908201527f476174657761793a2063616e6e6f742064656c656761746520656d707479206260408201526561746368657360d01b606082015260800190565b60208082526028908201527f476174657761793a2073656e646572206973206e6f7420746865206163636f75604082015267373a1037bbb732b960c11b606082015260800190565b60208082526016908201527508ec2e8caeec2f27440d2dcecc2d8d2c840c4c2e8c6d60531b604082015260600190565b60208082526023908201527f476174657761793a206261746368207472616e73616374696f6e2072657665726040820152621d195960ea1b606082015260800190565b6020808252601e908201527f536166654d6174684c69623a206164646974696f6e206f766572666c6f770000604082015260600190565b6020808252818101527f476174657761793a2063616e6e6f742073656e6420656d707479206261746368604082015260600190565b6020808252601d908201527f476174657761793a20616c6c2062617463686573207265766572746564000000604082015260600190565b60405181810167ffffffffffffffff811182821017156115df57600080fd5b604052919050565b600067ffffffffffffffff8211156115fd578081fd5b5060209081020190565b60005b8381101561162257818101518382015260200161160a565b83811115611631576000848401525b50505050565b6001600160a01b038116811461164c57600080fd5b50565b801515811461164c57600080fdfea164736f6c634300060c000a";
