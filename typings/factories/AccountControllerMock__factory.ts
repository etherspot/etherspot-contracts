/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AccountControllerMock,
  AccountControllerMockInterface,
} from "../AccountControllerMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "accountRegistry_",
        type: "address",
      },
      {
        internalType: "address",
        name: "accountImplementation_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "accountImplementation",
        type: "address",
      },
    ],
    name: "AccountDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "accountImplementation",
        type: "address",
      },
    ],
    name: "AccountImplementationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "accountRegistry",
        type: "address",
      },
    ],
    name: "AccountRegistryUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
    ],
    name: "AccountTransactionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "accountImplementation",
        type: "address",
      },
    ],
    name: "AccountUpgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "accountImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accountRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__8758a88a",
        type: "bytes8",
      },
    ],
    name: "c_8758a88a",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__bf6efb80",
        type: "bytes8",
      },
    ],
    name: "c_bf6efb80",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__8758a88a",
        type: "bytes8",
      },
    ],
    name: "c_false8758a88a",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__bf6efb80",
        type: "bytes8",
      },
    ],
    name: "c_falsebf6efb80",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__8758a88a",
        type: "bytes8",
      },
    ],
    name: "c_true8758a88a",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__bf6efb80",
        type: "bytes8",
      },
    ],
    name: "c_truebf6efb80",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "computeAccountAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "deployAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeAccountTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "accountImplementation_",
        type: "address",
      },
    ],
    name: "setAccountImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "accountRegistry_",
        type: "address",
      },
    ],
    name: "setAccountRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "upgradeAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200340838038062003408833981810160405260408110156200003757600080fd5b8101908080519060200190929190805190602001909291905050506200006e67f9592435f5b5ea8c60c01b620000dc60201b60201c565b6200008a6797ad1bd4b63c15e160c01b620000df60201b60201c565b620000a667e81bcc617a15e39f60c01b620000df60201b60201c565b620000c26712e9fa803a5a4a4a60c01b620000df60201b60201c565b620000d48282620000e260201b60201c565b5050620006c9565b50565b50565b620000fe671af942b4819087fc60c01b620000dc60201b60201c565b6200011a670f0a44d9ed8d066760c01b620000dc60201b60201c565b6200013667af6f6ca5a19aa0c460c01b620000dc60201b60201c565b620001498260006200019860201b60201c565b6200016567dd02c4093239d2e360c01b620000dc60201b60201c565b62000181674754410ba216543b60c01b620000dc60201b60201c565b620001948160006200042f60201b60201c565b5050565b620001b46757e53bb83d0ee18c60c01b620000dc60201b60201c565b620001d0674b6db0292681de8060c01b620000dc60201b60201c565b620001ec67634dbba0de15713160c01b620000dc60201b60201c565b620002086716603faf2a4da76360c01b620000dc60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000290576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526035815260200180620033d36035913960400191505060405180910390fd5b620002ac67fdb2085a5ff3fca060c01b620000dc60201b60201c565b620002c8677c845799041d8f7d60c01b620000dc60201b60201c565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200032467cb55668fb6fee71c60c01b620000dc60201b60201c565b6200034067372f88a4084cef5b60c01b620000dc60201b60201c565b80156200040e5762000363671b487ad986e5d06660c01b620000dc60201b60201c565b6200037f67734c16c2ea37d8f760c01b620000dc60201b60201c565b6200039b670feaed23a94b80cf60c01b620000dc60201b60201c565b7f02e3c47057b8dc27a0929d3c394c314c73aa002d46939c31c9f71d1e77e86c1060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16200042b565b6200042a67b56e759927012ec660c01b620000dc60201b60201c565b5b5050565b6200044b6763a6d6dd8a86352960c01b620000dc60201b60201c565b62000467678eeff62892cd112860c01b620000dc60201b60201c565b620004836781019a5110a6fd2560c01b620000dc60201b60201c565b6200049f6799570e869b77f36060c01b620000dc60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000527576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b81526020018062003398603b913960400191505060405180910390fd5b6200054367e6730257a24a5d4d60c01b620000dc60201b60201c565b6200055f675137d05a035c900560c01b620000dc60201b60201c565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620005bc676635cb5a489007f160c01b620000dc60201b60201c565b620005d86779ff21fdd4bb44bc60c01b620000dc60201b60201c565b8015620006a857620005fb67ce1bdfd86d0ca23360c01b620000dc60201b60201c565b62000617677479b0cc253e30c560c01b620000dc60201b60201c565b6200063367a2b46e4941f5d4f860c01b620000dc60201b60201c565b7f70d9f5a076620216a6050e493f3ce69749de0b68fa4b839ba2518660ba8b9cf0600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1620006c5565b620006c46725a77b732bce9b0960c01b620000dc60201b60201c565b5b5050565b612cbf80620006d96000396000f3fe60806040523480156200001157600080fd5b5060043610620001005760003560e01c80635db3fe391162000099578063d01a9cae116200006f578063d01a9cae146200043f578063d089e11a1462000470578063d937de4314620004a6578063e5c7278f14620004f25762000100565b80635db3fe39146200034a5780636661a51e1462000396578063ad8bbdec14620003dd5762000100565b80631aa316db11620000db5780631aa316db14620001e457806320dedc001462000246578063264d5cb414620002a857806343013c2414620003035762000100565b806309766da214620001055780630f7d3bc7146200014c57806311464fbe14620001ae575b600080fd5b6200014a600480360360208110156200011d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620005fd565b005b62000196600480360360208110156200016457600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506200064f565b60405180821515815260200191505060405180910390f35b620001b862000656565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6200022e60048036036020811015620001fc57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506200067c565b60405180821515815260200191505060405180910390f35b62000290600480360360208110156200025e57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505062000687565b60405180821515815260200191505060405180910390f35b620002d760048036036020811015620002c057600080fd5b810190808035906020019092919050505062000692565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62000348600480360360208110156200031b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620006e8565b005b62000394600480360360208110156200036257600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506200073a565b005b620003db60048036036020811015620003ae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200073d565b005b6200042760048036036020811015620003f557600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506200078f565b60405180821515815260200191505060405180910390f35b6200046e600480360360208110156200045757600080fd5b810190808035906020019092919050505062000796565b005b6200047a620007e9565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b620004f060048036036020811015620004be57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506200080d565b005b620005fb600480360360808110156200050a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156200057257600080fd5b8201836020820111156200058557600080fd5b80359060200191846001830284011164010000000083111715620005a857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505062000810565b005b6200061367fd17f2f34ea89dda60c01b6200080d565b6200062967670c7ce80384dd8760c01b6200080d565b6200063f670d73251c3b32c2cf60c01b6200080d565b6200064c81600162000869565b50565b6000919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060019050919050565b600060019050919050565b6000620006aa6760d6d6a33ef81ce960c01b6200080d565b620006c067700d697758cc42d560c01b6200080d565b620006d667d61c3adb52e7e99060c01b6200080d565b620006e18262000abb565b9050919050565b620006fe67dd6c0b406e90f1eb60c01b6200080d565b6200071467693ceaaa87aede7360c01b6200080d565b6200072a67d9c13fdcdf5971d860c01b6200080d565b6200073781600162000d4d565b50565b50565b6200075367cf70be1c10ca2d3e60c01b6200080d565b62000769675aca60eeb968724d60c01b6200080d565b6200077f67cc4c0e99a1f1225e60c01b6200080d565b6200078c816001620010db565b50565b6000919050565b620007ac6778a986e51e0eda1f60c01b6200080d565b620007c26735e6b2b2f03d099f60c01b6200080d565b620007d867679f876eb2f3608c60c01b6200080d565b620007e58160016200132a565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b50565b62000826670a865ba881afc64060c01b6200080d565b6200083c679d65498c0f295b0b60c01b6200080d565b62000852671fbcb34b6fc8aee960c01b6200080d565b6200086284848484600162001579565b5050505050565b6200087f6763a6d6dd8a86352960c01b6200073a565b62000895678eeff62892cd112860c01b6200073a565b620008ab6781019a5110a6fd2560c01b6200073a565b620008c16799570e869b77f36060c01b6200073a565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000949576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b81526020018062002ba1603b913960400191505060405180910390fd5b6200095f67e6730257a24a5d4d60c01b6200073a565b62000975675137d05a035c900560c01b6200073a565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620009cc676635cb5a489007f160c01b6200073a565b620009e26779ff21fdd4bb44bc60c01b6200073a565b801562000aa057620009ff67ce1bdfd86d0ca23360c01b6200073a565b62000a15677479b0cc253e30c560c01b6200073a565b62000a2b67a2b46e4941f5d4f860c01b6200073a565b7f70d9f5a076620216a6050e493f3ce69749de0b68fa4b839ba2518660ba8b9cf0600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a162000ab7565b62000ab66725a77b732bce9b0960c01b6200073a565b5b5050565b600062000ad367834d7dcd68b198b060c01b6200073a565b62000ae9673ff175921f5f538960c01b6200073a565b62000aff6701ee97873b03827f60c01b6200073a565b60606040518060200162000b139062001c60565b6020820181038252601f19601f82011660405250600060a01b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600060a01b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516020018086805190602001908083835b6020831062000bad578051825260208201915060208101905060208303925062000b88565b6001836020036101000a0380198251168184511680821785525050505050509050018573ffffffffffffffffffffffffffffffffffffffff19168152600c018473ffffffffffffffffffffffffffffffffffffffff1660601b81526014018373ffffffffffffffffffffffffffffffffffffffff19168152600c018273ffffffffffffffffffffffffffffffffffffffff1660601b815260140195505050505050604051602081830303815290604052905062000c7567c5994a000b72ff9b60c01b6200073a565b62000c8b673303398cfdf0748c60c01b6200073a565b600060ff60f81b3085848051906020012060405160200180857effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526001018473ffffffffffffffffffffffffffffffffffffffff1660601b815260140183815260200182815260200194505050505060405160208183030381529060405280519060200120905062000d2a67d5638e0e835e9fc260c01b6200073a565b62000d406765b94d8c76f4fb1960c01b6200073a565b8060001c92505050919050565b62000d63671e986652550cd6b760c01b6200073a565b62000d796712f52b022ec7e94e60c01b6200073a565b62000d8f67d13332898fe9198160c01b6200073a565b62000da5677771d5f99d0f0ea860c01b6200073a565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b15801562000e2557600080fd5b505afa15801562000e3a573d6000803e3d6000fd5b505050506040513d602081101562000e5157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16141562000ed1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018062002c5c602b913960400191505060405180910390fd5b62000ee7671d9e65030376f52a60c01b6200073a565b62000efd67de7455456727db8960c01b6200073a565b62000f13671ad3abe77081920060c01b6200073a565b8173ffffffffffffffffffffffffffffffffffffffff1663d784d426600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801562000f9f57600080fd5b505af115801562000fb4573d6000803e3d6000fd5b5050505062000fce672dc6faf1b96e638260c01b6200073a565b62000fe4673ac280b3b6cdcef460c01b6200073a565b8015620010c05762001001674cef15a637c5d09560c01b6200073a565b6200101767a51c2a16f15f5aee60c01b6200073a565b6200102d6739bd33583f67f11d60c01b6200073a565b7feec27cdb8bd6f55c2c537deb52ab094a2437e85ef5197e6f064f90bff3ff563f82600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1620010d7565b620010d667a8db68da35e394a360c01b6200073a565b5b5050565b620010f16757e53bb83d0ee18c60c01b6200073a565b62001107674b6db0292681de8060c01b6200073a565b6200111d67634dbba0de15713160c01b6200073a565b620011336716603faf2a4da76360c01b6200073a565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620011bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603581526020018062002c026035913960400191505060405180910390fd5b620011d167fdb2085a5ff3fca060c01b6200073a565b620011e7677c845799041d8f7d60c01b6200073a565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200123d67cb55668fb6fee71c60c01b6200073a565b6200125367372f88a4084cef5b60c01b6200073a565b80156200130f5762001270671b487ad986e5d06660c01b6200073a565b6200128667734c16c2ea37d8f760c01b6200073a565b6200129c670feaed23a94b80cf60c01b6200073a565b7f02e3c47057b8dc27a0929d3c394c314c73aa002d46939c31c9f71d1e77e86c1060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a162001326565b6200132567b56e759927012ec660c01b6200073a565b5b5050565b6000620013426769d35e844fb436a560c01b6200073a565b6200135867d05843a5b30ee56160c01b6200073a565b6200136e676a5949dc1605b72d60c01b6200073a565b60008360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051620013c39062001c60565b808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff168152602001925050508190604051809103906000f590508015801562001421573d6000803e3d6000fd5b5090506200143a671fbc5a34026c932160c01b6200073a565b620014506729f16a915d858e6660c01b6200073a565b82156200152c576200146d674ad44f27dbd7e2bf60c01b6200073a565b62001483671948a2809685e8a560c01b6200073a565b62001499674e798983ba62ea2160c01b6200073a565b7f2682a218602b9036c9869f006c5405ee4a1a65267653eb7e286123e5e1afde4c81600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a162001543565b620015426753f95733749efee660c01b6200073a565b5b620015596713228e0b40e520f960c01b6200073a565b6200156f679f460b7957fd280860c01b6200073a565b8091505092915050565b60606200159167d03cbc512208c19360c01b6200073a565b620015a767f0724c2f605051ae60c01b6200073a565b620015bd672c1f163d378fb1c760c01b6200073a565b620015d3676e332d1ea295ad6760c01b6200073a565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614156200165b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018062002c376025913960400191505060405180910390fd5b620016716734003fde0e365df960c01b6200073a565b62001687676f78eb7775d96ac060c01b6200073a565b6200169d6762ea15fa7f97e6d860c01b6200073a565b620016b367c1e60fa2c652db9260c01b6200073a565b3073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614156200173a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018062002c87602c913960400191505060405180910390fd5b6200175067c4c441efc53987a460c01b6200073a565b62001766670a4409d86344b6de60c01b6200073a565b6200177c67f30c8cf3d7c2007160c01b6200073a565b62001792677b93c54c10ec39b960c01b6200073a565b8573ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141562001819576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018062002bdc6026913960400191505060405180910390fd5b6200182f67d0eadcda5ce01ef660c01b6200073a565b620018456708e5898037826a0e60c01b6200073a565b6200185b679eda6876d502675260c01b6200073a565b60608673ffffffffffffffffffffffffffffffffffffffff16633f579f428787876040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015620018ef578082015181840152602081019050620018d2565b50505050905090810190601f1680156200191d5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b1580156200193f57600080fd5b505af115801562001954573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156200197f57600080fd5b8101908080516040519392919084640100000000821115620019a057600080fd5b83820191506020820185811115620019b757600080fd5b8251866001820283011164010000000082111715620019d557600080fd5b8083526020830192505050908051906020019080838360005b8381101562001a0b578082015181840152602081019050620019ee565b50505050905090810190601f16801562001a395780820380516001836020036101000a031916815260200191505b50604052505050905062001a586787669d68dca3195b60c01b6200073a565b62001a6e673ac670a41bf75b6a60c01b6200073a565b821562001c105762001a8b67d53a5613f66004c060c01b6200073a565b62001aa167fefbdbb940a6f1de60c01b6200073a565b62001ab7678bc5a3cf9a4cc9b860c01b6200073a565b7f99eeae1fb8801e2e878e060ec5e5b3557b3c4f8106e35d88cb573f293dae4e248787878785604051808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101562001b6157808201518184015260208101905062001b44565b50505050905090810190601f16801562001b8f5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101562001bca57808201518184015260208101905062001bad565b50505050905090810190601f16801562001bf85780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390a162001c27565b62001c26674b9471e9fc68f75f60c01b6200073a565b5b62001c3d6744627d43ccecd7f160c01b6200073a565b62001c536717d248a7372779a660c01b6200073a565b8091505095945050505050565b610f328062001c6f8339019056fe608060405234801561001057600080fd5b50604051610f32380380610f328339818101604052604081101561003357600080fd5b810190808051906020019092919080519060200190929190505050610068674c05ed6aa1cd281960c01b61019960201b60201c565b610082675db0dfd7018850c360c01b61019960201b60201c565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100dc6727cd07b305f6130f60c01b61019c60201b60201c565b6100f6673763e953c2595ed960c01b61019c60201b60201c565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610151679802ebbc23dba3ba60c01b61019c60201b60201c565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061019f565b50565b50565b610d84806101ae6000396000f3fe6080604052600436106100e15760003560e01c80635c60da1b1161007f578063a42ea70811610059578063a42ea7081461067a578063d1c43eae146106d0578063d784d42614610726578063f77c479114610777576100e8565b80635c60da1b1461058c5780637b103999146105cd5780638f9bda6e1461060e576100e8565b80633f579f42116100bb5780633f579f421461031f57806344f9c9ec14610448578063550648ff146104b457806356c2fc6c14610520576100e8565b806310b90163146101f1578063221523e51461025d57806325afd90f146102c9576100e8565b366100e857005b3480156100f457600080fd5b5061010967d1c166158a76fd7860c01b6107b8565b61011d670a4a924f04604fe560c01b6107b8565b610131670ec1ea2f1a11078060c01b6107b8565b600080369050146101db57610150670366ed24f6d51c0d60c01b6107b8565b61016467583b5ef5a1a2fce260c01b6107b8565b61017867726acafc478ad1f860c01b6107b8565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506101b3673d8591565072bf1f60c01b6107b8565b368060008037600080826000855af43d806000803e81600081146101d657816000f35b816000fd5b6101ef67967eae13d5222be260c01b6107b8565b005b3480156101fd57600080fd5b506102456004803603602081101561021457600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506107bb565b60405180821515815260200191505060405180910390f35b34801561026957600080fd5b506102b16004803603602081101561028057600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506107c2565b60405180821515815260200191505060405180910390f35b3480156102d557600080fd5b5061031d600480360360208110156102ec57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506107b8565b005b34801561032b57600080fd5b506103cd6004803603606081101561034257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561038957600080fd5b82018360208201111561039b57600080fd5b803590602001918460018302840111640100000000831117156103bd57600080fd5b90919293919293905050506107c9565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561040d5780820151818401526020810190506103f2565b50505050905090810190601f16801561043a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561045457600080fd5b5061049c6004803603602081101561046b57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610afd565b60405180821515815260200191505060405180910390f35b3480156104c057600080fd5b50610508600480360360208110156104d757600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610b08565b60405180821515815260200191505060405180910390f35b34801561052c57600080fd5b506105746004803603602081101561054357600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610b0f565b60405180821515815260200191505060405180910390f35b34801561059857600080fd5b506105a1610b1a565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105d957600080fd5b506105e2610b40565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561061a57600080fd5b506106626004803603602081101561063157600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610b66565b60405180821515815260200191505060405180910390f35b34801561068657600080fd5b506106ce6004803603602081101561069d57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610b71565b005b3480156106dc57600080fd5b50610724600480360360208110156106f357600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610b74565b005b34801561073257600080fd5b506107756004803603602081101561074957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b77565b005b34801561078357600080fd5b5061078c610d27565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b50565b6000919050565b6000919050565b60606107df6715e98a49f265557060c01b6107b8565b6107f367f6266a592c249da560c01b610b74565b6108076728279893f8537e1960c01b610b74565b61081b67d300d0a9ecbe6cac60c01b610b74565b61082f678d5c0caa285e3ec560c01b610b74565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610d4c602c913960400191505060405180910390fd5b6108e76718b2e4dd03bc759a60c01b610b74565b6108fb67f8b65e28b897a44f60c01b610b74565b61090f67390c85347f6e2a2360c01b6107b8565b61092367d2a3446ca25e972660c01b6107b8565b61093767aca9b4091d5a9bc860c01b6107b8565b61094b67cce790cad14eb25260c01b6107b8565b606061096167b3adbec8c64c374360c01b6107b8565b6109756791d717b4dffb179d60c01b6107b8565b600061098b67310ff00dd2ac011060c01b6107b8565b8673ffffffffffffffffffffffffffffffffffffffff1686868660405180838380828437808301925050509250505060006040518083038185875af1925050503d80600081146109f7576040519150601f19603f3d011682016040523d82523d6000602084013e6109fc565b606091505b508093508192505050610a1967a450d3c3f63b6d4d60c01b6107b8565b610a2d679a3e7d330ffc414560c01b6107b8565b610a41671925c722e30d4f6d60c01b6107b8565b80610ab4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4163636f756e743a207472616e73616374696f6e20726576657274656400000081525060200191505060405180910390fd5b610ac867a7fa168288301d1c60c01b6107b8565b610adc6745320fb16320fa4a60c01b6107b8565b610af06779ce6fa2117b3f1e60c01b6107b8565b8192505050949350505050565b600060019050919050565b6000919050565b600060019050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060019050919050565b50565b50565b610b8b6735cfec4d4a3972f660c01b6107b8565b610b9f67f6266a592c249da560c01b610b74565b610bb36728279893f8537e1960c01b610b74565b610bc767d300d0a9ecbe6cac60c01b610b74565b610bdb678d5c0caa285e3ec560c01b610b74565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c7f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610d4c602c913960400191505060405180910390fd5b610c936718b2e4dd03bc759a60c01b610b74565b610ca767f8b65e28b897a44f60c01b610b74565b610cbb67dbd823a6f693c9e360c01b6107b8565b610ccf6759af4a1e64a734ae60c01b6107b8565b610ce367123d1e7dcae181d060c01b6107b8565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fe436f6e74726f6c6c65643a206d73672e73656e646572206973206e6f742074686520636f6e74726f6c6c6572a164736f6c634300060c000a4163636f756e74436f6e74726f6c6c65723a2063616e6e6f7420736574206163636f756e7420496d706c656d656e746174696f6e20746f203078304163636f756e74436f6e74726f6c6c65723a2063616e6e6f742073656e6420746f2073656c664163636f756e74436f6e74726f6c6c65723a2063616e6e6f7420736574206163636f756e7420726567697374727920746f203078304163636f756e74436f6e74726f6c6c65723a2063616e6e6f742073656e6420746f203078304163636f756e74436f6e74726f6c6c65723a206163636f756e7420616c72656164792075706772616465644163636f756e74436f6e74726f6c6c65723a2063616e6e6f742073656e6420746f20636f6e74726f6c6c6572a164736f6c634300060c000a4163636f756e74436f6e74726f6c6c65723a2063616e6e6f7420736574206163636f756e7420496d706c656d656e746174696f6e20746f203078304163636f756e74436f6e74726f6c6c65723a2063616e6e6f7420736574206163636f756e7420726567697374727920746f20307830";

type AccountControllerMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccountControllerMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccountControllerMock__factory extends ContractFactory {
  constructor(...args: AccountControllerMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    accountRegistry_: string,
    accountImplementation_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AccountControllerMock> {
    return super.deploy(
      accountRegistry_,
      accountImplementation_,
      overrides || {}
    ) as Promise<AccountControllerMock>;
  }
  getDeployTransaction(
    accountRegistry_: string,
    accountImplementation_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      accountRegistry_,
      accountImplementation_,
      overrides || {}
    );
  }
  attach(address: string): AccountControllerMock {
    return super.attach(address) as AccountControllerMock;
  }
  connect(signer: Signer): AccountControllerMock__factory {
    return super.connect(signer) as AccountControllerMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountControllerMockInterface {
    return new utils.Interface(_abi) as AccountControllerMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccountControllerMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AccountControllerMock;
  }
}
