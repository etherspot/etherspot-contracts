/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AccountControllerMock,
  AccountControllerMockInterface,
} from "../AccountControllerMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "accountRegistry_",
        type: "address",
      },
      {
        internalType: "address",
        name: "accountImplementation_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "accountImplementation",
        type: "address",
      },
    ],
    name: "AccountDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "accountImplementation",
        type: "address",
      },
    ],
    name: "AccountImplementationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "accountRegistry",
        type: "address",
      },
    ],
    name: "AccountRegistryUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
    ],
    name: "AccountTransactionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "accountImplementation",
        type: "address",
      },
    ],
    name: "AccountUpgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "accountImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accountRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__19d98a43",
        type: "bytes8",
      },
    ],
    name: "c_19d98a43",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__9c0e30ce",
        type: "bytes8",
      },
    ],
    name: "c_9c0e30ce",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__19d98a43",
        type: "bytes8",
      },
    ],
    name: "c_false19d98a43",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__9c0e30ce",
        type: "bytes8",
      },
    ],
    name: "c_false9c0e30ce",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__19d98a43",
        type: "bytes8",
      },
    ],
    name: "c_true19d98a43",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__9c0e30ce",
        type: "bytes8",
      },
    ],
    name: "c_true9c0e30ce",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "computeAccountAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "deployAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeAccountTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "accountImplementation_",
        type: "address",
      },
    ],
    name: "setAccountImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "accountRegistry_",
        type: "address",
      },
    ],
    name: "setAccountRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "upgradeAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200340838038062003408833981810160405260408110156200003757600080fd5b8101908080519060200190929190805190602001909291905050506200006e67ed35f7a3189875fb60c01b620000dc60201b60201c565b6200008a6704365cf1a2b2ae7960c01b620000df60201b60201c565b620000a6673443c1ff80a7f25d60c01b620000df60201b60201c565b620000c267a089faa9a849ea3860c01b620000df60201b60201c565b620000d48282620000e260201b60201c565b5050620006c9565b50565b50565b620000fe6772ec7301e42c8a1d60c01b620000dc60201b60201c565b6200011a6721d2d4f3b7b051ed60c01b620000dc60201b60201c565b6200013667db49d23a799ff00d60c01b620000dc60201b60201c565b620001498260006200019860201b60201c565b62000165674799610ec63c6d2560c01b620000dc60201b60201c565b62000181672c1030cdc95e910160c01b620000dc60201b60201c565b620001948160006200042f60201b60201c565b5050565b620001b4675968fe1ec898767460c01b620000dc60201b60201c565b620001d0679d220815fc66b35760c01b620000dc60201b60201c565b620001ec675b9a14e7f46828c260c01b620000dc60201b60201c565b6200020867a4b0dd0d65987fd860c01b620000dc60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000290576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526035815260200180620033d36035913960400191505060405180910390fd5b620002ac67c8ecba52843914e660c01b620000dc60201b60201c565b620002c8679c9ebb999c0d025960c01b620000dc60201b60201c565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200032467ee9141a77b29e56e60c01b620000dc60201b60201c565b620003406738228049f4d0ba4360c01b620000dc60201b60201c565b80156200040e576200036367853c0f3d2713cf7060c01b620000dc60201b60201c565b6200037f67e0863fd1e259a80360c01b620000dc60201b60201c565b6200039b67ff6d0cec4dac9e7960c01b620000dc60201b60201c565b7f02e3c47057b8dc27a0929d3c394c314c73aa002d46939c31c9f71d1e77e86c1060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16200042b565b6200042a670f951329ff63bec160c01b620000dc60201b60201c565b5b5050565b6200044b6722155153c40a1b5f60c01b620000dc60201b60201c565b6200046767f20e9c66d2e35a3160c01b620000dc60201b60201c565b6200048367db72e4e2ad93d98560c01b620000dc60201b60201c565b6200049f67f0e859e97d05275260c01b620000dc60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000527576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b81526020018062003398603b913960400191505060405180910390fd5b6200054367d7c01e77cc7e1c1d60c01b620000dc60201b60201c565b6200055f67f01653ca7b735fca60c01b620000dc60201b60201c565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620005bc67ebbcda681215081760c01b620000dc60201b60201c565b620005d867affc4d1625d390ed60c01b620000dc60201b60201c565b8015620006a857620005fb67bb4ed37871a1a8bb60c01b620000dc60201b60201c565b6200061767570a96d870ee580460c01b620000dc60201b60201c565b6200063367f35a720d6b78a2a760c01b620000dc60201b60201c565b7f70d9f5a076620216a6050e493f3ce69749de0b68fa4b839ba2518660ba8b9cf0600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1620006c5565b620006c4671e3026b95074bc9a60c01b620000dc60201b60201c565b5b5050565b612cbf80620006d96000396000f3fe60806040523480156200001157600080fd5b5060043610620001005760003560e01c80635967b7ac1162000099578063d01a9cae116200006f578063d01a9cae1462000429578063d089e11a146200045a578063d53641231462000490578063e5c7278f14620004f25762000100565b80635967b7ac14620003345780636661a51e14620003965780637663f44c14620003dd5762000100565b8063264d5cb411620000db578063264d5cb414620001e45780633bdba7ef146200023f57806343013c24146200028b578063575e2c8d14620002d25762000100565b806309766da2146200010557806311464fbe146200014c5780631673f3b71462000182575b600080fd5b6200014a600480360360208110156200011d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620005fd565b005b620001566200064f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b620001cc600480360360208110156200019a57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505062000675565b60405180821515815260200191505060405180910390f35b6200021360048036036020811015620001fc57600080fd5b810190808035906020019092919050505062000680565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62000289600480360360208110156200025757600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050620006d6565b005b620002d060048036036020811015620002a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620006d9565b005b6200031c60048036036020811015620002ea57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506200072b565b60405180821515815260200191505060405180910390f35b6200037e600480360360208110156200034c57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505062000732565b60405180821515815260200191505060405180910390f35b620003db60048036036020811015620003ae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062000739565b005b6200042760048036036020811015620003f557600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506200078b565b005b62000458600480360360208110156200044157600080fd5b81019080803590602001909291905050506200078e565b005b62000464620007e1565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b620004da60048036036020811015620004a857600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505062000805565b60405180821515815260200191505060405180910390f35b620005fb600480360360808110156200050a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156200057257600080fd5b8201836020820111156200058557600080fd5b80359060200191846001830284011164010000000083111715620005a857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505062000810565b005b6200061367ff18b5487b39ae3760c01b620006d6565b6200062967797ce9081c69b82360c01b620006d6565b6200063f6720a02535314b391f60c01b620006d6565b6200064c81600162000869565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060019050919050565b6000620006986789e7521da69f427560c01b620006d6565b620006ae67785f6f97ac72a8f960c01b620006d6565b620006c4672740b70a6304170960c01b620006d6565b620006cf8262000abb565b9050919050565b50565b620006ef6702f240c307ad137f60c01b620006d6565b620007056755e7ab8e0655bed660c01b620006d6565b6200071b678508f54dd0bb597960c01b620006d6565b6200072881600162000d4d565b50565b6000919050565b6000919050565b6200074f6752bd353391c22bdb60c01b620006d6565b62000765679cdce4cae9d09de660c01b620006d6565b6200077b67280411e93506bc1f60c01b620006d6565b62000788816001620010db565b50565b50565b620007a467c5e08ab7367d6a7c60c01b620006d6565b620007ba67b7b72ed95d918ae860c01b620006d6565b620007d067891a1ffe9fa55b5260c01b620006d6565b620007dd8160016200132a565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060019050919050565b6200082667cb6f8de23c9f4d5060c01b620006d6565b6200083c67bbfef8699681b46960c01b620006d6565b62000852671712d668694c4cbc60c01b620006d6565b6200086284848484600162001579565b5050505050565b6200087f6722155153c40a1b5f60c01b6200078b565b6200089567f20e9c66d2e35a3160c01b6200078b565b620008ab67db72e4e2ad93d98560c01b6200078b565b620008c167f0e859e97d05275260c01b6200078b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000949576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b81526020018062002ba1603b913960400191505060405180910390fd5b6200095f67d7c01e77cc7e1c1d60c01b6200078b565b6200097567f01653ca7b735fca60c01b6200078b565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620009cc67ebbcda681215081760c01b6200078b565b620009e267affc4d1625d390ed60c01b6200078b565b801562000aa057620009ff67bb4ed37871a1a8bb60c01b6200078b565b62000a1567570a96d870ee580460c01b6200078b565b62000a2b67f35a720d6b78a2a760c01b6200078b565b7f70d9f5a076620216a6050e493f3ce69749de0b68fa4b839ba2518660ba8b9cf0600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a162000ab7565b62000ab6671e3026b95074bc9a60c01b6200078b565b5b5050565b600062000ad367d4b3f64c630a4ce860c01b6200078b565b62000ae9678a40bda45de85f3f60c01b6200078b565b62000aff676c7db5bc49bb2b0360c01b6200078b565b60606040518060200162000b139062001c60565b6020820181038252601f19601f82011660405250600060a01b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600060a01b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516020018086805190602001908083835b6020831062000bad578051825260208201915060208101905060208303925062000b88565b6001836020036101000a0380198251168184511680821785525050505050509050018573ffffffffffffffffffffffffffffffffffffffff19168152600c018473ffffffffffffffffffffffffffffffffffffffff1660601b81526014018373ffffffffffffffffffffffffffffffffffffffff19168152600c018273ffffffffffffffffffffffffffffffffffffffff1660601b815260140195505050505050604051602081830303815290604052905062000c7567679523aa80c5906c60c01b6200078b565b62000c8b67f39ec9d42861761660c01b6200078b565b600060ff60f81b3085848051906020012060405160200180857effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526001018473ffffffffffffffffffffffffffffffffffffffff1660601b815260140183815260200182815260200194505050505060405160208183030381529060405280519060200120905062000d2a6762bfbc1a20b53a1c60c01b6200078b565b62000d40679f7108ab066024f760c01b6200078b565b8060001c92505050919050565b62000d636783bc461093211d3060c01b6200078b565b62000d7967617e9b3d3be0998260c01b6200078b565b62000d8f67c56eea6a8eb29d2660c01b6200078b565b62000da567e1061eb3258a678560c01b6200078b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b15801562000e2557600080fd5b505afa15801562000e3a573d6000803e3d6000fd5b505050506040513d602081101562000e5157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16141562000ed1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018062002c5c602b913960400191505060405180910390fd5b62000ee767902b425eef99e09160c01b6200078b565b62000efd673ec947506b40999760c01b6200078b565b62000f1367324538136ed2b8d160c01b6200078b565b8173ffffffffffffffffffffffffffffffffffffffff1663d784d426600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801562000f9f57600080fd5b505af115801562000fb4573d6000803e3d6000fd5b5050505062000fce677255e205202bfa4c60c01b6200078b565b62000fe467aea7be51d4635a2360c01b6200078b565b8015620010c05762001001674e29f1020f1024f360c01b6200078b565b62001017677c29b4b2bd2fba7860c01b6200078b565b6200102d677de244ccb8c8bb7a60c01b6200078b565b7feec27cdb8bd6f55c2c537deb52ab094a2437e85ef5197e6f064f90bff3ff563f82600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1620010d7565b620010d667e28f65ded3d13a6260c01b6200078b565b5b5050565b620010f1675968fe1ec898767460c01b6200078b565b62001107679d220815fc66b35760c01b6200078b565b6200111d675b9a14e7f46828c260c01b6200078b565b6200113367a4b0dd0d65987fd860c01b6200078b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620011bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603581526020018062002c026035913960400191505060405180910390fd5b620011d167c8ecba52843914e660c01b6200078b565b620011e7679c9ebb999c0d025960c01b6200078b565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200123d67ee9141a77b29e56e60c01b6200078b565b620012536738228049f4d0ba4360c01b6200078b565b80156200130f576200127067853c0f3d2713cf7060c01b6200078b565b6200128667e0863fd1e259a80360c01b6200078b565b6200129c67ff6d0cec4dac9e7960c01b6200078b565b7f02e3c47057b8dc27a0929d3c394c314c73aa002d46939c31c9f71d1e77e86c1060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a162001326565b62001325670f951329ff63bec160c01b6200078b565b5b5050565b600062001342679d389de6d68d241660c01b6200078b565b620013586748b3214db43af81260c01b6200078b565b6200136e6786335e4138f9c31b60c01b6200078b565b60008360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051620013c39062001c60565b808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff168152602001925050508190604051809103906000f590508015801562001421573d6000803e3d6000fd5b5090506200143a671d71f50b8832468860c01b6200078b565b6200145067932720351f5db02e60c01b6200078b565b82156200152c576200146d67cb6fd4a3465cd33e60c01b6200078b565b62001483678a137017d97a8f9260c01b6200078b565b6200149967ff330ffc3759e4fe60c01b6200078b565b7f2682a218602b9036c9869f006c5405ee4a1a65267653eb7e286123e5e1afde4c81600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a162001543565b620015426765386ca46668cd5d60c01b6200078b565b5b62001559673a15f96670c128ec60c01b6200078b565b6200156f673623e84ed338a3a560c01b6200078b565b8091505092915050565b6060620015916714b348dd74a0589a60c01b6200078b565b620015a767a4e12246e11c405360c01b6200078b565b620015bd67ec852a336af6297760c01b6200078b565b620015d367c1a38b62066025c060c01b6200078b565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614156200165b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018062002c376025913960400191505060405180910390fd5b6200167167fac2583ae8c90b8b60c01b6200078b565b62001687678bf253bfb35241b260c01b6200078b565b6200169d6799051d8455f27cae60c01b6200078b565b620016b367eb6984018178d3d860c01b6200078b565b3073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614156200173a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018062002c87602c913960400191505060405180910390fd5b6200175067ae8d8659bf4a71ff60c01b6200078b565b620017666795cdcbc902d83d5f60c01b6200078b565b6200177c6708a707cf364ec96660c01b6200078b565b62001792675acbe141f9f070ed60c01b6200078b565b8573ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141562001819576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018062002bdc6026913960400191505060405180910390fd5b6200182f6743d42e9f54fc8cc460c01b6200078b565b62001845678ce3637596b502c460c01b6200078b565b6200185b67e6db984a386aba2c60c01b6200078b565b60608673ffffffffffffffffffffffffffffffffffffffff16633f579f428787876040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015620018ef578082015181840152602081019050620018d2565b50505050905090810190601f1680156200191d5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b1580156200193f57600080fd5b505af115801562001954573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156200197f57600080fd5b8101908080516040519392919084640100000000821115620019a057600080fd5b83820191506020820185811115620019b757600080fd5b8251866001820283011164010000000082111715620019d557600080fd5b8083526020830192505050908051906020019080838360005b8381101562001a0b578082015181840152602081019050620019ee565b50505050905090810190601f16801562001a395780820380516001836020036101000a031916815260200191505b50604052505050905062001a58677603e15a62cf534f60c01b6200078b565b62001a6e67f8b2cfc274061ebd60c01b6200078b565b821562001c105762001a8b67c8f174bcc31b73cf60c01b6200078b565b62001aa167242e0542658aa42960c01b6200078b565b62001ab76742ba8f2511a37cc760c01b6200078b565b7f99eeae1fb8801e2e878e060ec5e5b3557b3c4f8106e35d88cb573f293dae4e248787878785604051808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101562001b6157808201518184015260208101905062001b44565b50505050905090810190601f16801562001b8f5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101562001bca57808201518184015260208101905062001bad565b50505050905090810190601f16801562001bf85780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390a162001c27565b62001c266740f6a25f6b1535fe60c01b6200078b565b5b62001c3d6704c815f4ec92c8a660c01b6200078b565b62001c53674dee101f14ab7ca760c01b6200078b565b8091505095945050505050565b610f328062001c6f8339019056fe608060405234801561001057600080fd5b50604051610f32380380610f328339818101604052604081101561003357600080fd5b81019080805190602001909291908051906020019092919050505061006867471bedfea992ac9e60c01b61019960201b60201c565b61008267ffbbdd64e968d82c60c01b61019960201b60201c565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100dc675b991842533372b860c01b61019c60201b60201c565b6100f667d2d8914cc8fad59b60c01b61019c60201b60201c565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061015167d1f631705cef9e2e60c01b61019c60201b60201c565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061019f565b50565b50565b610d84806101ae6000396000f3fe6080604052600436106100e15760003560e01c80637b1039991161007f578063b49762a111610059578063b49762a114610664578063d784d426146106d0578063dd54622814610721578063f77c479114610777576100e8565b80637b103999146105775780638f27e6b6146105b8578063abe124f61461060e576100e8565b806334d23875116100bb57806334d23875146103355780633f579f42146103a15780635c60da1b146104ca5780636480a27b1461050b576100e8565b8063062e4f9c146101f15780631454d4701461025d5780632486e26f146102c9576100e8565b366100e857005b3480156100f457600080fd5b50610109672d966d96fd7e7b2e60c01b6107b8565b61011d6790effab3f6b29ec960c01b6107b8565b61013167267c769ec81b145660c01b6107b8565b600080369050146101db576101506793df8308117162f860c01b6107b8565b610164679684421dcf31f23160c01b6107b8565b6101786733a9ec42372d700960c01b6107b8565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506101b367e173c6e5f14b9c0e60c01b6107b8565b368060008037600080826000855af43d806000803e81600081146101d657816000f35b816000fd5b6101ef675d8752c41446766660c01b6107b8565b005b3480156101fd57600080fd5b506102456004803603602081101561021457600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506107bb565b60405180821515815260200191505060405180910390f35b34801561026957600080fd5b506102b16004803603602081101561028057600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506107c2565b60405180821515815260200191505060405180910390f35b3480156102d557600080fd5b5061031d600480360360208110156102ec57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506107c9565b60405180821515815260200191505060405180910390f35b34801561034157600080fd5b506103896004803603602081101561035857600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506107d4565b60405180821515815260200191505060405180910390f35b3480156103ad57600080fd5b5061044f600480360360608110156103c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561040b57600080fd5b82018360208201111561041d57600080fd5b8035906020019184600183028401116401000000008311171561043f57600080fd5b90919293919293905050506107df565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561048f578082015181840152602081019050610474565b50505050905090810190601f1680156104bc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156104d657600080fd5b506104df610b13565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561051757600080fd5b5061055f6004803603602081101561052e57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610b39565b60405180821515815260200191505060405180910390f35b34801561058357600080fd5b5061058c610b44565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105c457600080fd5b5061060c600480360360208110156105db57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610b6a565b005b34801561061a57600080fd5b506106626004803603602081101561063157600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610b6d565b005b34801561067057600080fd5b506106b86004803603602081101561068757600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610b70565b60405180821515815260200191505060405180910390f35b3480156106dc57600080fd5b5061071f600480360360208110156106f357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b77565b005b34801561072d57600080fd5b506107756004803603602081101561074457600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506107b8565b005b34801561078357600080fd5b5061078c610d27565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b50565b6000919050565b6000919050565b600060019050919050565b600060019050919050565b60606107f5679c85e5eeeeacb2eb60c01b6107b8565b610809674942cb926bd63bf160c01b610b6d565b61081d67ad93ce02bf35bdae60c01b610b6d565b610831679f617ec08a4dee0160c01b610b6d565b61084567e08252734cb8a1f860c01b610b6d565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610d4c602c913960400191505060405180910390fd5b6108fd67760347729cd54e1260c01b610b6d565b6109116706d0fdb977bc52ba60c01b610b6d565b610925671c5ef2c5410ecced60c01b6107b8565b610939677d92c04994b6611360c01b6107b8565b61094d675f11463de051704d60c01b6107b8565b61096167b05962998d315e4460c01b6107b8565b6060610977674e22c6186f0f4bbf60c01b6107b8565b61098b67752b5dd9ffa3e84a60c01b6107b8565b60006109a167beb2e3555778182260c01b6107b8565b8673ffffffffffffffffffffffffffffffffffffffff1686868660405180838380828437808301925050509250505060006040518083038185875af1925050503d8060008114610a0d576040519150601f19603f3d011682016040523d82523d6000602084013e610a12565b606091505b508093508192505050610a2f675a8e58a520e9396a60c01b6107b8565b610a43674ed41c8d60a8531e60c01b6107b8565b610a576711731ff7b4d130dd60c01b6107b8565b80610aca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4163636f756e743a207472616e73616374696f6e20726576657274656400000081525060200191505060405180910390fd5b610ade675c5a9353efd3cdb060c01b6107b8565b610af2673cc492a5c7f0811560c01b6107b8565b610b0667aa5e7050f2e2e6d060c01b6107b8565b8192505050949350505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060019050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b50565b50565b6000919050565b610b8b673438f7a345e0ba0360c01b6107b8565b610b9f674942cb926bd63bf160c01b610b6d565b610bb367ad93ce02bf35bdae60c01b610b6d565b610bc7679f617ec08a4dee0160c01b610b6d565b610bdb67e08252734cb8a1f860c01b610b6d565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c7f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610d4c602c913960400191505060405180910390fd5b610c9367760347729cd54e1260c01b610b6d565b610ca76706d0fdb977bc52ba60c01b610b6d565b610cbb679a568a7aac48109460c01b6107b8565b610ccf67ed292e5a6813d7ec60c01b6107b8565b610ce367c6fcc459c0a5125160c01b6107b8565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fe436f6e74726f6c6c65643a206d73672e73656e646572206973206e6f742074686520636f6e74726f6c6c6572a164736f6c634300060c000a4163636f756e74436f6e74726f6c6c65723a2063616e6e6f7420736574206163636f756e7420496d706c656d656e746174696f6e20746f203078304163636f756e74436f6e74726f6c6c65723a2063616e6e6f742073656e6420746f2073656c664163636f756e74436f6e74726f6c6c65723a2063616e6e6f7420736574206163636f756e7420726567697374727920746f203078304163636f756e74436f6e74726f6c6c65723a2063616e6e6f742073656e6420746f203078304163636f756e74436f6e74726f6c6c65723a206163636f756e7420616c72656164792075706772616465644163636f756e74436f6e74726f6c6c65723a2063616e6e6f742073656e6420746f20636f6e74726f6c6c6572a164736f6c634300060c000a4163636f756e74436f6e74726f6c6c65723a2063616e6e6f7420736574206163636f756e7420496d706c656d656e746174696f6e20746f203078304163636f756e74436f6e74726f6c6c65723a2063616e6e6f7420736574206163636f756e7420726567697374727920746f20307830";

type AccountControllerMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccountControllerMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccountControllerMock__factory extends ContractFactory {
  constructor(...args: AccountControllerMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    accountRegistry_: string,
    accountImplementation_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AccountControllerMock> {
    return super.deploy(
      accountRegistry_,
      accountImplementation_,
      overrides || {}
    ) as Promise<AccountControllerMock>;
  }
  getDeployTransaction(
    accountRegistry_: string,
    accountImplementation_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      accountRegistry_,
      accountImplementation_,
      overrides || {}
    );
  }
  attach(address: string): AccountControllerMock {
    return super.attach(address) as AccountControllerMock;
  }
  connect(signer: Signer): AccountControllerMock__factory {
    return super.connect(signer) as AccountControllerMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountControllerMockInterface {
    return new utils.Interface(_abi) as AccountControllerMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccountControllerMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AccountControllerMock;
  }
}
