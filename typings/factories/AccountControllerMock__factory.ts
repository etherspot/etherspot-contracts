/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AccountControllerMock,
  AccountControllerMockInterface,
} from "../AccountControllerMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "accountRegistry_",
        type: "address",
      },
      {
        internalType: "address",
        name: "accountImplementation_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "accountImplementation",
        type: "address",
      },
    ],
    name: "AccountDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "accountImplementation",
        type: "address",
      },
    ],
    name: "AccountImplementationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "accountRegistry",
        type: "address",
      },
    ],
    name: "AccountRegistryUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
    ],
    name: "AccountTransactionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "accountImplementation",
        type: "address",
      },
    ],
    name: "AccountUpgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "accountImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accountRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__19d98a43",
        type: "bytes8",
      },
    ],
    name: "c_19d98a43",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__9c0e30ce",
        type: "bytes8",
      },
    ],
    name: "c_9c0e30ce",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__19d98a43",
        type: "bytes8",
      },
    ],
    name: "c_false19d98a43",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__9c0e30ce",
        type: "bytes8",
      },
    ],
    name: "c_false9c0e30ce",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__19d98a43",
        type: "bytes8",
      },
    ],
    name: "c_true19d98a43",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "c__9c0e30ce",
        type: "bytes8",
      },
    ],
    name: "c_true9c0e30ce",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "computeAccountAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "deployAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeAccountTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "accountImplementation_",
        type: "address",
      },
    ],
    name: "setAccountImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "accountRegistry_",
        type: "address",
      },
    ],
    name: "setAccountRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "upgradeAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200340838038062003408833981810160405260408110156200003757600080fd5b8101908080519060200190929190805190602001909291905050506200006e670cdabaa809e28a7b60c01b620000dc60201b60201c565b6200008a678ef05c7de740336060c01b620000df60201b60201c565b620000a66744ff713413dc526a60c01b620000df60201b60201c565b620000c26706d84552adcb54dc60c01b620000df60201b60201c565b620000d48282620000e260201b60201c565b5050620006c9565b50565b50565b620000fe6769144185cabb2a6460c01b620000dc60201b60201c565b6200011a67c7eff070cc97002f60c01b620000dc60201b60201c565b62000136676e2aae8dcdc8007c60c01b620000dc60201b60201c565b620001498260006200019860201b60201c565b62000165676940548be3f2a9b960c01b620000dc60201b60201c565b6200018167a4ea0ed61ccdc75260c01b620000dc60201b60201c565b620001948160006200042f60201b60201c565b5050565b620001b46759257e484349f60a60c01b620000dc60201b60201c565b620001d067f4e4eed174a3a9ee60c01b620000dc60201b60201c565b620001ec67720b1c7d7b0af4a860c01b620000dc60201b60201c565b6200020867e56ad534d5106c0860c01b620000dc60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000290576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526035815260200180620033d36035913960400191505060405180910390fd5b620002ac675d8e1e3e728ccb2960c01b620000dc60201b60201c565b620002c8679ef789fd3bc59dcd60c01b620000dc60201b60201c565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200032467a6ba364fe1a9813460c01b620000dc60201b60201c565b6200034067707b8f92126b8c5360c01b620000dc60201b60201c565b80156200040e576200036367f9b4bf5b3daf568960c01b620000dc60201b60201c565b6200037f677ccd242611ca419760c01b620000dc60201b60201c565b6200039b673d936fe1014799fe60c01b620000dc60201b60201c565b7f02e3c47057b8dc27a0929d3c394c314c73aa002d46939c31c9f71d1e77e86c1060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16200042b565b6200042a673f51aa24584f51c260c01b620000dc60201b60201c565b5b5050565b6200044b6783c2d9600ceceeaf60c01b620000dc60201b60201c565b62000467679f53a9694754505360c01b620000dc60201b60201c565b62000483674e667d4d7ad8af5160c01b620000dc60201b60201c565b6200049f67723f9a679b9f061360c01b620000dc60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000527576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b81526020018062003398603b913960400191505060405180910390fd5b6200054367f9cb5c5e3bd4d0ea60c01b620000dc60201b60201c565b6200055f67335ed371d47bd49b60c01b620000dc60201b60201c565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620005bc67095b2b8506839bb960c01b620000dc60201b60201c565b620005d867c2cbd28cf17a42f160c01b620000dc60201b60201c565b8015620006a857620005fb679ba037499bcc570860c01b620000dc60201b60201c565b6200061767f6d4a8c41f3ac22560c01b620000dc60201b60201c565b62000633679ed29a61e951e55e60c01b620000dc60201b60201c565b7f70d9f5a076620216a6050e493f3ce69749de0b68fa4b839ba2518660ba8b9cf0600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1620006c5565b620006c4674e1a55814846cb8760c01b620000dc60201b60201c565b5b5050565b612cbf80620006d96000396000f3fe60806040523480156200001157600080fd5b5060043610620001005760003560e01c80635967b7ac1162000099578063d01a9cae116200006f578063d01a9cae1462000429578063d089e11a146200045a578063d53641231462000490578063e5c7278f14620004f25762000100565b80635967b7ac14620003345780636661a51e14620003965780637663f44c14620003dd5762000100565b8063264d5cb411620000db578063264d5cb414620001e45780633bdba7ef146200023f57806343013c24146200028b578063575e2c8d14620002d25762000100565b806309766da2146200010557806311464fbe146200014c5780631673f3b71462000182575b600080fd5b6200014a600480360360208110156200011d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620005fd565b005b620001566200064f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b620001cc600480360360208110156200019a57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505062000675565b60405180821515815260200191505060405180910390f35b6200021360048036036020811015620001fc57600080fd5b810190808035906020019092919050505062000680565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62000289600480360360208110156200025757600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050620006d6565b005b620002d060048036036020811015620002a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620006d9565b005b6200031c60048036036020811015620002ea57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506200072b565b60405180821515815260200191505060405180910390f35b6200037e600480360360208110156200034c57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505062000732565b60405180821515815260200191505060405180910390f35b620003db60048036036020811015620003ae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062000739565b005b6200042760048036036020811015620003f557600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506200078b565b005b62000458600480360360208110156200044157600080fd5b81019080803590602001909291905050506200078e565b005b62000464620007e1565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b620004da60048036036020811015620004a857600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505062000805565b60405180821515815260200191505060405180910390f35b620005fb600480360360808110156200050a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156200057257600080fd5b8201836020820111156200058557600080fd5b80359060200191846001830284011164010000000083111715620005a857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505062000810565b005b62000613673476743800c20b6460c01b620006d6565b6200062967f621c1440d0c726260c01b620006d6565b6200063f6760ae4d2357e37f7f60c01b620006d6565b6200064c81600162000869565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060019050919050565b60006200069867ac59dda22ab9ee8b60c01b620006d6565b620006ae67d13210667f1eb82060c01b620006d6565b620006c4674dd0c02a9fcbc05860c01b620006d6565b620006cf8262000abb565b9050919050565b50565b620006ef670ac81064f542a47360c01b620006d6565b620007056778c9804d5a1479f760c01b620006d6565b6200071b677087ccabe2157cda60c01b620006d6565b6200072881600162000d4d565b50565b6000919050565b6000919050565b6200074f6713779c057106eec360c01b620006d6565b62000765675791c8c5a2f27c1560c01b620006d6565b6200077b678b5075fce36aab3f60c01b620006d6565b62000788816001620010db565b50565b50565b620007a467a2061e67f2dc787b60c01b620006d6565b620007ba673a4796917cfa3bfd60c01b620006d6565b620007d067f96c12b84b51d5fa60c01b620006d6565b620007dd8160016200132a565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060019050919050565b62000826673418486685a7b8e960c01b620006d6565b6200083c67ab3244f7b8e4f3de60c01b620006d6565b62000852671eaee384352f8f1f60c01b620006d6565b6200086284848484600162001579565b5050505050565b6200087f6783c2d9600ceceeaf60c01b6200078b565b62000895679f53a9694754505360c01b6200078b565b620008ab674e667d4d7ad8af5160c01b6200078b565b620008c167723f9a679b9f061360c01b6200078b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000949576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b81526020018062002ba1603b913960400191505060405180910390fd5b6200095f67f9cb5c5e3bd4d0ea60c01b6200078b565b6200097567335ed371d47bd49b60c01b6200078b565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620009cc67095b2b8506839bb960c01b6200078b565b620009e267c2cbd28cf17a42f160c01b6200078b565b801562000aa057620009ff679ba037499bcc570860c01b6200078b565b62000a1567f6d4a8c41f3ac22560c01b6200078b565b62000a2b679ed29a61e951e55e60c01b6200078b565b7f70d9f5a076620216a6050e493f3ce69749de0b68fa4b839ba2518660ba8b9cf0600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a162000ab7565b62000ab6674e1a55814846cb8760c01b6200078b565b5b5050565b600062000ad367e34840e82a0c604360c01b6200078b565b62000ae967bbb8008e86a360a860c01b6200078b565b62000aff6783c253153d0dcf3160c01b6200078b565b60606040518060200162000b139062001c60565b6020820181038252601f19601f82011660405250600060a01b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600060a01b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516020018086805190602001908083835b6020831062000bad578051825260208201915060208101905060208303925062000b88565b6001836020036101000a0380198251168184511680821785525050505050509050018573ffffffffffffffffffffffffffffffffffffffff19168152600c018473ffffffffffffffffffffffffffffffffffffffff1660601b81526014018373ffffffffffffffffffffffffffffffffffffffff19168152600c018273ffffffffffffffffffffffffffffffffffffffff1660601b815260140195505050505050604051602081830303815290604052905062000c75674bd1c5f95652595a60c01b6200078b565b62000c8b675b5c321849615de260c01b6200078b565b600060ff60f81b3085848051906020012060405160200180857effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526001018473ffffffffffffffffffffffffffffffffffffffff1660601b815260140183815260200182815260200194505050505060405160208183030381529060405280519060200120905062000d2a67842ebf405acd05c960c01b6200078b565b62000d40671ca9d4333618394f60c01b6200078b565b8060001c92505050919050565b62000d63675b435ac4f7c5314d60c01b6200078b565b62000d79675c1473c960b0672d60c01b6200078b565b62000d8f67527f76481462b8e860c01b6200078b565b62000da567c1d949efa570b63960c01b6200078b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b15801562000e2557600080fd5b505afa15801562000e3a573d6000803e3d6000fd5b505050506040513d602081101562000e5157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16141562000ed1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018062002c5c602b913960400191505060405180910390fd5b62000ee767608efe7a7852fb7460c01b6200078b565b62000efd67e8d7960c14a18e7e60c01b6200078b565b62000f13678d54d91ac1eb113b60c01b6200078b565b8173ffffffffffffffffffffffffffffffffffffffff1663d784d426600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801562000f9f57600080fd5b505af115801562000fb4573d6000803e3d6000fd5b5050505062000fce670c103b9d4691d31c60c01b6200078b565b62000fe4678aa71f047967730960c01b6200078b565b8015620010c0576200100167ed4cd76a89a0c09960c01b6200078b565b62001017676d18076aa1a4f40760c01b6200078b565b6200102d672947c11eac063e5660c01b6200078b565b7feec27cdb8bd6f55c2c537deb52ab094a2437e85ef5197e6f064f90bff3ff563f82600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1620010d7565b620010d667f6f725560d9d712960c01b6200078b565b5b5050565b620010f16759257e484349f60a60c01b6200078b565b6200110767f4e4eed174a3a9ee60c01b6200078b565b6200111d67720b1c7d7b0af4a860c01b6200078b565b6200113367e56ad534d5106c0860c01b6200078b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620011bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603581526020018062002c026035913960400191505060405180910390fd5b620011d1675d8e1e3e728ccb2960c01b6200078b565b620011e7679ef789fd3bc59dcd60c01b6200078b565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200123d67a6ba364fe1a9813460c01b6200078b565b6200125367707b8f92126b8c5360c01b6200078b565b80156200130f576200127067f9b4bf5b3daf568960c01b6200078b565b62001286677ccd242611ca419760c01b6200078b565b6200129c673d936fe1014799fe60c01b6200078b565b7f02e3c47057b8dc27a0929d3c394c314c73aa002d46939c31c9f71d1e77e86c1060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a162001326565b62001325673f51aa24584f51c260c01b6200078b565b5b5050565b600062001342673e395782e91e1bb860c01b6200078b565b6200135867dfbee3ef6e6a74ff60c01b6200078b565b6200136e67dea9206de3f4d66360c01b6200078b565b60008360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051620013c39062001c60565b808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff168152602001925050508190604051809103906000f590508015801562001421573d6000803e3d6000fd5b5090506200143a6749857d637a1b37da60c01b6200078b565b6200145067eb8b6945057b86b760c01b6200078b565b82156200152c576200146d672b4a877eda1b5c8d60c01b6200078b565b6200148367820d658cad88fb5360c01b6200078b565b6200149967398bd7078b270ab660c01b6200078b565b7f2682a218602b9036c9869f006c5405ee4a1a65267653eb7e286123e5e1afde4c81600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a162001543565b6200154267de18f757957f228b60c01b6200078b565b5b62001559673197d506bcf2602460c01b6200078b565b6200156f67b473c319a76b760d60c01b6200078b565b8091505092915050565b60606200159167814286c67294274f60c01b6200078b565b620015a767d0d16f1b8fc356b560c01b6200078b565b620015bd67472c5e9e216fb45c60c01b6200078b565b620015d36789fb98f438a6f12760c01b6200078b565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614156200165b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018062002c376025913960400191505060405180910390fd5b620016716787fd09fd3c3e3f3960c01b6200078b565b6200168767524744b09449860960c01b6200078b565b6200169d673236b0973d64465a60c01b6200078b565b620016b36732c4c78506603f6e60c01b6200078b565b3073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614156200173a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018062002c87602c913960400191505060405180910390fd5b6200175067a265539070ced0a060c01b6200078b565b6200176667d30ac36fed552ccf60c01b6200078b565b6200177c6780fd837f8ef149c260c01b6200078b565b6200179267288c5d3d81d6014b60c01b6200078b565b8573ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141562001819576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018062002bdc6026913960400191505060405180910390fd5b6200182f672fe5da791f71fd0260c01b6200078b565b62001845671e6c858814b5ee5960c01b6200078b565b6200185b671d05f6292d669dbe60c01b6200078b565b60608673ffffffffffffffffffffffffffffffffffffffff16633f579f428787876040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015620018ef578082015181840152602081019050620018d2565b50505050905090810190601f1680156200191d5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b1580156200193f57600080fd5b505af115801562001954573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156200197f57600080fd5b8101908080516040519392919084640100000000821115620019a057600080fd5b83820191506020820185811115620019b757600080fd5b8251866001820283011164010000000082111715620019d557600080fd5b8083526020830192505050908051906020019080838360005b8381101562001a0b578082015181840152602081019050620019ee565b50505050905090810190601f16801562001a395780820380516001836020036101000a031916815260200191505b50604052505050905062001a5867a86be8a6197d8f7160c01b6200078b565b62001a6e6704c45898d7a3dc4960c01b6200078b565b821562001c105762001a8b677cf9f736f125866560c01b6200078b565b62001aa167529d2735d132cf1560c01b6200078b565b62001ab767b057ac5e90ed49b660c01b6200078b565b7f99eeae1fb8801e2e878e060ec5e5b3557b3c4f8106e35d88cb573f293dae4e248787878785604051808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101562001b6157808201518184015260208101905062001b44565b50505050905090810190601f16801562001b8f5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101562001bca57808201518184015260208101905062001bad565b50505050905090810190601f16801562001bf85780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390a162001c27565b62001c26674acbed85c648bd9f60c01b6200078b565b5b62001c3d67bfd3d2acf9c6fd0360c01b6200078b565b62001c5367af52996cec740e0c60c01b6200078b565b8091505095945050505050565b610f328062001c6f8339019056fe608060405234801561001057600080fd5b50604051610f32380380610f328339818101604052604081101561003357600080fd5b81019080805190602001909291908051906020019092919050505061006867b6012af9acb9264060c01b61019960201b60201c565b6100826727f467a9e7d89ff760c01b61019960201b60201c565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100dc67f175c5ef2e49c6f360c01b61019c60201b60201c565b6100f667c318ba095176bebb60c01b61019c60201b60201c565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610151672a8b2ea5e921c9d460c01b61019c60201b60201c565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061019f565b50565b50565b610d84806101ae6000396000f3fe6080604052600436106100e15760003560e01c80637b1039991161007f578063b49762a111610059578063b49762a114610664578063d784d426146106d0578063dd54622814610721578063f77c479114610777576100e8565b80637b103999146105775780638f27e6b6146105b8578063abe124f61461060e576100e8565b806334d23875116100bb57806334d23875146103355780633f579f42146103a15780635c60da1b146104ca5780636480a27b1461050b576100e8565b8063062e4f9c146101f15780631454d4701461025d5780632486e26f146102c9576100e8565b366100e857005b3480156100f457600080fd5b506101096709619ef9c11b3b8060c01b6107b8565b61011d67f676fea30541dd5560c01b6107b8565b61013167e5c11d251eb5286460c01b6107b8565b600080369050146101db5761015067c2d6781a706852d860c01b6107b8565b610164670eb6c0c0d55e29ed60c01b6107b8565b61017867bb9b653a710e7d3460c01b6107b8565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506101b3671b09e5380a92fb0b60c01b6107b8565b368060008037600080826000855af43d806000803e81600081146101d657816000f35b816000fd5b6101ef6750d3724dcbeedf9a60c01b6107b8565b005b3480156101fd57600080fd5b506102456004803603602081101561021457600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506107bb565b60405180821515815260200191505060405180910390f35b34801561026957600080fd5b506102b16004803603602081101561028057600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506107c2565b60405180821515815260200191505060405180910390f35b3480156102d557600080fd5b5061031d600480360360208110156102ec57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506107c9565b60405180821515815260200191505060405180910390f35b34801561034157600080fd5b506103896004803603602081101561035857600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506107d4565b60405180821515815260200191505060405180910390f35b3480156103ad57600080fd5b5061044f600480360360608110156103c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561040b57600080fd5b82018360208201111561041d57600080fd5b8035906020019184600183028401116401000000008311171561043f57600080fd5b90919293919293905050506107df565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561048f578082015181840152602081019050610474565b50505050905090810190601f1680156104bc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156104d657600080fd5b506104df610b13565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561051757600080fd5b5061055f6004803603602081101561052e57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610b39565b60405180821515815260200191505060405180910390f35b34801561058357600080fd5b5061058c610b44565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105c457600080fd5b5061060c600480360360208110156105db57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610b6a565b005b34801561061a57600080fd5b506106626004803603602081101561063157600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610b6d565b005b34801561067057600080fd5b506106b86004803603602081101561068757600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610b70565b60405180821515815260200191505060405180910390f35b3480156106dc57600080fd5b5061071f600480360360208110156106f357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b77565b005b34801561072d57600080fd5b506107756004803603602081101561074457600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506107b8565b005b34801561078357600080fd5b5061078c610d27565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b50565b6000919050565b6000919050565b600060019050919050565b600060019050919050565b60606107f567eee3f9ec5935eb6860c01b6107b8565b6108096784d0485b592a236360c01b610b6d565b61081d6732d9e05dbcd2297760c01b610b6d565b610831671853580eb63b1ec060c01b610b6d565b61084567a3f5c255d67cc36460c01b610b6d565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610d4c602c913960400191505060405180910390fd5b6108fd67eac11ea12abcf59860c01b610b6d565b6109116792057f91aa5d96c960c01b610b6d565b610925678a63af5cb8a3f79c60c01b6107b8565b610939676598b80b54afdc5160c01b6107b8565b61094d67ef93835eacac185c60c01b6107b8565b61096167e414a8c47c82cfe160c01b6107b8565b60606109776774502289d71b0ce760c01b6107b8565b61098b67a95b6c2f179d571c60c01b6107b8565b60006109a167a757a69782eceed560c01b6107b8565b8673ffffffffffffffffffffffffffffffffffffffff1686868660405180838380828437808301925050509250505060006040518083038185875af1925050503d8060008114610a0d576040519150601f19603f3d011682016040523d82523d6000602084013e610a12565b606091505b508093508192505050610a2f673d0da100db52b18f60c01b6107b8565b610a4367995eab671c21703e60c01b6107b8565b610a5767998bc87c43b4a23d60c01b6107b8565b80610aca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4163636f756e743a207472616e73616374696f6e20726576657274656400000081525060200191505060405180910390fd5b610ade6798bf417d73919c8760c01b6107b8565b610af26799a21a792479403360c01b6107b8565b610b066738a58038f9ebb1bf60c01b6107b8565b8192505050949350505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060019050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b50565b50565b6000919050565b610b8b6762ddd258e77e4f4e60c01b6107b8565b610b9f6784d0485b592a236360c01b610b6d565b610bb36732d9e05dbcd2297760c01b610b6d565b610bc7671853580eb63b1ec060c01b610b6d565b610bdb67a3f5c255d67cc36460c01b610b6d565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c7f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610d4c602c913960400191505060405180910390fd5b610c9367eac11ea12abcf59860c01b610b6d565b610ca76792057f91aa5d96c960c01b610b6d565b610cbb6787a1956e91409be260c01b6107b8565b610ccf67a3446e657e0ae27560c01b6107b8565b610ce367e77ac8bbf78e87cf60c01b6107b8565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fe436f6e74726f6c6c65643a206d73672e73656e646572206973206e6f742074686520636f6e74726f6c6c6572a164736f6c634300060c000a4163636f756e74436f6e74726f6c6c65723a2063616e6e6f7420736574206163636f756e7420496d706c656d656e746174696f6e20746f203078304163636f756e74436f6e74726f6c6c65723a2063616e6e6f742073656e6420746f2073656c664163636f756e74436f6e74726f6c6c65723a2063616e6e6f7420736574206163636f756e7420726567697374727920746f203078304163636f756e74436f6e74726f6c6c65723a2063616e6e6f742073656e6420746f203078304163636f756e74436f6e74726f6c6c65723a206163636f756e7420616c72656164792075706772616465644163636f756e74436f6e74726f6c6c65723a2063616e6e6f742073656e6420746f20636f6e74726f6c6c6572a164736f6c634300060c000a4163636f756e74436f6e74726f6c6c65723a2063616e6e6f7420736574206163636f756e7420496d706c656d656e746174696f6e20746f203078304163636f756e74436f6e74726f6c6c65723a2063616e6e6f7420736574206163636f756e7420726567697374727920746f20307830";

type AccountControllerMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccountControllerMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccountControllerMock__factory extends ContractFactory {
  constructor(...args: AccountControllerMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    accountRegistry_: string,
    accountImplementation_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AccountControllerMock> {
    return super.deploy(
      accountRegistry_,
      accountImplementation_,
      overrides || {}
    ) as Promise<AccountControllerMock>;
  }
  getDeployTransaction(
    accountRegistry_: string,
    accountImplementation_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      accountRegistry_,
      accountImplementation_,
      overrides || {}
    );
  }
  attach(address: string): AccountControllerMock {
    return super.attach(address) as AccountControllerMock;
  }
  connect(signer: Signer): AccountControllerMock__factory {
    return super.connect(signer) as AccountControllerMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountControllerMockInterface {
    return new utils.Interface(_abi) as AccountControllerMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccountControllerMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AccountControllerMock;
  }
}
