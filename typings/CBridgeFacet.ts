/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export type CBridgeDataStruct = {
  dstChainId: BigNumberish;
  nonce: BigNumberish;
  qty: BigNumberish;
  to: string;
  token: string;
};

export type CBridgeDataStructOutput = [
  BigNumber,
  BigNumber,
  BigNumber,
  string,
  string
] & {
  dstChainId: BigNumber;
  nonce: BigNumber;
  qty: BigNumber;
  to: string;
  token: string;
};

export interface CBridgeFacetInterface extends utils.Interface {
  functions: {
    "c_82a0834b(bytes8)": FunctionFragment;
    "c_9296fc39(bytes8)": FunctionFragment;
    "c_false82a0834b(bytes8)": FunctionFragment;
    "c_false9296fc39(bytes8)": FunctionFragment;
    "c_true82a0834b(bytes8)": FunctionFragment;
    "c_true9296fc39(bytes8)": FunctionFragment;
    "cbBridgeTokens((uint64,uint64,uint256,address,address))": FunctionFragment;
    "cbInitialize(address)": FunctionFragment;
    "cbUpdateBridge(address)": FunctionFragment;
    "cbUpdateSlippageTolerance(uint32)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "c_82a0834b",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "c_9296fc39",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "c_false82a0834b",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "c_false9296fc39",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "c_true82a0834b",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "c_true9296fc39",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "cbBridgeTokens",
    values: [CBridgeDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "cbInitialize",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "cbUpdateBridge",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "cbUpdateSlippageTolerance",
    values: [BigNumberish]
  ): string;

  decodeFunctionResult(functionFragment: "c_82a0834b", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "c_9296fc39", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "c_false82a0834b",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "c_false9296fc39",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "c_true82a0834b",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "c_true9296fc39",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cbBridgeTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cbInitialize",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cbUpdateBridge",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cbUpdateSlippageTolerance",
    data: BytesLike
  ): Result;

  events: {
    "CBInitialized(address,uint256)": EventFragment;
    "CBTransferStarted(string,address,address,address,uint256,uint256)": EventFragment;
    "CBUpdatedBridge(address)": EventFragment;
    "CBUpdatedSlippageTolerance(uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "CBInitialized"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "CBTransferStarted"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "CBUpdatedBridge"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "CBUpdatedSlippageTolerance"): EventFragment;
}

export type CBInitializedEvent = TypedEvent<
  [string, BigNumber],
  { cBridge: string; chainId: BigNumber }
>;

export type CBInitializedEventFilter = TypedEventFilter<CBInitializedEvent>;

export type CBTransferStartedEvent = TypedEvent<
  [string, string, string, string, BigNumber, BigNumber],
  {
    bridgeUsed: string;
    token: string;
    from: string;
    to: string;
    qty: BigNumber;
    chainIdTo: BigNumber;
  }
>;

export type CBTransferStartedEventFilter =
  TypedEventFilter<CBTransferStartedEvent>;

export type CBUpdatedBridgeEvent = TypedEvent<[string], { newAddress: string }>;

export type CBUpdatedBridgeEventFilter = TypedEventFilter<CBUpdatedBridgeEvent>;

export type CBUpdatedSlippageToleranceEvent = TypedEvent<
  [BigNumber],
  { newSlippage: BigNumber }
>;

export type CBUpdatedSlippageToleranceEventFilter =
  TypedEventFilter<CBUpdatedSlippageToleranceEvent>;

export interface CBridgeFacet extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: CBridgeFacetInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    c_82a0834b(
      c__82a0834b: BytesLike,
      overrides?: CallOverrides
    ): Promise<[void]>;

    c_9296fc39(
      c__9296fc39: BytesLike,
      overrides?: CallOverrides
    ): Promise<[void]>;

    c_false82a0834b(
      c__82a0834b: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    c_false9296fc39(
      c__9296fc39: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    c_true82a0834b(
      c__82a0834b: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    c_true9296fc39(
      c__9296fc39: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    cbBridgeTokens(
      _cbData: CBridgeDataStruct,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    cbInitialize(
      _cbBridge: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    cbUpdateBridge(
      _newAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    cbUpdateSlippageTolerance(
      _newSlippage: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  c_82a0834b(c__82a0834b: BytesLike, overrides?: CallOverrides): Promise<void>;

  c_9296fc39(c__9296fc39: BytesLike, overrides?: CallOverrides): Promise<void>;

  c_false82a0834b(
    c__82a0834b: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  c_false9296fc39(
    c__9296fc39: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  c_true82a0834b(
    c__82a0834b: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  c_true9296fc39(
    c__9296fc39: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  cbBridgeTokens(
    _cbData: CBridgeDataStruct,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  cbInitialize(
    _cbBridge: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  cbUpdateBridge(
    _newAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  cbUpdateSlippageTolerance(
    _newSlippage: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    c_82a0834b(
      c__82a0834b: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    c_9296fc39(
      c__9296fc39: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    c_false82a0834b(
      c__82a0834b: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    c_false9296fc39(
      c__9296fc39: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    c_true82a0834b(
      c__82a0834b: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    c_true9296fc39(
      c__9296fc39: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    cbBridgeTokens(
      _cbData: CBridgeDataStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    cbInitialize(_cbBridge: string, overrides?: CallOverrides): Promise<void>;

    cbUpdateBridge(
      _newAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    cbUpdateSlippageTolerance(
      _newSlippage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "CBInitialized(address,uint256)"(
      cBridge?: null,
      chainId?: null
    ): CBInitializedEventFilter;
    CBInitialized(cBridge?: null, chainId?: null): CBInitializedEventFilter;

    "CBTransferStarted(string,address,address,address,uint256,uint256)"(
      bridgeUsed?: null,
      token?: null,
      from?: null,
      to?: null,
      qty?: null,
      chainIdTo?: null
    ): CBTransferStartedEventFilter;
    CBTransferStarted(
      bridgeUsed?: null,
      token?: null,
      from?: null,
      to?: null,
      qty?: null,
      chainIdTo?: null
    ): CBTransferStartedEventFilter;

    "CBUpdatedBridge(address)"(newAddress?: null): CBUpdatedBridgeEventFilter;
    CBUpdatedBridge(newAddress?: null): CBUpdatedBridgeEventFilter;

    "CBUpdatedSlippageTolerance(uint256)"(
      newSlippage?: null
    ): CBUpdatedSlippageToleranceEventFilter;
    CBUpdatedSlippageTolerance(
      newSlippage?: null
    ): CBUpdatedSlippageToleranceEventFilter;
  };

  estimateGas: {
    c_82a0834b(
      c__82a0834b: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    c_9296fc39(
      c__9296fc39: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    c_false82a0834b(
      c__82a0834b: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    c_false9296fc39(
      c__9296fc39: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    c_true82a0834b(
      c__82a0834b: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    c_true9296fc39(
      c__9296fc39: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    cbBridgeTokens(
      _cbData: CBridgeDataStruct,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    cbInitialize(
      _cbBridge: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    cbUpdateBridge(
      _newAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    cbUpdateSlippageTolerance(
      _newSlippage: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    c_82a0834b(
      c__82a0834b: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    c_9296fc39(
      c__9296fc39: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    c_false82a0834b(
      c__82a0834b: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    c_false9296fc39(
      c__9296fc39: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    c_true82a0834b(
      c__82a0834b: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    c_true9296fc39(
      c__9296fc39: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    cbBridgeTokens(
      _cbData: CBridgeDataStruct,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    cbInitialize(
      _cbBridge: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    cbUpdateBridge(
      _newAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    cbUpdateSlippageTolerance(
      _newSlippage: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
