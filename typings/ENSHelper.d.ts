/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface ENSHelperInterface extends ethers.utils.Interface {
  functions: {
    "getAddresses(bytes32[])": FunctionFragment;
    "getNames(bytes32[])": FunctionFragment;
    "initialize(address)": FunctionFragment;
    "isInitialized()": FunctionFragment;
    "registry()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getAddresses",
    values: [BytesLike[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getNames",
    values: [BytesLike[]]
  ): string;
  encodeFunctionData(functionFragment: "initialize", values: [string]): string;
  encodeFunctionData(
    functionFragment: "isInitialized",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "registry", values?: undefined): string;

  decodeFunctionResult(
    functionFragment: "getAddresses",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getNames", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isInitialized",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "registry", data: BytesLike): Result;

  events: {
    "Initialized(address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Initialized"): EventFragment;
}

export class ENSHelper extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: ENSHelperInterface;

  functions: {
    getAddresses(
      nodes: BytesLike[],
      overrides?: CallOverrides
    ): Promise<[string[]]>;

    "getAddresses(bytes32[])"(
      nodes: BytesLike[],
      overrides?: CallOverrides
    ): Promise<[string[]]>;

    getNames(
      nodes: BytesLike[],
      overrides?: CallOverrides
    ): Promise<[string[]]>;

    "getNames(bytes32[])"(
      nodes: BytesLike[],
      overrides?: CallOverrides
    ): Promise<[string[]]>;

    initialize(
      registry_: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "initialize(address)"(
      registry_: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    isInitialized(overrides?: CallOverrides): Promise<[boolean]>;

    "isInitialized()"(overrides?: CallOverrides): Promise<[boolean]>;

    registry(overrides?: CallOverrides): Promise<[string]>;

    "registry()"(overrides?: CallOverrides): Promise<[string]>;
  };

  getAddresses(
    nodes: BytesLike[],
    overrides?: CallOverrides
  ): Promise<string[]>;

  "getAddresses(bytes32[])"(
    nodes: BytesLike[],
    overrides?: CallOverrides
  ): Promise<string[]>;

  getNames(nodes: BytesLike[], overrides?: CallOverrides): Promise<string[]>;

  "getNames(bytes32[])"(
    nodes: BytesLike[],
    overrides?: CallOverrides
  ): Promise<string[]>;

  initialize(
    registry_: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "initialize(address)"(
    registry_: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  isInitialized(overrides?: CallOverrides): Promise<boolean>;

  "isInitialized()"(overrides?: CallOverrides): Promise<boolean>;

  registry(overrides?: CallOverrides): Promise<string>;

  "registry()"(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    getAddresses(
      nodes: BytesLike[],
      overrides?: CallOverrides
    ): Promise<string[]>;

    "getAddresses(bytes32[])"(
      nodes: BytesLike[],
      overrides?: CallOverrides
    ): Promise<string[]>;

    getNames(nodes: BytesLike[], overrides?: CallOverrides): Promise<string[]>;

    "getNames(bytes32[])"(
      nodes: BytesLike[],
      overrides?: CallOverrides
    ): Promise<string[]>;

    initialize(registry_: string, overrides?: CallOverrides): Promise<void>;

    "initialize(address)"(
      registry_: string,
      overrides?: CallOverrides
    ): Promise<void>;

    isInitialized(overrides?: CallOverrides): Promise<boolean>;

    "isInitialized()"(overrides?: CallOverrides): Promise<boolean>;

    registry(overrides?: CallOverrides): Promise<string>;

    "registry()"(overrides?: CallOverrides): Promise<string>;
  };

  filters: {
    Initialized(initializer: null): EventFilter;
  };

  estimateGas: {
    getAddresses(
      nodes: BytesLike[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAddresses(bytes32[])"(
      nodes: BytesLike[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getNames(nodes: BytesLike[], overrides?: CallOverrides): Promise<BigNumber>;

    "getNames(bytes32[])"(
      nodes: BytesLike[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    initialize(registry_: string, overrides?: Overrides): Promise<BigNumber>;

    "initialize(address)"(
      registry_: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    isInitialized(overrides?: CallOverrides): Promise<BigNumber>;

    "isInitialized()"(overrides?: CallOverrides): Promise<BigNumber>;

    registry(overrides?: CallOverrides): Promise<BigNumber>;

    "registry()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    getAddresses(
      nodes: BytesLike[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAddresses(bytes32[])"(
      nodes: BytesLike[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getNames(
      nodes: BytesLike[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getNames(bytes32[])"(
      nodes: BytesLike[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initialize(
      registry_: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "initialize(address)"(
      registry_: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    isInitialized(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "isInitialized()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    registry(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "registry()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
